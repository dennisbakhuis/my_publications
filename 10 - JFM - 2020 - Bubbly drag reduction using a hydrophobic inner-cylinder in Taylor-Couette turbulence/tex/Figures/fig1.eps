%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 1 1 385 118
%%HiResBoundingBox: 1.30 1.60 384.10 117.40
%%Creator: GPL Ghostscript 923 (eps2write)
%%LanguageLevel: 2
%%CreationDate: D:20191022144858+02'00'
%%Pages: 1
%%EndComments
%%BeginProlog
/DSC_OPDFREAD true def
/SetPageSize false def
/EPS2Write true def
currentdict/DSC_OPDFREAD known{
currentdict/DSC_OPDFREAD get
}{
false
}ifelse
10 dict begin
/DSC_OPDFREAD exch def
/this currentdict def
/y 720 def
/ebuf 200 string def
/prnt{
36//this/y get moveto//ebuf cvs show
//this/y 2 copy get 12 sub put
}bind def
/newline{
36//this/y get moveto
//this/y 2 copy get 12 sub put
}bind def
errordict/handleerror
{systemdict begin
$error begin
newerror
{(%%[ Error handled by opdfread.ps : )print errorname//ebuf cvs print(; OffendingCommand: )
print/command load//ebuf cvs print( ]%%)= flush
/newerror false store vmstatus pop pop 0 ne
{grestoreall
}if
errorname(VMerror)ne
{showpage
}if
initgraphics
0 720 moveto
errorname(VMerror)eq
{//this/ehsave known
{clear//this/ehsave get restore 2 vmreclaim
}if
vmstatus exch pop exch pop
}
/Courier 12 selectfont
{
(ERROR: )//prnt exec errorname//prnt exec
(OFFENDING COMMAND: )//prnt exec
/command load//prnt exec
$error/ostack known{
(%%[STACK:)=
(STACK:)//prnt exec
$error/ostack get aload length{
//newline exec
dup mark eq{
(-mark-)dup = show
}{
dup type/nametype eq{
dup xcheck not{
(/)show
(/)print
}if
}if
dup =//ebuf cvs show
}ifelse
}repeat
}if
}ifelse
(%%]%)=
//systemdict/showpage get exec
quit
}if
end
end
}bind readonly put
end
50 dict begin
/DefaultSwitch
{
dup where{
pop pop
}{
false def
}ifelse
}bind def
/=string 256 string def
/=only{
//=string cvs print
}bind def
/HexDigits(0123456789ABCDEF)readonly def
/PrintHex
{8{
dup -28 bitshift 15 and//HexDigits exch 1 getinterval//=only exec
4 bitshift
}repeat
pop
}bind def
/PDFR_DEBUG DefaultSwitch
/PDFR_DUMP DefaultSwitch
/PDFR_STREAM DefaultSwitch
/TTFDEBUG DefaultSwitch
/RotatePages DefaultSwitch
/FitPages DefaultSwitch
/CenterPages DefaultSwitch
/SetPageSize DefaultSwitch
/error
{
counttomark 1 sub -1 0{
index dup type/arraytype eq{==}{=only}ifelse
}for
()=
cleartomark
....Undefined
}bind def
//SetPageSize{
//RotatePages//FitPages or//CenterPages or{
mark(/RotatePages, /FitPages and CenterPages are not allowed with /SetPageSize)//error exec
}if
}
{
//FitPages//CenterPages and{
mark(CenterPages is not allowed with /FitPages)//error exec
}if
}
ifelse
/knownget
{
2 copy known{
get true
}{
pop pop false
}ifelse
}bind def
/IsUpper
{dup(A)0 get ge exch(Z)0 get le and
}bind def
/cpa2g{
dup length array
0 1 2 index length 1 sub{
dup 3 index exch get cp2g
3 copy put pop pop
}for
exch pop
}bind def
/cpd2g{
dup length dict exch{
cp2g 2 index 3 1 roll put
}forall
}bind def
/cps2g{
dup length string copy
}bind def
/cp2gprocs
<</arraytype//cpa2g/dicttype//cpd2g/packedarraytype//cpa2g/stringtype//cps2g >>
def
/cp2g{
dup gcheck not{
dup//cp2gprocs 1 index type
2 copy known{
get currentglobal 3 1 roll true setglobal exec exch setglobal
1 index wcheck not{readonly}if
1 index xcheck{cvx}if
exch pop
}{
pop pop
}ifelse
}if
}bind def
/BlockBuffer 65535 string def
/PDFReader currentdict def
/ObjectRegistryMaxLength 50000 def
/ObjectRegistry 10 dict def
ObjectRegistry
begin
0 ObjectRegistryMaxLength dict def
end
/CurrentObject null def
/DoneDocumentStructure false def
/GraphicState 20 dict begin
/InitialTextMatrix matrix def
/InitialMatrix matrix currentmatrix def
currentdict end def
/TempMatrix matrix def
/GraphicStateStack 20 array def
/GraphicStateStackPointer 0 def
/InitialTextMatrixStack 20 array def
/InitialTextMatrixStackPointer 0 def
/PDFColorSpaces 50 dict def
/InstalledFonts 50 dict def
/MacRomanEncodingInverse null def
currentglobal false setglobal
userdict/PDFR_InitialGS gstate put
userdict/PDFR_Patterns 50 dict put
userdict/FuncDataReader 10 dict put
setglobal
/InitialExtGState 20 dict begin
/BG2 currentblackgeneration cp2g def
/UCR2 currentundercolorremoval cp2g def
/TR2 currentglobal false setglobal[currentcolortransfer]exch setglobal cp2g def
/HT currenthalftone cp2g def
currentdict end readonly def
/InitialGraphicState 20 dict begin
/FontSize 0 def
/CharacterSpacing 0 def
/TextLeading 0 def
/TextRenderingMode 0 def
/WordSpacing 0 def
currentdict end readonly def
/SimpleColorSpaceNames 15 dict begin
/DeviceGray true def
/DeviceRGB true def
/DeviceCMYK true def
currentdict end readonly def
/1_24_bitshift_1_sub 1 24 bitshift 1 sub def
/ReadFontProcs 10 dict def
/GetObject
{
dup ObjectRegistryMaxLength idiv
//PDFReader/ObjectRegistry get exch knownget{
exch knownget
}{
pop false
}ifelse
}bind def
/PutObject
{
1 index ObjectRegistryMaxLength idiv
//PDFReader/ObjectRegistry get 1 index knownget{
exch pop
3 1 roll put
}{
//PDFReader/ObjectRegistry get dup
begin
1 index ObjectRegistryMaxLength dict def
end
exch get
3 1 roll put
}ifelse
}bind def
/Register
{
1 index GetObject{
dup xcheck{
4 3 roll pop
//PDFR_DEBUG{
(Have a daemon for )print 2 index ==
}if
exec
}{
dup null ne{
mark(The object )4 index(is already defined : )4 index//error exec
}{
pop
}ifelse
3 2 roll
exec
}ifelse
}{
3 2 roll
exec
}ifelse
PutObject
}bind def
/IsRegistered
{
GetObject{
null ne
}{
false
}ifelse
}bind def
/GetRegistered
{
dup GetObject not{
exch mark exch(Object )exch( isn't defined before needed (1).)//error exec
}if
dup xcheck{
exch mark exch(Object )exch( isn't defined before needed (2).)//error exec
}{
dup null eq{
exch mark exch(Object )exch( isn't defined before needed (3).)//error exec
}if
exch pop
}ifelse
}bind def
/StandardFontNames<<
/Times-Roman true
/Helvetica true
/Courier true
/Symbol true
/Times-Bold true
/Helvetica-Bold true
/Courier-Bold true
/ZapfDingbats true
/Times-Italic true
/Helvetica-Oblique true
/Courier-Oblique true
/Times-BoldItalic true
/Helvetica-BoldOblique true
/Courier-BoldOblique true
>>def
/CleanAllResources
{//PDFR_DEBUG{
(CleanAllResources beg)=
}if
//PDFReader/ObjectRegistry get{
dup length 0 exch 1 exch 1 sub{
2 copy get dup xcheck{
pop pop
}{
dup null eq{
pop pop
}{
dup type/dicttype eq{/.Global known}{pop false}ifelse{
pop
}{
//PDFR_DEBUG{
(Dropping )print dup =
}if
1 index exch/DroppedObject put
}ifelse
}ifelse
}ifelse
}for
pop
}forall
FontDirectory length dict begin
FontDirectory{
pop
dup//StandardFontNames exch known not{
dup null def
}if
pop
}forall
currentdict
end{
pop
//PDFR_DEBUG{
(Undefining font )print dup =
}if
undefinefont
}forall
//PDFR_DEBUG{
(CleanAllResources end)=
}if
}bind def
/PrintReference
{
//PDFR_DEBUG{
({ )print
dup{
=only( )print
}forall
( })=
}if
}bind def
/R
{
0 ne{
exch mark exch(A referred object generation )exch( isn't 0.)//error exec
}if
[
exch//GetRegistered/exec load
]cvx
//PrintReference exec
}bind def
/IsObjRef
{
dup type/arraytype eq{
dup length 3 eq{
dup xcheck exch
dup 0 get type/integertype eq 3 2 roll and exch
dup 1 get//GetRegistered eq 3 2 roll and exch
2 get/exec load eq and
}{
pop false
}ifelse
}{
pop false
}ifelse
}bind def
/DoNothing
{
}def
/RunTypeDaemon
{
dup type/dicttype eq{
dup/Type//knownget exec{
//PDFReader/TypeDaemons get exch
//knownget exec{
exec
}if
}if
}if
}bind def
/obj
{
//PDFR_DEBUG{
(Defining )print 1 index =only( )print dup =only( obj)=
}if
0 ne{
exch mark exch(An object generation )exch( isn't 0.)//error exec
}if
}bind def
/endobj
{
//PDFR_DEBUG{
(endobj )=
}if
count 1 eq{
pop
}{
dup type/dicttype eq{
dup/.endobj_daemon//knownget exec{
//PDFR_DEBUG{(.endobj_daemon for )print 2 index =}if
exec
}if
}if
dup type/dicttype eq{dup/ImmediateExec known}{false}ifelse{
pop pop
}{
//PDFR_DEBUG{
(Storing )print 1 index =
}if
//RunTypeDaemon exec
//DoNothing 3 1 roll//Register exec
}ifelse
}ifelse
}bind def
/StoreBlock
{
//PDFR_DEBUG{
(StoreBlock )print//PDFReader/BlockCount get =only(, Length = )print dup length =
}if
dup length string copy
//PDFReader/BlockCount get exch
//PDFReader/CurrentObject get 3 1 roll
put
//PDFReader/BlockCount get 1 add
//PDFReader exch/BlockCount exch put
}bind def
/CheckLength
{dup type/integertype ne{
mark(Object length isn't an integer.)//error exec
}if
}bind def
/ResolveD
{
3 copy pop get
dup//IsObjRef exec{
//PDFR_DEBUG{
(Resolving )print//PrintReference exec
}if
exec
exch exec
}{
exch pop
}ifelse
dup 4 1 roll
put
}bind def
/ResolveA
{2 index 2 index get
dup//IsObjRef exec{
exec
exch exec
3 copy put
}{
exch pop
}ifelse
exch pop exch pop
}bind def
/StoreStream
{
dup//PDFReader exch/CurrentObject exch put
//PDFReader/BlockCount 0 put
dup/Length//CheckLength//ResolveD exec
//PDFR_DEBUG{
(StoreStream Length = )print dup =
}if
currentfile exch()/SubFileDecode filter
{dup//BlockBuffer readstring{
//StoreBlock exec
}{
//StoreBlock exec
exit
}ifelse
}loop
pop
//PDFReader/CurrentObject null put
//PDFR_DEBUG{
(StoreStream end.)=
}if
}bind def
/MakeStreamDumper
{
//PDFR_DEBUG{
(MakeStreamDumper beg.)=
}if
currentglobal exch dup gcheck setglobal
[exch
1 dict dup/c 0 put exch
1024 string
{readstring pop
(StreamDumper )print 1 index/c get =string cvs print( )print
dup length =string cvs print( <)print dup print(>\n)print
dup length
3 2 roll
dup/c get
3 2 roll
add/c exch put
}/exec load
]
cvx 0()/SubFileDecode filter
exch setglobal
//PDFR_DEBUG{
(MakeStreamDumper end.)=
}if
}bind def
/ShortFilterNames 15 dict begin
/AHx/ASCIIHexDecode def
/A85/ASCII85Decode def
/LZW/LZWDecode def
/Fl/FlateDecode def
/RL/RunLengthDecode def
/CCF/CCITTFaxDecode def
/DCT/DCTDecode def
currentdict end readonly def
/AppendFilters
{
//PDFR_DEBUG{
(AppendFilters beg.)=
}if
dup 3 1 roll
/Filter//knownget exec{
dup type/nametype eq{
dup//ShortFilterNames exch//knownget exec{
exch pop
}if
2 index/DecodeParms//knownget exec{
exch
}if
filter
}{
dup 0 exch 1 exch length 1 sub{
2 copy get
dup//ShortFilterNames exch//knownget exec{
exch pop
}if
3 1 roll
4 index/DecodeParms//knownget exec{
exch get
}{
pop null
}ifelse
dup null eq{
pop 3 1 roll filter exch
}{
3 1 roll
4 1 roll filter exch
}ifelse
}for
pop
}ifelse
//PDFR_DEBUG//PDFR_DUMP and{
//MakeStreamDumper exec
}if
}if
exch pop
//PDFR_DEBUG{
(AppendFilters end.)=
}if
}bind def
/ExecuteStream
{
dup//PDFReader exch/CurrentObject exch put
dup/Length//CheckLength//ResolveD exec
//PDFR_DEBUG{
(ExecuteStream id = )print 2 index =only( Length = )print dup =
}if
//PDFReader/InitialGraphicState get
//PDFReader/GraphicState get copy pop
//PDFReader/Operators get begin
currentfile exch()/SubFileDecode filter
1 index//AppendFilters exec
cvx mark exch
exec
counttomark 0 ne{
mark(Data left on ostack after an immediate stream execution.)//error exec
}if
cleartomark
end
//PDFR_DEBUG{
(ExecuteStream end.)=
}if
//PDFReader/CurrentObject null put
dup/IsPage known{
dup/Context get/NumCopies//knownget exec{
1 sub{
copypage
}repeat
}if
EPS2Write not{showpage}if
}if
}bind def
/stream
{
//PDFR_DEBUG{
1 index =only( stream)=
}if
1 index GetObject{
dup xcheck{
exec
1 index null PutObject
}{
pop
}ifelse
}if
dup/ImmediateExec known{
dup/GlobalExec//knownget exec{
currentglobal 4 1 roll
setglobal
//ExecuteStream exec
3 2 roll setglobal
}{
//ExecuteStream exec
}ifelse
}{
//StoreStream exec
}ifelse
dup/.CleanResources//knownget exec{
/All eq{
//CleanAllResources exec
}if
}if
}bind def
/HookFont
{
//PDFR_DEBUG{
(Loaded the font )print dup/FontName get =
}if
{
dup/FontFileType get dup/Type1 eq exch/MMType1 eq or{
dup/FontName get
//PDFReader/RemoveFontNamePrefix get exec
findfont
exit
}if
dup/FontFileType get/TrueType eq{
//PDFReader/MakeType42 get exec
//PDFR_DEBUG{
(Font dict <<)=
dup{
1 index/sfnts eq{
exch pop
(/sfnts [)print
{
(-string\()print length//=only exec(\)- )=
}forall
(])=
}{
exch//=only exec( )print ==
}ifelse
}forall
(>>)=
}if
dup/FontName get exch definefont
exit
}if
mark(FontHook has no proc for )2 index/FontFileType get//error exec
}loop
/Font exch put
}bind def
/endstream
{
}bind def
/xref
{
//PDFR_DEBUG{
(xref)=
//PDFR_DUMP{
//PDFReader/ObjectRegistry get ==
}if
}if
end
count 0 ne{
mark(Excessive data on estack at the end of the interpretation.)//error exec
}if
currentfile 1(%%EOF)/SubFileDecode filter
flushfile
cleardictstack
}bind def
/ResolveDict
{dup{
pop 1 index exch
//DoNothing//ResolveD exec
pop
}forall
pop
}bind def
/SetupPageView
{
//PDFR_DEBUG{
(SetupPageView beg)=
}if
//DSC_OPDFREAD not{
//GraphicState/InitialMatrix get setmatrix
}if
/MediaBox get aload pop
3 index neg 3 index neg translate
3 -1 roll sub 3 1 roll exch sub exch
userdict/.HWMargins//knownget exec{
aload pop
}{
currentpagedevice/.HWMargins//knownget exec{
aload pop
}{
0 0 0 0
}ifelse
}ifelse
currentpagedevice/PageSize get aload pop
3 -1 roll sub 3 1 roll exch sub exch
exch 3 index sub exch 3 index sub
//SetPageSize{
//PDFR_DEBUG{
(Setting page size to )print 1 index//=only exec( )print dup =
}if
pop pop 3 index 3 index 2 copy
currentglobal false setglobal 3 1 roll
currentpagedevice dup/PageSize known{
/PageSize get aload pop
}{
0 0
}ifelse
round cvi 2 index round cvi eq
exch round cvi 3 index round cvi eq and
{
//PDFR_DEBUG{(PageSize matches request)== flush}if
pop pop
}{
/MediaRequested where{
//PDFR_DEBUG{(MediaRequested is true, check against new request)== flush}if
/MediaRequested get aload pop
round cvi 2 index round cvi eq
exch round cvi 3 index round cvi eq and
{
//PDFR_DEBUG{(MediaRequested same as current request, ignore)== flush}if
pop pop false
}{
//PDFR_DEBUG{(MediaRequested different to current request)== flush}if
true
}ifelse
}{
//PDFR_DEBUG{(No MediaRequested yet)== flush}if
true
}ifelse
{
//PDFR_DEBUG{(Setting pagesize)== flush}if
2 array astore
dup/MediaRequested exch def
<< exch/PageSize exch >>setpagedevice
}if
}ifelse
userdict/PDFR_InitialGS gstate put
setglobal
}if
//RotatePages{
2 copy gt 6 index 6 index gt ne{
1 index 5 index le 1 index 5 index le and not
}{
false
}ifelse
}{
false
}ifelse
{//CenterPages{
//PDFR_DEBUG{
(Rotating page, and then centering it)==
}if
90 rotate
0 5 index neg translate
5 index 1 index exch sub 2 div
2 index 6 index sub 2 div neg
translate
}{
//FitPages{
1 index 5 index div 1 index 7 index div
2 copy gt{
exch
}if
pop dup scale
}if
90 rotate
0 5 index neg translate
}ifelse
}{
//CenterPages{
//PDFR_DEBUG{
(Ccentering page)==
}if
1 index 6 index sub 2 div
1 index 6 index sub 2 div
translate
}{
//FitPages{
1 index 6 index div 1 index 6 index div
2 copy gt{
exch
}if
pop dup scale
}if
}ifelse
}ifelse
pop pop
translate
pop pop
//PDFR_DEBUG{
(SetupPageView end)=
}if
}bind def
/PageContentsDaemon
{
//PDFR_DEBUG{
(Executing PageContentsDaemon for )print 2 index =
}if
1 index exch/Context exch put
dup/ImmediateExec true put
dup/IsPage true put
SetPageSize{dup/Context get//SetupPageView exec}if
}bind def
/FontFileDaemon
{
//PDFR_DEBUG{
(Executing FontFileDaemon for )print 2 index =
}if
dup/FontFileType get
2 index exch
dup//ReadFontProcs exch//knownget exec{
exch pop exec
}{
mark(FontFile reader for )2 index( isn't implemented yet.)//error exec
}ifelse
//PDFR_DEBUG{
(FontFileDaemon end)=
}if
pop
}bind def
/FontDescriptorDaemon
{
//PDFR_DEBUG{
(Executing FontDescriptorDaemon for )print 2 index =
}if
2 copy/FontResource exch put
/Subtype get 1 index exch/FontFileType exch put
}bind def
/UnPDFEscape{
dup dup length string cvs
dup(#)search{
{
pop
(16#--)2 index 0 2 getinterval
1 index 3 2 getinterval copy pop
cvi
0 exch put
0
1 index 2 1 index length 2 sub getinterval
3 copy putinterval
length
3 copy exch put
getinterval
(#)search not{
pop exit
}if
}loop
(\0)search pop exch pop exch pop
cvn
exch pop
}{
pop pop
}ifelse
}bind def
/TypeDaemons<<
/Page
{//PDFR_DEBUG{
(Recognized a page.)=
}if
dup/Contents//knownget exec{
0 get//DoNothing exch
[
3 index//PageContentsDaemon/exec load
]cvx
//Register exec
}{
(fixme: page with no Contents won't be printed.)=
}ifelse
}bind
/FontDescriptor
{//PDFR_DEBUG{
(Recognized a font descriptor.)=
}if
dup/FontName//knownget exec{
1 index/FontName 3 -1 roll//UnPDFEscape exec put
}if
dup dup/FontFile known{/FontFile}{/FontFile2}ifelse
//knownget exec{
0 get//DoNothing exch
[
3 index//FontFileDaemon/exec load
]cvx
//Register exec
}{
(Font descriptor )print 1 index =only( has no FontFile.)=
}ifelse
}bind
/Font
{//PDFR_DEBUG{
(Recognized a font resource.)=
}if
dup/BaseFont//knownget exec{
//UnPDFEscape exec 2 copy/BaseFont exch put
//PDFReader/RemoveFontNamePrefix get exec
currentglobal exch
dup/Font resourcestatus{
pop pop
//PDFReader/GetInstalledFont get exec pop
}{
pop
}ifelse
setglobal
}if
dup/FontDescriptor//knownget exec{
0 get
dup//IsRegistered exec{
//PDFR_DEBUG{
(already registered )print dup =
}if
pop
}{
//DoNothing exch
[
3 index//FontDescriptorDaemon/exec load
]cvx
//Register exec
}ifelse
}if
}bind
>>def
/MakeStreamReader
{dup
[
exch
//PDFR_DEBUG{
(Stream proc )
/print load
//PDFR_STREAM{
(<)
/print load
}if
}if
1 dict dup/i -1 put
/dup load
/i
/get load
1
/add load
/dup load
3
1
/roll load
/i
/exch load
/put load
//knownget
/exec load
/not load
{()}
/if load
//PDFR_DEBUG{
//PDFR_STREAM{
/dup load
/print load
(>)
/print load
}if
( end of stream proc.\n)
/print load
}if
]cvx
//PDFR_DEBUG{
(Stream reader )print dup ==
}if
0()/SubFileDecode filter
exch//AppendFilters exec
}bind def
/RunDelayedStream
{
//GraphicState/InitialTextMatrix get
//InitialTextMatrixStack//PDFReader/InitialTextMatrixStackPointer get
2 copy get null eq{
2 copy currentglobal true setglobal matrix exch setglobal put
}if
get copy pop
//PDFReader/InitialTextMatrixStackPointer 2 copy get 1 add put
//MakeStreamReader exec
mark exch
cvx exec
counttomark 0 ne{
mark(Data left on ostack after a delayed stream execution.)//error exec
}if
cleartomark
//PDFReader/InitialTextMatrixStackPointer 2 copy get 1 sub put
//InitialTextMatrixStack//PDFReader/InitialTextMatrixStackPointer get get
//GraphicState/InitialTextMatrix get
copy pop
}bind def
//ReadFontProcs begin
/Type1
{//PDFR_DEBUG{
(ReadFontProcs.Type1)=
}if
dup/.endobj_daemon[4 index//HookFont/exec load]cvx put
dup/ImmediateExec true put
/GlobalExec true put
}bind def
/MMType1//Type1 def
/TrueType
{//PDFR_DEBUG{
(ReadFontProcs.TrueType)=
}if
dup/.endobj_daemon[4 index//HookFont/exec load]cvx put
pop
}bind def
end
/.opdloadttfontdict 50 dict def
.opdloadttfontdict begin
/maxstring 65400 def
end
/.InsertionSort
{
/CompareProc exch def
/Array exch def
1 1 Array length 1 sub
{
/Ix exch def
/Value1 Array Ix get def
/Jx Ix 1 sub def
{
Jx 0 lt{
exit
}if
/Value2 Array Jx get def
Value1 Value2 CompareProc{
exit
}if
Array Jx 1 add Value2 put
/Jx Jx 1 sub def
}loop
Array Jx 1 add Value1 put
}for
Array
}bind def
/putu16{
3 copy -8 bitshift put
exch 1 add exch 16#ff and put
}bind def
/putu32{
3 copy -16 bitshift putu16
exch 2 add exch 16#ffff and putu16
}bind def
/.readtable{
dup dup 1 and add string
dup 0 4 -1 roll getinterval
3 -1 roll exch
dup()ne{readstring}if pop pop
}bind def
/.readbigtable{
dup maxstring lt{
.readtable
}{
currentuserparams/VMReclaim get -2 vmreclaim
[4 2 roll{
dup maxstring le{exit}if
1 index maxstring string readstring pop 3 1 roll maxstring sub
}loop .readtable]
exch vmreclaim
}ifelse
}bind def
/ReadTTF
{
.opdloadttfontdict begin
/TTFontFile exch def
/TableDir TTFontFile 12 string readstring pop def
/tables TTFontFile TableDir 4 getu16 16 mul string readstring pop def
/tabarray tables length 16 idiv array def
TableDir 0 4 getinterval(ttcf)eq{
QUIET not{(Can't handle TrueType font Collections.)=}if
/.loadttfonttables cvx/invalidfont signalerror
}{
0 16 tables length 1 sub{
dup
tables exch 16 getinterval
exch 16 div cvi exch
tabarray 3 1 roll put
}for
}ifelse
tabarray{exch 8 getu32 exch 8 getu32 gt}.InsertionSort pop
/Read TableDir length tables length add def
/tabs[
tabarray{
dup 8 getu32
Read sub
dup 0 gt{
dup string TTFontFile exch readstring pop pop
Read add/Read exch def
}{
pop
}ifelse
12 getu32
dup Read add
/Read exch def
TTFontFile exch .readbigtable
}forall
]def
end
}bind def
/GetLocaType
{
0 1 tabarray length 1 sub{
dup tabarray exch get
0 4 getinterval(head)eq{
tabs exch get
50 gets16
/LocaType exch def
exit
}{
pop
}ifelse
}for
}bind def
/GetNumGlyphs
{
0 1 tabarray length 1 sub{
dup tabarray exch get
0 4 getinterval(maxp)eq{
tabs exch get
4 getu16
/NumGlyphs exch def
exit
}{
pop
}ifelse
}for
}bind def
/StringToLoca
{
/LocaIndex exch def
/StringOffset 0 def
{
dup length StringOffset gt{
dup
LocaType 1 eq{
StringOffset getu32
LocaArray LocaIndex 3 -1 roll put
/LocaIndex LocaIndex 1 add def
/StringOffset StringOffset 4 add
def
}{
StringOffset getu16 2 mul
LocaArray length LocaIndex gt{
LocaArray LocaIndex 3 -1 roll put
}{
pop
}ifelse
/LocaIndex LocaIndex 1 add def
/StringOffset StringOffset 2 add
def
}ifelse
}{
pop
LocaIndex
exit
}ifelse
}loop
}bind def
/GetSortedLoca
{
NumGlyphs 1 add array/LocaArray exch def
0 1 tabarray length 1 sub{
dup tabarray exch get
0 4 getinterval(loca)eq{
tabs exch get
exit
}{
pop
}ifelse
}for
dup type/stringtype eq{
0 StringToLoca pop
}{
0 exch
{
exch StringToLoca
}forall
pop
}ifelse
LocaArray{gt}.InsertionSort pop
}bind def
/GetWorkingString
{
WorkString 0
GlyfArray GlyfStringIndex get
putinterval
/WorkBytes GlyfArray GlyfStringIndex get length def
/GlyfStringIndex GlyfStringIndex 1 add def
}bind def
/GetWorkingBytes
{
/BytesToRead exch def
WorkString 0 BytesToRead getinterval
dup length string copy
WorkString BytesToRead WorkBytes BytesToRead sub getinterval
dup length string copy
WorkString 0 3 -1 roll putinterval
/WorkBytes WorkBytes BytesToRead sub def
}bind def
/GetGlyfBytes
{
/ToRead exch def
WorkBytes 0 eq{
GetWorkingString
}if
WorkBytes ToRead ge{
ToRead string dup 0
ToRead GetWorkingBytes putinterval
}{
ToRead string
dup
0
WorkString 0 WorkBytes getinterval
putinterval
dup
WorkBytes
ToRead WorkBytes sub
GetWorkingString
GetWorkingBytes
putinterval
}ifelse
}bind def
/SplitGlyf
{
/GlyfArray exch def
/DestArray GlyfArray length 2 mul array def
/DestArrayIndex 0 def
/LastLoca 0 def
/NextLocaIndex 0 def
/LastLocaIndex 0 def
/GlyfStringIndex 0 def
/WorkString maxstring string def
/WorkBytes 0 def
{
LocaArray NextLocaIndex get
LastLoca sub maxstring gt
{
LocaArray LastLocaIndex get LastLoca sub
GetGlyfBytes
DestArray DestArrayIndex 3 -1 roll put
/DestArrayIndex DestArrayIndex 1 add def
LocaArray LastLocaIndex get/LastLoca exch def
}{
/LastLocaIndex NextLocaIndex def
/NextLocaIndex NextLocaIndex 1 add def
NextLocaIndex NumGlyphs gt
{
WorkBytes
GlyfStringIndex GlyfArray length lt{
GlyfArray GlyfStringIndex get length
add string dup
0
WorkString 0 WorkBytes getinterval
putinterval
dup
WorkBytes
GetWorkingString
WorkString 0 WorkBytes getinterval
putinterval
}{
pop
WorkString 0 WorkBytes getinterval
}ifelse
dup length string copy
DestArray DestArrayIndex 3 -1 roll put
exit
}if
}ifelse
}loop
DestArray
}bind def
/ProcessTTData
{
.opdloadttfontdict begin
0 1 tabarray length 1 sub{
/ix exch def
tabarray ix get
12 getu32 dup maxstring le{
dup 4 mod 0 ne{
4 div cvi 1 add 4 mul string/newstring exch def
/oldstring tabs ix get def
newstring 0 oldstring putinterval
0 1 newstring length oldstring length sub 1 sub{
newstring exch oldstring length add 0 put
}for
tabs ix newstring put
}{
pop
}ifelse
}{
dup 4 mod 0 ne{
dup maxstring idiv maxstring mul sub
4 idiv 1 add 4 mul string/newstring exch def
tabs ix get
dup length 1 sub dup/iy exch def get/oldstring exch def
newstring 0 oldstring putinterval
0 1 newstring length oldstring length sub 1 sub{
newstring exch oldstring length add 0 put
}for
tabs ix get iy newstring put
}{
pop
}ifelse
}ifelse
}for
0 1 tabarray length 1 sub{
dup tabarray exch get
dup 12 getu32 maxstring gt{
0 4 getinterval dup(glyf)eq{
pop
GetLocaType
GetNumGlyphs
GetSortedLoca
dup tabs exch get
SplitGlyf
tabs 3 1 roll put
}{
(Warning, table )print print( > 64Kb\n)print
pop
}ifelse
}{
pop
pop
}ifelse
}for
end
}bind def
/Makesfnts
{
.opdloadttfontdict begin
0
tabs{
dup type/stringtype eq{
pop
1 add
}{
{
type/stringtype eq{
1 add
}if
}forall
}ifelse
}forall
1 add
/TTOffset
TableDir length
tabarray length 16 mul add
def
0
tabarray{
exch dup 1 add
3 1 roll
dup
tabs exch get
dup type/stringtype eq{
length
2 index exch
TTOffset
dup 3 1 roll add
/TTOffset exch def
8 exch putu32
exch tabarray 3 1 roll
put
}{
0 exch
{
dup type/stringtype eq{
length add
}{
pop
}ifelse
}forall
2 index exch
TTOffset
dup 3 1 roll add
/TTOffset exch def
8 exch putu32
exch tabarray 3 1 roll
put
}ifelse
}forall
pop
array
dup 0
TableDir length
tables length add
string
dup 0 TableDir putinterval
dup 12 tables putinterval
put
dup
/ix 1 def
tabs{
dup type/stringtype eq{
ix exch
put dup
/ix ix 1 add def
}{
{
dup type/stringtype eq{
ix exch put dup
/ix ix 1 add def
}{
pop
}ifelse
}forall
}ifelse
}forall
pop
end
}bind def
/MakeType42
{
//PDFR_DEBUG{
(MakeType42 beg)=
}if
10 dict begin
/FontName 1 index/FontName get def
/FontType 42 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox 1 index/FontBBox get def
dup/FontResource get
dup/Encoding known{
//PDFReader/ObtainEncoding get exec
/Encoding get
}{
pop null
}ifelse
/PDFEncoding exch def
/CharStrings 2 index//PDFReader/MakeTTCharStrings get exec def
/sfnts 2 index//MakeStreamReader exec
ReadTTF
ProcessTTData
Makesfnts
def
/Encoding StandardEncoding def
/PaintType 0 def
currentdict end
//PDFR_DEBUG{
(MakeType42 end)=
}if
}bind def
/GetInstalledFont
{
dup//InstalledFonts exch knownget{
exch pop
}{
dup findfont dup 3 1 roll
//InstalledFonts 3 1 roll put
}ifelse
}bind def
/RemoveFontNamePrefix
{//=string cvs true
0 1 5{
2 index exch get//IsUpper exec not{
pop false exit
}if
}for
{(+)search{
pop pop
}if
}if
cvn
}bind def
/CheckFont
{dup/Type get/Font ne{
mark(Resource )3 index( must have /Type/Font .)//error exec
}if
}bind def
/CheckEncoding
{dup type/nametype ne{
dup/Type get/Encoding ne{
mark(Resource )3 index( must have /Type/Encoding .)//error exec
}if
}if
}bind def
/ObtainEncoding
{dup/Encoding known{
dup dup/Encoding//CheckEncoding//ResolveD exec
dup type dup/arraytype eq exch/packedarraytype eq or{
pop pop
}{
dup type/nametype eq{
/Encoding findresource
}{
dup/BaseEncoding//knownget exec not{
/StandardEncoding
}if
/Encoding findresource
exch
/Differences//knownget exec{
exch dup length array copy exch
0 exch
{
dup type/integertype eq{
exch pop
}{
3 copy put pop
1 add
}ifelse
}forall
pop
}if
}ifelse
/Encoding exch put
}ifelse
}{
dup/Encoding/StandardEncoding/Encoding findresource put
}ifelse
}bind def
/ObtainMetrics
{dup/Widths//knownget exec{
1 index/Encoding get
256 dict
3 index/Subtype get/TrueType eq{
1000
}{
1
}ifelse
4 index/MissingWidth//knownget exec not{
0
}if
5 index/FirstChar//knownget exec not{
0
}if
6 5 roll
dup 0 exch 1 exch length 1 sub{
2 copy get
exch 3 index add
7 index exch get
dup dup null ne exch/.notdef ne and{
6 index 3 1 roll exch
6 index div
3 copy pop//knownget exec{
0 eq
}{
true
}ifelse
{put
}{
pop pop pop
}ifelse
}{
pop pop
}ifelse
}for
pop pop pop pop exch pop
1 index exch/Metrics exch put
}{
dup/MissingWidth//knownget exec{
256 dict
2 index/Encoding get{
dup null ne{
3 copy 3 2 roll put
}if
pop
}forall
exch pop
1 index exch/Metrics exch put
}if
}ifelse
}bind def
/NotDef
{
FontMatrix aload pop pop pop exch pop exch pop
1 exch div exch
1 exch div exch
1 index 0 setcharwidth
0 setlinewidth
0 0 moveto
2 copy rlineto
1 index 0 rlineto
neg exch neg exch rlineto
closepath stroke
}bind def
/SaveResourcesToStack
{
[
//PDFReader/OldResources known{
//PDFReader/OldResources get
}{
null
}ifelse
//PDFReader/CurrentObject get/Context get/Resources get
]
//PDFReader/OldResources 3 -1 roll put
}bind def
/RestoreResourcesFromStack
{
//PDFReader/OldResources get dup
0 get//PDFReader/OldResources 3 -1 roll put
1 get//PDFReader/CurrentObject get/Context get/Resources 3 -1 roll put
}bind def
/BuildChar
{//PDFR_DEBUG{
(BuildChar )print dup//=only exec( )print
}if
exch begin
Encoding exch get
//PDFR_DEBUG{
dup =
}if
dup null eq{
pop//NotDef exec
}
{
CharProcs exch//knownget exec
{
currentfont/Font get/Resources//knownget exec{
exec
SaveResourcesToStack
//PDFReader/CurrentObject get/Context get
/Resources 3 -1 roll put
//RunDelayedStream exec
RestoreResourcesFromStack
}{
//RunDelayedStream exec
}ifelse
}
{
//NotDef exec
}ifelse
}ifelse
end
}bind def
/printdict
{(<<)=
{exch = ==}forall
(>>)=
}bind def
/printfont
{
dup{
exch dup =
dup/Encoding eq{
pop =
}{
dup/FontInfo eq exch/Private eq or{
//printdict exec
}{
==
}ifelse
}ifelse
}forall
}bind def
/ScaleMetrics
{1 index{
2 index div
3 index
3 1 roll put
}forall
pop
}bind def
/ResolveAndSetFontAux
{exch dup
//PDFReader/CurrentObject get/Context get/Resources get
/Font//DoNothing//ResolveD exec
exch//CheckFont//ResolveD exec
dup/Font//knownget exec{
exch pop exch pop
}{
{
dup/Subtype get dup dup/Type1 eq exch/TrueType eq or exch/MMType1 eq or{
exch pop
dup/BaseFont get
//RemoveFontNamePrefix exec
//PDFR_DEBUG{
(Font )print dup =
}if
1 index/FontDescriptor known{
//PDFR_DEBUG{
(Font from a font descriptor.)=
}if
1 index
/FontDescriptor//DoNothing//ResolveD exec
/Font//knownget exec{
exch pop
}{
//PDFR_DEBUG{
(Font descriptor has no Font resolved.)=
}if
//GetInstalledFont exec
}ifelse
}{
//GetInstalledFont exec
}ifelse
exch
dup/Encoding known not{
1 index/Encoding get 1 index exch/Encoding exch put
}if
//ObtainEncoding exec
//ObtainMetrics exec
exch
dup length dict copy
dup 2 index/Encoding get
/Encoding exch put
1 index/Metrics//knownget exec{
2 index/Subtype get/TrueType ne{
1 index/FontMatrix get 0 get
dup 0 eq{
pop
1 index/FontMatrix get 1 get
dup 0 eq{pop 1}if
}if
0.001 div
//ScaleMetrics exec
}{
1 index/sfnts known not{
1 index/FontMatrix get 0 get
dup 0 eq{
pop
1 index/FontMatrix get 1 get
dup 0 eq{pop 1}if
}if
//ScaleMetrics exec
}if
}ifelse
1 index exch/Metrics exch put
}if
1 index/BaseFont get
exch
dup/FID undef
dup/UniqueID undef
definefont
dup 3 1 roll
/Font exch put
exit
}if
dup/Subtype get/Type3 eq{
//ObtainEncoding exec
2 copy exch/FontName exch put
dup/CharProcs get//ResolveDict exec
dup/FontType 3 put
dup/BuildChar//BuildChar put
dup dup/Font exch put
dup 3 1 roll
definefont
2 copy ne{
2 copy/Font exch put
}if
exch pop
exit
}if
dup/Subtype get/Type0 eq{
}if
dup/Subtype get/CIDFontType0 eq{
}if
dup/Subtype get/CIDFontType2 eq{
}if
mark(Unknown font type )2 index/Subtype get//error exec
}loop
}ifelse
exch scalefont setfont
}bind def
/ResolveAndSetFont
{
//ResolveAndSetFontAux exec
}bind def
/.knownget
{2 copy known{
get true
}{
pop pop false
}ifelse
}bind def
/.min
{2 copy lt{
exch
}if
pop
}bind def
/.max
{2 copy gt{
exch
}if
pop
}bind def
/.dicttomark
{>>
}bind def
/getu16{
2 copy get 8 bitshift 3 1 roll 1 add get add
}bind def
/gets16{
getu16 16#8000 xor 16#8000 sub
}bind def
/getu32{
2 copy getu16 16 bitshift 3 1 roll 2 add getu16 add
}bind def
/gets32{
2 copy gets16 16 bitshift 3 1 roll 2 add getu16 add
}bind def
/cmapformats mark
0{
6 256 getinterval{}forall 256 packedarray
}bind
2{
/sHK_sz 2 def
/sH_sz 8 def
dup 2 getu16/cmapf2_tblen exch def
dup 4 getu16/cmapf2_lang exch def
dup 6 256 sHK_sz mul getinterval/sHKs exch def
0
0 1 255{
sHKs exch
2 mul getu16
1 index
1 index
lt{exch}if pop
}for
/sH_len exch def
dup 6 256 sHK_sz mul add
cmapf2_tblen 1 index sub getinterval
/sH_gIA exch def
/cmapf2_glyph_array 65535 array def
/.cmapf2_putGID{
/cmapf2_ch cmapf2_ch_hi 8 bitshift cmapf2_ch_lo add def
firstCode cmapf2_ch_lo le
cmapf2_ch_lo firstCode entryCount add lt
and{
sH_offset idRangeOffset add
cmapf2_ch_lo firstCode sub 2 mul
add 6 add
sH_gIA exch getu16
dup 0 gt{
idDelta add
cmapf2_glyph_array exch cmapf2_ch exch put
}{
pop
}ifelse
}{
}ifelse
}def
16#00 1 16#ff{
/cmapf2_ch_hi exch def
sHKs cmapf2_ch_hi sHK_sz mul getu16
/sH_offset exch def
sH_gIA sH_offset sH_sz getinterval
dup 0 getu16/firstCode exch def
dup 2 getu16/entryCount exch def
dup 4 gets16/idDelta exch def
dup 6 getu16/idRangeOffset exch def
pop
sH_offset 0 eq{
/cmapf2_ch_lo cmapf2_ch_hi def
/cmapf2_ch_hi 0 def
.cmapf2_putGID
}{
16#00 1 16#ff{
/cmapf2_ch_lo exch def
.cmapf2_putGID
}for
}ifelse
}for
pop
0 1 cmapf2_glyph_array length 1 sub{
dup cmapf2_glyph_array exch get
null eq{cmapf2_glyph_array exch 0 put}{pop}ifelse
}for
cmapf2_glyph_array
}bind
4{
/etab exch def
/nseg2 etab 6 getu16 def
14/endc etab 2 index nseg2 getinterval def
2 add
nseg2 add/startc etab 2 index nseg2 getinterval def
nseg2 add/iddelta etab 2 index nseg2 getinterval def
nseg2 add/idroff etab 2 index nseg2 getinterval def
pop
/firstcode startc 0 getu16 16#ff00 and dup 16#f000 ne{pop 0}if def
/lastcode firstcode def
/striptopbyte false def
/putglyph{
glyphs code 3 -1 roll put/code code 1 add def
}bind def
/numcodes 0 def/glyphs 0 0 2 nseg2 3 sub{
/i2 exch def
/scode startc i2 getu16 def
/ecode endc i2 getu16 def
ecode lastcode gt{
/lastcode ecode def
}if
}for pop
firstcode 16#f000 ge lastcode firstcode sub 255 le and{
lastcode 255 and
/striptopbyte true def
}{
lastcode
}ifelse
1 add
array def
glyphs length 1024 ge{
.array1024z 0 1024 glyphs length 1023 sub{glyphs exch 2 index putinterval}for
glyphs dup length 1024 sub 3 -1 roll
putinterval
}{
0 1 glyphs length 1 sub{glyphs exch 0 put}for
}ifelse
/numcodes 0 def/code 0 def
0 2 nseg2 3 sub{
/i2 exch def
/scode startc i2 getu16 def
/ecode endc i2 getu16 def
numcodes scode firstcode sub
exch sub 0 .max dup/code exch code exch add def
ecode scode sub 1 add add numcodes add/numcodes exch def
/delta iddelta i2 gets16 def
TTFDEBUG{
(scode=)print scode =only
( ecode=)print ecode =only
( delta=)print delta =only
( droff=)print idroff i2 getu16 =
}if
idroff i2 getu16 dup 0 eq{
pop scode delta add 65535 and 1 ecode delta add 65535 and
striptopbyte{
/code scode 255 and def
}{
/code scode def
}ifelse
{putglyph}for
}{
/gloff exch 14 nseg2 3 mul add 2 add i2 add add def
striptopbyte{
/code scode 255 and def
}{
/code scode def
}ifelse
0 1 ecode scode sub{
2 mul gloff add etab exch getu16
dup 0 ne{delta add 65535 and}if putglyph
}for
}ifelse
}for glyphs/glyphs null def
}bind
6{
dup 6 getu16/firstcode exch def dup 8 getu16/ng exch def
firstcode ng add array
0 1 firstcode 1 sub{2 copy 0 put pop}for
dup firstcode ng getinterval
0 1 ng 1 sub{
dup 2 mul 10 add 4 index exch getu16 3 copy put pop pop
}for pop exch pop
}bind
.dicttomark readonly def
/cmaparray{
dup 0 getu16 cmapformats exch .knownget{
TTFDEBUG{
(cmap: format )print 1 index 0 getu16 = flush
}if exec
}{
(Can't handle format )print 0 getu16 = flush
0 1 255{}for 256 packedarray
}ifelse
TTFDEBUG{
(cmap: length=)print dup length = dup ==
}if
}bind def
/postremap mark
/Cdot/Cdotaccent
/Edot/Edotaccent
/Eoverdot/Edotaccent
/Gdot/Gdotaccent
/Ldot/Ldotaccent
/Zdot/Zdotaccent
/cdot/cdotaccent
/edot/edotaccent
/eoverdot/edotaccent
/gdot/gdotaccent
/ldot/ldotaccent
/zdot/zdotaccent
.dicttomark readonly def
/get_from_stringarray
{1 index type/stringtype eq{
get
}{
exch{
2 copy length ge{
length sub
}{
exch get exit
}ifelse
}forall
}ifelse
}bind def
/getinterval_from_stringarray
{
2 index type/stringtype eq{
getinterval
}{
string exch 0
4 3 roll{
dup length
dup 4 index lt{
3 index exch sub
exch pop 3 1 roll exch pop
}{
dup 3 1 roll
4 index sub
5 index length 4 index sub
2 copy gt{exch}if pop
dup 3 1 roll
5 index exch getinterval
5 index 4 index 3 index
getinterval
copy pop
exch pop add exch pop 0 exch
dup 3 index length ge{exit}if
}ifelse
}forall
pop pop
}ifelse
}bind def
/string_array_size
{dup type/stringtype eq{
length
}{
0 exch{length add}forall
}ifelse
}bind def
/postformats mark
16#00010000{
pop MacGlyphEncoding
}
16#00020000{
dup dup type/arraytype eq{0 get}if length 36 lt{
TTFDEBUG{(post format 2.0 invalid.)= flush}if
pop[]
}{
/postglyphs exch def
/post_first postglyphs dup type/arraytype eq{0 get}if def
post_first 32 getu16/numglyphs exch def
/glyphnames numglyphs 2 mul 34 add def
/postpos glyphnames def
/total_length postglyphs//string_array_size exec def
numglyphs array 0 1 numglyphs 1 sub{
postpos total_length ge{
1 numglyphs 1 sub{1 index exch/.notdef put}for
exit
}if
postglyphs postpos//get_from_stringarray exec
postglyphs postpos 1 add 2 index//getinterval_from_stringarray exec cvn
exch postpos add 1 add/postpos exch def
2 index 3 1 roll
put
}for
/postnames exch def
numglyphs array 0 1 numglyphs 1 sub{
dup 2 mul 34 add postglyphs exch 2//getinterval_from_stringarray exec
dup 0 get 8 bitshift exch 1 get add dup 258 lt{
MacGlyphEncoding exch get
}{
dup 32768 ge{
pop/.notdef
}{
258 sub dup postnames length ge{
TTFDEBUG{(   *** warning: glyph index past end of 'post' table)= flush}if
pop
exit
}if
postnames exch get
postremap 1 index .knownget{exch pop}if
}ifelse
}ifelse
2 index 3 1 roll put
}for
}
ifelse
}bind
16#00030000{
pop[]
}bind
.dicttomark readonly def
/first_post_string
{
post dup type/arraytype eq{0 get}if
}bind def
/.getpost{
/glyphencoding post null eq{
TTFDEBUG{(post missing)= flush}if[]
}{
postformats first_post_string 0 getu32 .knownget{
TTFDEBUG{
(post: format )print
first_post_string
dup 0 getu16 =only(,)print 2 getu16 = flush
}if
post exch exec
}{
TTFDEBUG{(post: unknown format )print post 0 getu32 = flush}if[]
}ifelse
}ifelse def
}bind def
/MacRomanEncoding[
StandardEncoding 0 39 getinterval aload pop
/quotesingle
StandardEncoding 40 56 getinterval aload pop
/grave
StandardEncoding 97 31 getinterval aload pop
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave
/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde
/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef
/florin/.notdef/.notdef/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright
/quoteleft/quoteright/divide/.notdef
/ydieresis/Ydieresis/fraction/currency
/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase
/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex
/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
]/Encoding defineresource pop
/TTParser<<
/Pos 0
/post null
>>def
/readu8
{read not{
mark(Insufficient data in the stream.)//error exec
}if
}bind def
/readu16
{dup//readu8 exec 8 bitshift exch//readu8 exec or
}bind def
/reads16
{//readu16 exec 16#8000 xor 16#8000 sub
}bind def
/readu32
{dup//readu16 exec 16 bitshift exch//readu16 exec or
}bind def
/reads32
{dup//reads16 exec 16 bitshift exch//readu16 exec or
}bind def
/SkipToPosition
{dup//TTParser/Pos get
exch//TTParser exch/Pos exch put
sub
//PDFR_DEBUG{
(Skipping )print dup//=only exec( bytes.)=
}if
dup 0 eq{
pop pop
}{
dup 3 1 roll
()/SubFileDecode filter
exch
{1 index//BlockBuffer readstring pop length
dup 0 eq{pop exch pop exit}if
sub
}loop
0 ne{
mark(Insufficient data in the stream for SkipToPosition.)//error exec
}if
}ifelse
}bind def
/TagBuffer 4 string def
/ParseTTTableDirectory
{//PDFR_DEBUG{
(ParseTTTableDirectory beg)=
}if
15 dict begin
dup//readu32 exec 16#00010000 ne{
mark(Unknown True Type version.)//error exec
}if
dup//readu16 exec/NumTables exch def
dup//readu16 exec/SearchRange exch def
dup//readu16 exec/EntrySelector exch def
dup//readu16 exec/RangeShift exch def
//PDFR_DEBUG{
(NumTables = )print NumTables =
}if
NumTables{
dup//TagBuffer readstring not{
mark(Could not read TT tag.)//error exec
}if
cvn
[2 index//readu32 exec pop
2 index//readu32 exec
3 index//readu32 exec
]
//PDFR_DEBUG{
2 copy exch//=only exec( )print ==
}if
def
}repeat
pop
//TTParser/Pos 12 NumTables 16 mul add put
currentdict end
//PDFR_DEBUG{
(ParseTTTableDirectory end)=
}if
}bind def
/ParseTTcmap
{//PDFR_DEBUG{
(ParseTTcmap beg)=
}if
/cmap get aload pop
3 1 roll
7 dict begin
//PDFR_DEBUG{
(Current position = )print//TTParser/Pos get =
(cmap position = )print dup =
}if
1 index exch//SkipToPosition exec
//TTParser/Pos get/TablePos exch def
dup//readu16 exec pop
dup//readu16 exec/NumEncodings exch def
//PDFR_DEBUG{
(NumEncodings = )print NumEncodings =
}if
null
NumEncodings{
1 index//readu32 exec
2 index//readu32 exec
3 array dup 3 2 roll 0 exch put
2 index null ne{
dup 0 get 3 index 0 get sub
3 index exch 1 exch put
}if
dup 4 3 roll pop 3 1 roll
def
}repeat
dup 0 get
4 3 roll exch sub
1 exch put
//PDFR_DEBUG{
currentdict{
exch dup type/integertype eq{
//PrintHex exec( )print ==
}{
pop pop
}ifelse
}forall
}if
4 NumEncodings 8 mul add/HeaderLength exch def
//TTParser/Pos//TTParser/Pos get HeaderLength add put
0
NumEncodings{
16#7FFFFFF null
currentdict{
1 index type/integertype eq{
exch pop dup 0 get
dup 5 index gt{
dup 4 index lt{
4 1 roll
exch pop exch pop
}{
pop pop
}ifelse
}{
pop pop
}ifelse
}{
pop pop
}ifelse
}forall
//PDFR_DEBUG{
(Obtaining subtable for )print dup ==
}if
3 2 roll pop
3 copy pop
TablePos add//SkipToPosition exec
3 copy exch pop 1 get
//TTParser/Pos//TTParser/Pos get 3 index add put
string
readstring not{
mark(Can't read a cmap subtable.)//error exec
}if
2 exch put
}repeat
pop pop
currentdict end
//PDFR_DEBUG{
(ParseTTcmap end)=
}if
}bind def
/GetTTEncoding
{//PDFR_DEBUG{
(GetTTEncoding beg)=
}if
get
exch pop
2 get
10 dict begin
/TTFDEBUG//PDFR_DEBUG def
//cmaparray exec
end
//PDFR_DEBUG{
(GetTTEncoding end)=
dup ==
}if
}bind def
/InverseEncoding
{
256 dict begin
dup length 1 sub -1 0{
2 copy get
exch
1 index currentdict exch//knownget exec{
dup type/arraytype eq{
aload length 1 add array astore
}{
2 array astore
}ifelse
}if
def
}for
pop
currentdict end
}bind def
/GetMacRomanEncodingInverse
{//PDFReader/MacRomanEncodingInverse get
dup null eq{
pop
MacRomanEncoding//InverseEncoding exec
dup//PDFReader exch/MacRomanEncodingInverse exch put
}if
}bind def
/PutCharStringSingle
{
dup 3 index length lt{
2 index exch get
dup 0 ne{
def
}{
pop pop
}ifelse
}{
pop pop
}ifelse
}bind def
/PutCharString
{1 index type/nametype ne{
mark(Bad charstring name)//error exec
}if
dup type/arraytype eq{
{
3 copy//PutCharStringSingle exec
pop pop
}forall
pop
}{
//PutCharStringSingle exec
}ifelse
}bind def
/ComposeCharStrings
{
//PDFR_DEBUG{
(ComposeCharStrings beg)=
}if
1 index length 1 add dict begin
/.notdef 0 def
exch
//TTParser/post get
dup null ne{
exch
1 index length 1 sub -1 0{
dup 3 index exch get exch
dup 0 eq 2 index/.notdef eq or{
pop pop
}{
def
}ifelse
}for
}if
exch pop exch
{
//PutCharString exec
}forall
pop
currentdict end
//PDFR_DEBUG{
(ComposeCharStrings end)=
}if
}bind def
/ParseTTpost
{
//PDFR_DEBUG{
(ParseTTpost beg)=
}if
/post get aload pop
3 1 roll
//PDFR_DEBUG{
(Current position = )print//TTParser/Pos get =
(post position = )print dup =
}if
1 index exch//SkipToPosition exec
//TTParser/Pos//TTParser/Pos get 4 index add put
exch dup 65535 le{
string
readstring not{
mark(Insufficient data in the stream for ParseTTpost.)//error exec
}if
}{
[3 1 roll
dup 16384 div floor cvi
exch 1 index 16384 mul
sub exch
1 sub 0 1 3 -1 roll
{
1 add index
16384 string readstring not{
mark(Insufficient data in the stream for ParseTTpost.)//error exec
}if
}for
counttomark -2 roll
string readstring not{
mark(Insufficient data in the stream for ParseTTpost.)//error exec
}if
]
}ifelse
1 dict begin
/post exch def
//.getpost exec
//TTParser/post glyphencoding put
//PDFR_DEBUG{
(ParseTTpost end)=
glyphencoding ==
}if
end
}bind def
/MakeTTCharStrings
{//MakeStreamReader exec
dup dup//ParseTTTableDirectory exec
//TTParser/post null put
dup/post//knownget exec{
0 get
1 index/cmap get 0 get
lt{
2 copy//ParseTTpost exec
//ParseTTcmap exec
}{
2 copy//ParseTTcmap exec
3 1 roll
//ParseTTpost exec
}ifelse
}{
//ParseTTcmap exec
}ifelse
{
dup 16#00030001 known{
//PDFR_DEBUG{
(Using the TT cmap encoding for Windows Unicode.)=
}if
16#00030001//GetTTEncoding exec
AdobeGlyphList//ComposeCharStrings exec
exit
}if
dup 16#00010000 known{
//PDFR_DEBUG{
(Using the TT cmap encoding for Macintosh Roman.)=
}if
16#00010000//GetTTEncoding exec
PDFEncoding dup null eq{
pop//GetMacRomanEncodingInverse exec
}{
//InverseEncoding exec
}ifelse
//ComposeCharStrings exec
exit
}if
dup 16#00030000 known{
//PDFR_DEBUG{
(Using the TT cmap encoding 3.0 - not sure why Ghostscript writes it since old versions.)=
}if
16#00030000//GetTTEncoding exec
PDFEncoding dup null eq{
pop//GetMacRomanEncodingInverse exec
}{
//InverseEncoding exec
}ifelse
//ComposeCharStrings exec
exit
}if
mark(True Type cmap has no useful encodings.)//error exec
}loop
//PDFR_DEBUG{
(CharStrings <<)=
dup{
exch
dup type/nametype eq{
//=only exec
}{
==
}ifelse
( )print ==
}forall
(>>)=
}if
}bind def
/ScaleVal
{
aload pop
1 index sub
3 2 roll mul add
}bind def
/ScaleArg
{
aload pop
1 index sub
3 1 roll
sub exch div
}bind def
/ScaleArgN
{
dup length 2 sub -2 0{
2
2 index 3 1 roll getinterval
3 2 roll
exch//ScaleArg exec
1 index length 2 idiv 1 add 1 roll
}for
pop
}bind def
/ComputeFunction_10
{
//PDFR_DEBUG{
(ComputeFunction_10 beg )print 1 index//=only exec( stack=)print count =
}if
exch
dup 1 eq{
pop dup length 1 sub get
}{
1 index length 1 sub mul
dup dup floor sub
dup 0 eq{
pop cvi get
}{
3 1 roll floor cvi
2 getinterval
aload pop
2 index mul 3 2 roll 1 exch sub 3 2 roll mul add
}ifelse
}ifelse
//PDFR_DEBUG{
(ComputeFunction_10 end )print dup//=only exec( stack=)print count =
}if
}bind def
/ComputeFunction_n0
{
//PDFR_DEBUG{
(ComputeFunction_n0 beg N=)print dup//=only exec( stack=)print count =
}if
dup 0 eq{
pop
}{
dup 2 add -1 roll
dup 3 index length 1 sub ge{
pop 1 sub
exch dup length 1 sub get exch
//PDFReader/ComputeFunction_n0 get exec
}{
dup floor cvi dup
4 index exch get
3 index dup
5 add copy
6 2 roll
pop pop pop pop
1 sub
//PDFReader/ComputeFunction_n0 get exec
3 2 roll pop
exch
4 3 roll exch
4 add 2 roll 1 add
3 2 roll exch get
exch 1 sub
//PDFReader/ComputeFunction_n0 get exec
1 index mul
3 1 roll
1 exch sub mul add
}ifelse
}ifelse
//PDFR_DEBUG{
(ComputeFunction_n0 end )print dup//=only exec( stack=)print count =
}if
}bind def
/FunctionToProc_x01
{
dup/Domain get exch
dup/Data get 0 get exch
/Size get length
[4 1 roll
//PDFR_DEBUG{
{(function beg, stack =)print count//=only exec(\n)print}/exec load
5 2 roll
}if
dup 1 gt{
{mark exch
3 add 2 roll
//ScaleArgN exec
counttomark dup
3 add -2 roll
pop exch
//ComputeFunction_n0 exec
}/exec load
}{
pop
3 1/roll load//ScaleArg/exec load
/exch load
//ComputeFunction_10/exec load
}ifelse
//PDFR_DEBUG{
(function end, stack =)/print load/count load//=only/exec load(\n)/print load
}if
]cvx
//PDFR_DEBUG{
(Made a procedure for the 1-result function :)=
dup ==
}if
}bind def
/FunctionProcDebugBeg
{(FunctionProcDebugBeg )print count =
}bind def
/FunctionProcDebugEnd
{(FunctionProcDebugEnd )print count =
}bind def
/FunctionToProc_x0n
{
PDFR_DEBUG{
(FunctionToProc_x0n beg m=)print dup =
}if
1 index/Size get length exch
dup 7 mul 2 add array
PDFR_DEBUG{
dup 0//FunctionProcDebugBeg put
}{
dup 0//DoNothing put
}ifelse
dup 1/exec load put
dup 2 5 index/Domain get put
2 index 1 eq{
dup 3//ScaleArg put
}{
dup 3//ScaleArgN put
}ifelse
dup 4/exec load put
1 index 1 sub 0 exch 1 exch{
dup 7 mul 5 add
1 index 4 index 1 sub ne{
dup 3 index exch 6 index put 1 add
dup 3 index exch/copy load put 1 add
}if
[
6 index/Data get 3 index get
6 index 1 eq{
//ComputeFunction_10/exec load
}{
6 index
//ComputeFunction_n0/exec load
}ifelse
]cvx
3 index exch 2 index exch put 1 add
2 index 1 index/exec load put 1 add
1 index 4 index 1 sub ne{
2 index 1 index 6 index 1 add put 1 add
2 index 1 index 1 put 1 add
2 index 1 index/roll load put
}if
pop pop
}for
PDFR_DEBUG{
dup dup length 2 sub//FunctionProcDebugEnd put
}{
dup dup length 2 sub//DoNothing put
}ifelse
dup dup length 1 sub/exec load put
cvx exch pop exch pop exch pop
//PDFR_DEBUG{
(Made a procedure for the n-argument function :)=
dup ==
}if
PDFR_DEBUG{
(FunctionToProc_x0n end)=
}if
}bind def
/MakeTableRec
{
0
exec
}bind def
/MakeTable
{//PDFR_DEBUG{
(MakeTable beg )print count =
}if
1 index/Size get exch
1 sub dup
3 1 roll
get
array
1 index 0 eq{
exch pop exch pop
}{
dup length 1 sub -1 0{
3 index 3 index//MakeTableRec exec
2 index 3 1 roll put
}for
exch pop exch pop
}ifelse
//PDFR_DEBUG{
(MakeTable end )print count =
}if
}bind def
//MakeTableRec 0//MakeTable put
/StoreSample
{
1 sub
dup 0 eq{
pop
}{
-1 1{
I exch get get
}for
}ifelse
I 0 get 3 2 roll put
}bind def
/ReadSample32
{
4{
File read not{
mark(Insufficient data for function.)//error exec
}if
}repeat
pop
3 1 roll exch
256 mul add 256 mul add
//1_24_bitshift_1_sub div
}bind def
/ReadSample
{
Buffer BitsLeft BitsPerSample
{2 copy ge{
exit
}if
3 1 roll
8 add 3 1 roll
256 mul File read not{
mark(Insufficient data for function.)//error exec
}if
add
3 1 roll
}loop
sub dup
2 index exch
neg bitshift
2 copy exch bitshift
4 3 roll exch sub
/Buffer exch def
exch/BitsLeft exch def
Div div
}bind def
/ReadSamplesRec
{0
exec
}bind def
/ReadSamples
{
//PDFR_DEBUG{
(ReadSamples beg )print count =
}if
dup 1 eq{
pop
0 1 Size 0 get 1 sub{
I exch 0 exch put
0 1 M 1 sub{
dup Range exch 2 mul 2 getinterval
//PDFR_DEBUG{
(Will read a sample ... )print
}if
BitsPerSample 32 eq{//ReadSample32}{//ReadSample}ifelse
exec exch//ScaleVal exec
//PDFR_DEBUG{
(value=)print dup =
}if
exch Table exch get
Size length//StoreSample exec
}for
}for
}{
1 sub
dup Size exch get 0 exch 1 exch 1 sub{
I exch 2 index exch put
dup//ReadSamplesRec exec
}for
pop
}ifelse
//PDFR_DEBUG{
(ReadSamples end )print count =
}if
}bind def
//ReadSamplesRec 0//ReadSamples put
/StreamToArray
{//PDFR_DEBUG{
(StreamToArray beg )print count =
}if
userdict/FuncDataReader get begin
dup/BitsPerSample get/BitsPerSample exch def
dup/Size get length/N exch def
dup/Range get length 2 idiv/M exch def
1 BitsPerSample bitshift 1 sub/Div exch def
/BitsLeft 0 def
/Buffer 0 def
dup/Size get/Size exch def
dup/Range get/Range exch def
/File 1 index//MakeStreamReader exec def
/I[N{0}repeat]def
M array
dup length 1 sub -1 0{
2 index N//MakeTable exec
2 index 3 1 roll put
}for
/Table exch def
N//ReadSamples exec
PDFR_DEBUG{
(Table = )print Table ==
}if
/Data Table put
end
//PDFR_DEBUG{
(StreamToArray end )print count =
}if
}bind def
/FunctionToProc10
{
PDFR_DEBUG{
(FunctionToProc10 beg, Range = )print dup/Range get ==
}if
dup/Order//knownget exec{
1 ne{
(Underimplemented function Type 0 Order 3.)=
}if
}if
dup//StreamToArray exec
dup/Range get length dup 2 eq{
pop//FunctionToProc_x01 exec
}{
2 idiv//FunctionToProc_x0n exec
}ifelse
PDFR_DEBUG{
(FunctionToProc10 end)=
}if
}bind def
/FunctionToProc12
{begin
currentdict/C0//knownget exec{length 1 eq}{true}ifelse{
N
currentdict/C0//knownget exec{
0 get
}{
0
}ifelse
currentdict/C1//knownget exec{
0 get
}{
1
}ifelse
1 index sub
[4 1 roll
{
4 2 roll
exp mul add
}aload pop
]cvx
}{
[
0 1 C0 length 1 sub{
N
C0 2 index get
C1 3 index get
4 3 roll pop
1 index sub
[/dup load
5 2 roll
{
4 2 roll
exp mul add
exch
}aload pop
]cvx
/exec load
}for
/pop load
]cvx
}ifelse
end
//PDFR_DEBUG{
(FunctionType2Proc : )print dup ==
}if
}bind def
/FunctionToProc14
{//MakeStreamReader exec cvx exec
//PDFR_DEBUG{
(FunctionType4Proc : )print dup ==
}if
}bind def
/FunctionToProc1
{
dup/FunctionType get
{dup 0 eq{
pop//FunctionToProc10 exec exit
}if
dup 2 eq{
pop//FunctionToProc12 exec exit
}if
dup 4 eq{
pop//FunctionToProc14 exec exit
}if
mark exch(Function type )exch( isn't implemented yet.)//error exec
}loop
}bind def
/FunctionToProc20
{
PDFR_DEBUG{
(FunctionToProc20, Range = )print dup/Range get ==
}if
dup/Order//knownget exec{
1 ne{
(Underimplemented function Type 0 Order 3.)=
}if
}if
dup//StreamToArray exec
dup/Range get length dup 2 eq{
pop//FunctionToProc_x01 exec
}{
2 idiv//FunctionToProc_x0n exec
}ifelse
}bind def
/FunctionToProc
{//PDFR_DEBUG{
(FunctionToProc beg )print count =
}if
dup type/dicttype eq{
dup/Domain get length 2 idiv
{
dup 1 eq{
pop//FunctionToProc1 exec exit
}if
dup 2 eq{
pop//FunctionToProc20 exec exit
}if
mark(Functions with many arguments aren't implemented yet.)//error exec
}loop
}{
//PDFR_DEBUG{(Not a function dict, assume already a procedure.)print}if
}ifelse
//PDFR_DEBUG{
(FunctionToProc end )print count =
}if
}bind def
/spotfunctions mark
/Round{
abs exch abs 2 copy add 1 le{
dup mul exch dup mul add 1 exch sub
}{
1 sub dup mul exch 1 sub dup mul add 1 sub
}ifelse
}
/Diamond{
abs exch abs 2 copy add .75 le{
dup mul exch dup mul add 1 exch sub
}{
2 copy add 1.23 le{
.85 mul add 1 exch sub
}{
1 sub dup mul exch 1 sub dup mul add 1 sub
}ifelse
}ifelse
}
/Ellipse{
abs exch abs 2 copy 3 mul exch 4 mul add 3 sub dup 0 lt{
pop dup mul exch .75 div dup mul add 4 div 1 exch sub
}{
dup 1 gt{
pop 1 exch sub dup mul exch 1 exch sub
.75 div dup mul add 4 div 1 sub
}{
.5 exch sub exch pop exch pop
}ifelse
}ifelse
}
/EllipseA{dup mul .9 mul exch dup mul add 1 exch sub}
/InvertedEllipseA{dup mul .9 mul exch dup mul add 1 sub}
/EllipseB{dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub}
/EllipseC{dup mul .9 mul exch dup mul add 1 exch sub}
/InvertedEllipseC{dup mul .9 mul exch dup mul add 1 sub}
/Line{exch pop abs neg}
/LineX{pop}
/LineY{exch pop}
/Square{abs exch abs 2 copy lt{exch}if pop neg}
/Cross{abs exch abs 2 copy gt{exch}if pop neg}
/Rhomboid{abs exch abs 0.9 mul add 2 div}
/DoubleDot{2{360 mul sin 2 div exch}repeat add}
/InvertedDoubleDot{2{360 mul sin 2 div exch}repeat add neg}
/SimpleDot{dup mul exch dup mul add 1 exch sub}
/InvertedSimpleDot{dup mul exch dup mul add 1 sub}
/CosineDot{180 mul cos exch 180 mul cos add 2 div}
/Double{exch 2 div exch 2{360 mul sin 2 div exch}repeat add}
/InvertedDouble{
exch 2 div exch 2{360 mul sin 2 div exch}repeat add neg
}
.dicttomark readonly def
/CheckColorSpace
{
dup type/arraytype ne{
mark(Resource )3 index( must be an array.)//error exec
}if
}bind def
/SubstitutePDFColorSpaceRec
{0
exec
}bind def
/SubstitutePDFColorSpace
{
{
dup 0 get/Pattern eq{
dup length 1 gt{
dup dup 1//CheckColorSpace//ResolveA exec
dup type/nametype ne{
//SubstitutePDFColorSpaceRec exec
}if
1 exch put
}if
exit
}if
dup 0 get/Indexed eq{
exit
}if
dup 0 get/Separation eq{
dup dup 2//CheckColorSpace//ResolveA exec
dup type/nametype ne{
//SubstitutePDFColorSpaceRec exec
}if
2 exch put
exit
}if
dup 0 get/CalGray eq{
1 get
dup/Gamma//knownget exec{
[exch[exch/exp load]cvx dup dup]
1 index exch/DecodeLMN exch put
}if
[exch/CIEBasedA exch]
exit
}if
dup 0 get/CalRGB eq{
1 get
dup/Matrix//knownget exec{
1 index exch/MatrixLMN exch put
}if
dup/Gamma//knownget exec{
aload pop
[exch/exp load]cvx
3 1 roll
[exch/exp load]cvx
3 1 roll
[exch/exp load]cvx
3 1 roll
3 array astore
1 index exch/DecodeLMN exch put
}if
[exch/CIEBasedABC exch]
exit
}if
dup 0 get/Lab eq{
1 get
begin
currentdict/Range//knownget exec{aload pop}{-100 100 -100 100}ifelse
0 100 6 2 roll 6 array astore
/RangeABC exch def
/DecodeABC[{16 add 116 div}bind{500 div}bind{200 div}bind]def
/MatrixABC[1 1 1 1 0 0 0 0 -1]def
{dup 6 29 div ge{dup dup mul mul}{4 29 div sub 108 841 div mul}ifelse}
/DecodeLMN[
[3 index aload pop WhitePoint 0 get/mul load]cvx
[4 index aload pop WhitePoint 1 get/mul load]cvx
[5 index aload pop WhitePoint 2 get/mul load]cvx
]def pop
//PDFR_DEBUG{
(Constructed from Lab <<)=
currentdict{exch = ==}forall
(>>)=
}if
[/CIEBasedABC currentdict]
end
exit
pop
}if
dup 0 get/CIEBasedA eq{exit}if
dup 0 get/CIEBasedABC eq{exit}if
mark exch(Unimplemented color space )exch//error exec
}loop
}bind def
//SubstitutePDFColorSpaceRec 0//SubstitutePDFColorSpace put
/ResolveArrayElement
{2 copy get
dup type dup/arraytype eq exch
/packedarraytype eq or{
dup length 1 ge exch xcheck and{
2 copy get
dup 0 get type/integertype eq
1 index 1 get type dup/arraytype
eq exch
/packedarraytype eq or
and{
exec
2 index 4 1 roll put
}{
pop pop
}ifelse
}{
pop
}ifelse
}{
pop pop
}ifelse
}bind def
/ResolveColorSpaceArrayRec
{0
exec
}bind def
/SetColorSpaceSafe
{
PDFR_DEBUG{
(SetColorSpaceSafe beg)=
}if
currentcolorspace dup type/arraytype eq{
1 index type/arraytype eq{
dup length 2 index length eq{
false exch
dup length 0 exch 1 exch 1 sub{
dup
4 index exch get exch
2 index exch get
ne{
exch pop true exch exit
}if
}for
pop
{
setcolorspace
}{
pop
}ifelse
}{
pop setcolorspace
}ifelse
}{
pop setcolorspace
}ifelse
}{
pop setcolorspace
}ifelse
PDFR_DEBUG{
(SetColorSpaceSafe end)=
}if
}bind def
/ResolveColorSpaceArray
{
//PDFR_DEBUG{
(ResolveColorSpaceArray beg )print dup ==
}if
dup 0 get/Indexed eq{
1//ResolveArrayElement exec
dup dup 1 get
dup type/arraytype eq{
//SubstitutePDFColorSpace exec
//ResolveColorSpaceArrayRec exec
1 exch put
}{
pop pop
}ifelse
}if
dup 0 get/Separation eq{
dup dup 1 get UnPDFEscape 1 exch put
3//ResolveArrayElement exec
dup 3 get//FunctionToProc exec
2 copy 3 exch put
pop
}if
dup 0 get/Pattern eq{
dup length 1 gt{
dup 1 get dup type/arraytype eq{
ResolveColorSpaceArray
1 index 1 3 -1 roll put
}{
pop
}ifelse
}if
}if
PDFR_DEBUG{
(Construcrted color space :)=
dup ==
}if
//PDFR_DEBUG{
(ResolveColorSpaceArray end )print dup ==
}if
}bind def
//ResolveColorSpaceArrayRec 0//ResolveColorSpaceArray put
/ResolveColorSpace
{
//PDFR_DEBUG{
(ResolveColorSpace beg )print dup =
}if
dup//SimpleColorSpaceNames exch known not{
dup//PDFColorSpaces exch//knownget exec{
exch pop
//PDFR_DEBUG{
(ResolveColorSpace known )=
}if
}{
dup
//PDFReader/CurrentObject get/Context get/Resources get
/ColorSpace//DoNothing//ResolveD exec
exch//CheckColorSpace//ResolveD exec
dup type/arraytype eq{
//SubstitutePDFColorSpace exec
//ResolveColorSpaceArray exec
dup//PDFColorSpaces 4 2 roll put
}if
}ifelse
}if
//PDFR_DEBUG{
(ResolveColorSpace end )print dup ==
}if
}bind def
/CheckPattern
{
dup/PatternType//knownget exec{
dup 1 ne{
mark(Resource )4 index( is a shading, which can't be handled at level 2. )//error exec
}if
pop
}if
dup/Type knownget{
/Pattern ne{
mark(Resource )4 index( must have /Type/Pattern .)//error exec
}if
}if
}bind def
/PaintProc
{/Context get
//RunDelayedStream exec
}bind def
/ResolvePattern
{
dup
userdict/PDFR_Patterns get
exch//knownget exec{
exch pop
}{
dup
//PDFReader/CurrentObject get/Context get/Resources get
/Pattern//DoNothing//ResolveD exec
exch//CheckPattern//ResolveD exec
dup dup/Context exch put
dup/Resources//DoNothing//ResolveD exec pop
dup/PaintProc//PaintProc put
gsave userdict/PDFR_InitialGS get setgstate
currentglobal exch false setglobal
dup/Matrix get
makepattern
exch setglobal
grestore
dup userdict/PDFR_Patterns get
4 2 roll
put
}ifelse
}bind def
/SetColor
{//PDFR_DEBUG{
(SetColor beg)=
}if
currentcolorspace dup type/nametype eq{
pop setcolor
}{
0 get/Pattern eq{
//ResolvePattern exec setpattern
}{
setcolor
}ifelse
}ifelse
//PDFR_DEBUG{
(SetColor end)=
}if
}bind def
/ImageKeys 15 dict begin
/BPC/BitsPerComponent def
/CS/ColorSpace def
/D/Decode def
/DP/DecodeParms def
/F/Filter def
/H/Height def
/IM/ImageMask def
/I/Interpolate def
/W/Width def
currentdict end readonly def
/ImageValues 15 dict begin
/G/DeviceGray def
/RGB/DeviceRGB def
/CMYK/DeviceCMYK def
/I/Indexed def
/AHx/ASCIIHexDecode def
/A85/ASCII85Decode def
/LZW/LZWDecode def
/Fl/FlateDecode def
/RL/RunLengthDecode def
/CCF/CCITTFaxDecode def
/DCT/DCTDecode def
currentdict end readonly def
/GetColorSpaceRange
{2 index/ColorSpace get
dup type/arraytype eq{
1 get
}if
exch//knownget exec{
exch pop
}if
}bind def
/DecodeArrays 15 dict begin
/DeviceGray{[0 1]}def
/DeviceRGB{[0 1 0 1 0 1]}def
/DeviceCMYK{[0 1 0 1 0 1 0 1]}def
/Indexed{
dup/BitsPerComponent get 1 exch bitshift 1 sub[exch 0 exch]
}def
/Separation{[0 1]}def
/CIEBasedA{[0 1]/RangeA//GetColorSpaceRange exec}def
/CIEBasedABC{[0 1 0 1 0 1]/RangeABC//GetColorSpaceRange exec}def
currentdict end readonly def
/Substitute
{1 index//knownget exec{
exch pop
}if
}bind def
/DebugImagePrinting
{
//PDFR_DEBUG{
(Image :)=
dup{exch//=only exec( )print ==
}forall
}if
}bind def
/CompleteImage
{
dup/ColorSpace known{
dup/ColorSpace//CheckColorSpace//ResolveD exec pop
}if
dup/Decode known not{
dup/ColorSpace//knownget exec{
dup type/arraytype eq{
0 get
}if
//DecodeArrays exch get exec
}{
[0 1]
}ifelse
1 index exch/Decode exch put
}if
dup/ImageMatrix[2 index/Width get 0 0 5 index/Height get neg
0 7 index/Height get]put
//DebugImagePrinting exec
}bind def
/CompleteInlineImage
{
//PDFR_DEBUG{
(CompleteInlineImage beg)=
}if
dup/ImageType known not{
dup/ImageType 1 put
}if
dup length dict exch{
exch//ImageKeys//Substitute exec
dup/Filter eq{
exch//ImageValues//Substitute exec exch
}if
dup/ColorSpace eq{
exch
dup//ImageValues exch//knownget exec{
exch pop
}{
//ResolveColorSpace exec
}ifelse
exch
}if
exch
2 index 3 1 roll put
}forall
//CompleteImage exec
dup/DataSource 2 copy get
2 index//AppendFilters exec put
//PDFR_DEBUG{
(CompleteInlineImage end)=
}if
}bind def
/CompleteOutlineImage
{
currentglobal exch dup gcheck setglobal
//PDFR_DEBUG{
(CompleteOutlineImage beg)=
}if
dup dup//MakeStreamReader exec/DataSource exch put
dup/ImageType known not{
//CompleteImage exec
dup/ImageType 1 put
dup/ColorSpace known{
dup/ColorSpace//CheckColorSpace//ResolveD exec
dup type/arraytype eq{
//ResolveColorSpaceArray exec
//SubstitutePDFColorSpace exec
1 index exch/ColorSpace exch put
}{
pop
}ifelse
}if
}if
//PDFR_DEBUG{
(CompleteOutlineImage end)=
}if
exch setglobal
}bind def
/DoImage
{
//PDFR_DEBUG{
(DoImage beg)=
}if
gsave
dup/ColorSpace//knownget exec{setcolorspace}if
dup/ImageMask//knownget exec not{false}if
{imagemask}{image}ifelse
grestore
//PDFR_DEBUG{
(DoImage end)=
}if
}bind def
/GSave
{
gsave
//PDFReader/GraphicStateStackPointer get
dup//GraphicStateStack exch get null eq{
dup//GraphicStateStack exch//InitialGraphicState length dict put
}if
dup//GraphicStateStack exch get
//GraphicState exch copy pop
1 add//PDFReader exch/GraphicStateStackPointer exch put
}bind def
/GRestore
{
grestore
//PDFReader/GraphicStateStackPointer get
1 sub dup
//PDFReader exch/GraphicStateStackPointer exch put
//GraphicStateStack exch get
//GraphicState copy pop
}bind def
/SetFont
{dup//GraphicState exch/FontSize exch put
//ResolveAndSetFont exec
//GraphicState/FontMatrixNonHV currentfont/FontMatrix get 1 get 0 ne put
}bind def
/ShowText
{//GraphicState/TextRenderingMode get 0 eq{
//GraphicState/WordSpacing get 0
32
//GraphicState/CharacterSpacing get 0
6 5 roll
//GraphicState/FontMatrixNonHV get{
[
7 -2 roll pop
5 -2 roll pop
5 -1 roll
{
exch
pop
3 index add
exch 2 index eq{3 index add}if
4 1 roll
}
currentfont/FontMatrix get 0 get 0 ne{
1 1 index length 1 sub getinterval cvx
}if
5 index
cshow
pop pop pop]
xshow
}{
awidthshow
}ifelse
}{
//GraphicState/CharacterSpacing get 0 eq
//GraphicState/FontMatrixNonHV get not and
//GraphicState/WordSpacing get 0 eq and{
true charpath
}{
{
exch
pop 0
currentpoint 5 4 roll
( )dup 0 3 index put true charpath
5 1 roll
moveto rmoveto
//GraphicState/CharacterSpacing get 0 rmoveto
32 eq{
//GraphicState/WordSpacing get 0 rmoveto
}if
}
//GraphicState/FontMatrixNonHV get dup not exch{
pop currentfont/FontMatrix get 0 get 0 ne
}if{
1 1 index length 1 sub getinterval cvx
}if
exch cshow
}ifelse
}ifelse
}bind def
/ShowTextBeg
{//GraphicState/TextRenderingMode get 0 ne{
currentpoint newpath moveto
}if
}bind def
/ShowTextEnd
{//GraphicState/TextRenderingMode get
{dup 1 eq{
stroke exit
}if
dup 2 eq{
gsave fill grestore stroke exit
}if
dup 3 eq{
currentpoint newpath moveto
}if
dup 4 eq{
gsave fill grestore clip exit
}if
dup 5 eq{
gsave stroke grestore clip exit
}if
dup 6 eq{
gsave fill grestore gsave stroke grestore fill exit
}if
dup 7 eq{
clip exit
}if
exit
}loop
pop
}bind def
/ShowTextWithGlyphPositioning
{//ShowTextBeg exec
{dup type/stringtype eq{
//ShowText exec
}{
neg 1000 div//GraphicState/FontSize get mul 0 rmoveto
}ifelse
}forall
//ShowTextEnd exec
}bind def
/CheckFont
{dup/Type get/ExtGState ne{
mark(Resource )3 index( must have /Type/ExtGState.)//error exec
}if
}bind def
/SetTransfer
{
//PDFR_DEBUG{(SetTransfer beg )print count =}if
dup type/arraytype eq 1 index xcheck not and{
0 4 getinterval aload pop
setcolortransfer
}{
settransfer
}ifelse
//PDFR_DEBUG{(SetTransfer end )print count =}if
}bind def
/CheckExtGState
{dup/Type get/ExtGState ne{
mark(Resource )3 index( must have /Type/ExtGState.)//error exec
}if
}bind def
/CheckHalftone
{dup/HalftoneType known not{
mark(Resource )3 index( must have /HalftoneType.)//error exec
}if
}bind def
/ResolveFunction
{
//PDFR_DEBUG{(ResolveFunction beg )print dup = count =}if
2 copy get//IsObjRef exec{
2 copy//DoNothing//ResolveD exec
3 copy put pop
}if
2 copy get dup type/arraytype eq exch xcheck and not{
2 copy get
dup type/arraytype eq 1 index xcheck not and{
dup length 1 sub -1 0{
2 copy//DoNothing ResolveA
dup/Identity eq{
pop 2 copy{}put
}{
//FunctionToProc exec
3 copy put pop
}ifelse
pop
}for
}{
dup/Default eq{
}{
dup/Identity eq{
pop{}
}{dup type/nametype eq{
//spotfunctions exch get
}{
//FunctionToProc exec
}ifelse
}ifelse
}ifelse
}ifelse
3 copy put
exch pop
}{
1 index exch get
}ifelse
//PDFR_DEBUG{(ResolveFunction end )print dup == count =}if
}bind def
/ResolveFunctionSafe
{2 copy known{
//ResolveFunction exec
}if
pop
}bind def
/CreateHalftoneThresholds
{
dup/Thresholds known not{
dup/HalftoneType get 10 eq{
dup dup//MakeStreamReader exec
/Thresholds exch put
}if
dup/HalftoneType get dup 3 eq exch 6 eq or{
dup dup//MakeStreamReader exec
//BlockBuffer readstring pop
dup length
dup 0 eq{
mark(Could not read Thresholds)//error exec
}if
string copy/Thresholds exch put
dup/HalftoneType 3 put
}if
}if
}bind def
/SetExtGState
{
//PDFReader/CurrentObject get/Context get/Resources get
/ExtGState//DoNothing//ResolveD exec
exch//CheckExtGState//ResolveD exec
dup/LW//knownget exec{
setlinewidth
}if
dup/LC//knownget exec{
setlinecap
}if
dup/LJ//knownget exec{
setlinejoin
}if
dup/ML//knownget exec{
setmeterlimit
}if
dup/D//knownget exec{
setdash
}if
dup/RI//knownget exec{
mark(Unimplemented ExtGState.RI)//error exec
}if
dup/OP//knownget exec{
setoverprint
}if
dup/op//knownget exec{
setoverprint
}if
dup/OPM//knownget exec{
mark(Unimplemented ExtGState.OPM)//error exec
}if
dup/Font//knownget exec{
mark(Unimplemented ExtGState.Font)//error exec
}if
dup/BG known{
/BG//ResolveFunction exec
setblackgeneration
}if
dup/BG2 known{
/BG2//ResolveFunction exec
dup/Default eq{
//InitialExtGState/BG2 get
}if
setblackgeneration
}if
dup/UCR known{
/UCR//ResolveFunction exec
setundercolorremoval
}if
dup/UCR2 known{
/UCR2//ResolveFunction exec
dup/Default eq{
//InitialExtGState/UCR2 get
}if
setundercolorremoval
}if
dup/TR known{
/TR//ResolveFunction exec
//SetTransfer exec
}if
dup/TR2 known{
/TR2//ResolveFunction exec
dup/Default eq{
pop//InitialExtGState/TR2 get
aload pop setcolortransfer
}{
//SetTransfer exec
}ifelse
}if
dup/HT//knownget exec{
dup/Default eq{
pop//InitialExtGState/HT get
sethalftone
}{
//PDFR_DEBUG{(Ht beg)=}if
pop dup/HT//CheckHalftone//ResolveD exec
/SpotFunction//ResolveFunctionSafe exec
/TransferFunction//ResolveFunctionSafe exec
null exch
dup/HalftoneType get dup 5 eq exch dup 4 eq exch 2 eq or or{
dup{
dup//IsObjRef exec{
pop
1 index exch//CheckHalftone ResolveD
}if
dup type/dicttype eq{
dup/SpotFunction//ResolveFunctionSafe exec
/TransferFunction//ResolveFunctionSafe exec
//CreateHalftoneThresholds exec
dup/HalftoneType get 5 gt{
4 3 roll pop
dup 4 1 roll
}if
}if
pop pop
}forall
}if
//CreateHalftoneThresholds exec
//PDFR_DEBUG{
(HT:)=
dup{
1 index/Default eq{
(Default <<)=
exch pop
{exch = ==}forall
(>>)=
}{
exch = ==
}ifelse
}forall
(HT end)= flush
}if
exch dup null ne{
(Warning: Ignoring a halftone with a Level 3 component halftone Type )print dup/HalftoneType get =
pop pop
}{
pop
dup/HalftoneType get 5 gt{
(Warning: Ignoring a Level 3 halftone Type )print dup/HalftoneType get =
pop
}{
sethalftone
}ifelse
}ifelse
//PDFR_DEBUG{(HT set)= flush}if
}ifelse
}if
dup/FL//knownget exec{
setflattness
}if
dup/SM//knownget exec{
setsmoothness
}if
dup/SA//knownget exec{
setstrokeadjust
}if
dup/BM//knownget exec{
mark(Unimplemented ExtGState.BM)//error exec
}if
dup/SMask//knownget exec{
mark(Unimplemented ExtGState.SMask)//error exec
}if
dup/CA//knownget exec{
mark(Unimplemented ExtGState.CA)//error exec
}if
dup/ca//knownget exec{
mark(Unimplemented ExtGState.ca)//error exec
}if
dup/AIS//knownget exec{
mark(Unimplemented ExtGState.AIS)//error exec
}if
dup/TK//knownget exec{
mark(Unimplemented ExtGState.TK)//error exec
}if
pop
}bind def
/CheckXObject
{dup/Subtype get dup/Image ne exch dup/Form ne exch/PS ne and and{
mark(Resource )3 index( must have /Subtype /Image or /Form or /PS.)//error exec
}if
}bind def
/DoXObject
{
//PDFReader/CurrentObject get/Context get/Resources get
/XObject//DoNothing//ResolveD exec
exch//CheckXObject//ResolveD exec
dup/Subtype get
dup/Image eq{
pop
//CompleteOutlineImage exec
//DoImage exec
}{
dup/PS eq{
PDFR_DEBUG{
(Executing a PS Xobject)=
}if
pop
//RunDelayedStream exec
}{
dup/Form eq{
pop
PDFR_DEBUG{
(Executing a Form XObject)=
}if
//PDFReader/CurrentObject get exch
dup//PDFReader exch<< exch/Context exch >>/CurrentObject exch put
dup/Matrix get concat
dup/BBox get aload pop exch 3 index sub exch 2 index sub rectclip
//RunDelayedStream exec
//PDFReader exch/CurrentObject exch put
}{
mark exch(unimplemented XObject type )exch//error exec
}ifelse
}ifelse
}ifelse
}bind def
/Operators 50 dict begin
/q{//GSave exec}bind def
/Q{//GRestore exec}bind def
/cm{//TempMatrix astore concat}bind def
/i{1 .min setflat}bind def
/J/setlinecap load def
/d/setdash load def
/j/setlinejoin load def
/w/setlinewidth load def
/M/setmiterlimit load def
/gs{SetExtGState}bind def
/g/setgray load def
/rg/setrgbcolor load def
/k/setcmykcolor load def
/cs{//ResolveColorSpace exec//SetColorSpaceSafe exec
}bind def
/sc/setcolor load def
/scn{//SetColor exec}bind def
/G/setgray load def
/RG/setrgbcolor load def
/K/setcmykcolor load def
/CS//cs def
/ri{SetColorRenderingIntent}bind def
/SC/setcolor load def
/SCN{//SetColor exec}bind def
/m/moveto load def
/l/lineto load def
/c/curveto load def
/v{currentpoint 6 2 roll curveto}bind def
/y{2 copy curveto}bind def
/re{
4 2 roll moveto exch dup 0 rlineto 0 3 -1 roll rlineto neg 0 rlineto
closepath
}def
/h/closepath load def
/n/newpath load def
/S/stroke load def
/s{closepath stroke}bind def
/f/fill load def
/f*/eofill load def
/B{gsave fill grestore stroke}bind def
/b{closepath gsave fill grestore stroke}bind def
/B*{gsave eofill grestore stroke}bind def
/b*{closepath gsave eofill grestore stroke}bind def
/W/clip load def
/W*/eoclip load def
/sh{
ResolveShading
dup/Background known{
gsave
dup/ColorSpace get setcolorspace
dup/Background get aload pop setcolor
pathbbox
2 index sub exch 3 index sub exch
rectfill
grestore
}if
shfill
}bind def
/Do{//DoXObject exec}bind def
/BI{currentglobal false setglobal<<}bind def
/ID{>>
dup/DataSource currentfile
2 index/F//knownget exec{
/A85 eq{
0(~>)/SubFileDecode filter
}if
}if
put
//CompleteInlineImage exec
exch setglobal
//DoImage exec
}bind def
/EI{}bind def
/BT{gsave//GraphicState/InitialTextMatrix get currentmatrix pop}bind def
/ET{grestore}bind def
/Tc{//GraphicState exch/CharacterSpacing exch put}bind def
/TL{//GraphicState exch/TextLeading exch put}bind def
/Tr{//GraphicState exch/TextRenderingMode exch put}bind def
/Ts{
mark(Unimplemented SetTextRise)//error exec
}bind def
/Tw{//GraphicState exch/WordSpacing exch put}bind def
/Tz{
mark(Unimplemented SetHorizontalTextScaling)//error exec
}bind def
/Td{translate 0 0 moveto}bind def
/TD{dup neg//TL exec//Td exec}bind def
/Tm{//GraphicState/InitialTextMatrix get setmatrix
//TempMatrix astore concat
0 0 moveto}bind def
/T*{0//GraphicState/TextLeading get neg//Td exec}bind def
/Tj{//ShowTextBeg exec//ShowText exec//ShowTextEnd exec}bind def
/'{//T* exec//ShowText exec//ShowTextEnd exec}bind def
/"{3 2 roll//Tw exec exch//Tc exec//' exec}bind def
/TJ//ShowTextWithGlyphPositioning def
/Tf//SetFont def
/d0/setcharwidth load def
/d1/setcachedevice load def
/BDC{pop pop}bind def
/BMC{pop}bind def
/EMC{}bind def
/BX{BeginCompatibilitySection}bind def
/EX{EndCompatibilitySection}bind def
/DP{DefineMarkedContentPointWithPropertyList}bind def
/MP{DefineMarkedContentPoint}bind def
/PS{cvx exec}bind def
currentdict end def
//PDFR_STREAM{
//Operators length dict begin
//Operators{
exch dup
[exch//=only/exec load
( )/print load
8 7 roll
dup type/arraytype eq{
/exec load
}if
( )/print load
]cvx
def
}forall
currentdict end/Operators exch def
}if
/.registerencoding
{pop pop
}bind def
/.defineencoding
{def
}bind def
/.findencoding
{load
}bind def
/currentglobal where
{pop currentglobal{setglobal}true setglobal}
{{}}
ifelse
/MacRomanEncoding
StandardEncoding 0 39 getinterval aload pop
/quotesingle
StandardEncoding 40 56 getinterval aload pop
/grave
StandardEncoding 97 31 getinterval aload pop
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave
/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde
/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef
/florin/.notdef/.notdef/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright
/quoteleft/quoteright/divide/.notdef
/ydieresis/Ydieresis/fraction/currency
/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase
/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex
/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
256 packedarray
5 1 index .registerencoding
.defineencoding
exec
/AdobeGlyphList mark
/A 16#0041
/AE 16#00c6
/AEacute 16#01fc
/AEmacron 16#01e2
/AEsmall 16#f7e6
/Aacute 16#00c1
/Aacutesmall 16#f7e1
/Abreve 16#0102
/Abreveacute 16#1eae
/Abrevecyrillic 16#04d0
/Abrevedotbelow 16#1eb6
/Abrevegrave 16#1eb0
/Abrevehookabove 16#1eb2
/Abrevetilde 16#1eb4
/Acaron 16#01cd
/Acircle 16#24b6
/Acircumflex 16#00c2
/Acircumflexacute 16#1ea4
/Acircumflexdotbelow 16#1eac
/Acircumflexgrave 16#1ea6
/Acircumflexhookabove 16#1ea8
/Acircumflexsmall 16#f7e2
/Acircumflextilde 16#1eaa
/Acute 16#f6c9
/Acutesmall 16#f7b4
/Acyrillic 16#0410
/Adblgrave 16#0200
/Adieresis 16#00c4
/Adieresiscyrillic 16#04d2
/Adieresismacron 16#01de
/Adieresissmall 16#f7e4
/Adotbelow 16#1ea0
/Adotmacron 16#01e0
/Agrave 16#00c0
/Agravesmall 16#f7e0
/Ahookabove 16#1ea2
/Aiecyrillic 16#04d4
/Ainvertedbreve 16#0202
/Alpha 16#0391
/Alphatonos 16#0386
/Amacron 16#0100
/Amonospace 16#ff21
/Aogonek 16#0104
/Aring 16#00c5
/Aringacute 16#01fa
/Aringbelow 16#1e00
/Aringsmall 16#f7e5
/Asmall 16#f761
/Atilde 16#00c3
/Atildesmall 16#f7e3
/Aybarmenian 16#0531
/B 16#0042
/Bcircle 16#24b7
/Bdotaccent 16#1e02
/Bdotbelow 16#1e04
/Becyrillic 16#0411
/Benarmenian 16#0532
/Beta 16#0392
/Bhook 16#0181
/Blinebelow 16#1e06
/Bmonospace 16#ff22
/Brevesmall 16#f6f4
/Bsmall 16#f762
/Btopbar 16#0182
/C 16#0043
/Caarmenian 16#053e
/Cacute 16#0106
/Caron 16#f6ca
/Caronsmall 16#f6f5
/Ccaron 16#010c
/Ccedilla 16#00c7
/Ccedillaacute 16#1e08
/Ccedillasmall 16#f7e7
/Ccircle 16#24b8
/Ccircumflex 16#0108
/Cdot 16#010a
/Cdotaccent 16#010a
/Cedillasmall 16#f7b8
/Chaarmenian 16#0549
/Cheabkhasiancyrillic 16#04bc
/Checyrillic 16#0427
/Chedescenderabkhasiancyrillic 16#04be
/Chedescendercyrillic 16#04b6
/Chedieresiscyrillic 16#04f4
/Cheharmenian 16#0543
/Chekhakassiancyrillic 16#04cb
/Cheverticalstrokecyrillic 16#04b8
/Chi 16#03a7
/Chook 16#0187
/Circumflexsmall 16#f6f6
/Cmonospace 16#ff23
/Coarmenian 16#0551
/Csmall 16#f763
/D 16#0044
/DZ 16#01f1
/DZcaron 16#01c4
/Daarmenian 16#0534
/Dafrican 16#0189
/Dcaron 16#010e
/Dcedilla 16#1e10
/Dcircle 16#24b9
/Dcircumflexbelow 16#1e12
/Dcroat 16#0110
/Ddotaccent 16#1e0a
/Ddotbelow 16#1e0c
/Decyrillic 16#0414
/Deicoptic 16#03ee
/Delta 16#2206
/Deltagreek 16#0394
/Dhook 16#018a
/Dieresis 16#f6cb
/DieresisAcute 16#f6cc
/DieresisGrave 16#f6cd
/Dieresissmall 16#f7a8
/Digammagreek 16#03dc
/Djecyrillic 16#0402
/Dlinebelow 16#1e0e
/Dmonospace 16#ff24
/Dotaccentsmall 16#f6f7
/Dslash 16#0110
/Dsmall 16#f764
/Dtopbar 16#018b
/Dz 16#01f2
/Dzcaron 16#01c5
/Dzeabkhasiancyrillic 16#04e0
/Dzecyrillic 16#0405
/Dzhecyrillic 16#040f
/E 16#0045
/Eacute 16#00c9
/Eacutesmall 16#f7e9
/Ebreve 16#0114
/Ecaron 16#011a
/Ecedillabreve 16#1e1c
/Echarmenian 16#0535
/Ecircle 16#24ba
/Ecircumflex 16#00ca
/Ecircumflexacute 16#1ebe
/Ecircumflexbelow 16#1e18
/Ecircumflexdotbelow 16#1ec6
/Ecircumflexgrave 16#1ec0
/Ecircumflexhookabove 16#1ec2
/Ecircumflexsmall 16#f7ea
/Ecircumflextilde 16#1ec4
/Ecyrillic 16#0404
/Edblgrave 16#0204
/Edieresis 16#00cb
/Edieresissmall 16#f7eb
/Edot 16#0116
/Edotaccent 16#0116
/Edotbelow 16#1eb8
/Efcyrillic 16#0424
/Egrave 16#00c8
/Egravesmall 16#f7e8
/Eharmenian 16#0537
/Ehookabove 16#1eba
/Eightroman 16#2167
/Einvertedbreve 16#0206
/Eiotifiedcyrillic 16#0464
/Elcyrillic 16#041b
/Elevenroman 16#216a
/Emacron 16#0112
/Emacronacute 16#1e16
/Emacrongrave 16#1e14
/Emcyrillic 16#041c
/Emonospace 16#ff25
/Encyrillic 16#041d
/Endescendercyrillic 16#04a2
/Eng 16#014a
/Enghecyrillic 16#04a4
/Enhookcyrillic 16#04c7
/Eogonek 16#0118
/Eopen 16#0190
/Epsilon 16#0395
/Epsilontonos 16#0388
/Ercyrillic 16#0420
/Ereversed 16#018e
/Ereversedcyrillic 16#042d
/Escyrillic 16#0421
/Esdescendercyrillic 16#04aa
/Esh 16#01a9
/Esmall 16#f765
/Eta 16#0397
/Etarmenian 16#0538
/Etatonos 16#0389
/Eth 16#00d0
/Ethsmall 16#f7f0
/Etilde 16#1ebc
/Etildebelow 16#1e1a
/Euro 16#20ac
/Ezh 16#01b7
/Ezhcaron 16#01ee
/Ezhreversed 16#01b8
/F 16#0046
/Fcircle 16#24bb
/Fdotaccent 16#1e1e
/Feharmenian 16#0556
/Feicoptic 16#03e4
/Fhook 16#0191
/Fitacyrillic 16#0472
/Fiveroman 16#2164
/Fmonospace 16#ff26
/Fourroman 16#2163
/Fsmall 16#f766
/G 16#0047
/GBsquare 16#3387
/Gacute 16#01f4
/Gamma 16#0393
/Gammaafrican 16#0194
/Gangiacoptic 16#03ea
/Gbreve 16#011e
/Gcaron 16#01e6
/Gcedilla 16#0122
/Gcircle 16#24bc
/Gcircumflex 16#011c
/Gcommaaccent 16#0122
/Gdot 16#0120
/Gdotaccent 16#0120
/Gecyrillic 16#0413
/Ghadarmenian 16#0542
/Ghemiddlehookcyrillic 16#0494
/Ghestrokecyrillic 16#0492
/Gheupturncyrillic 16#0490
/Ghook 16#0193
/Gimarmenian 16#0533
/Gjecyrillic 16#0403
/Gmacron 16#1e20
/Gmonospace 16#ff27
/Grave 16#f6ce
/Gravesmall 16#f760
/Gsmall 16#f767
/Gsmallhook 16#029b
/Gstroke 16#01e4
/H 16#0048
/H18533 16#25cf
/H18543 16#25aa
/H18551 16#25ab
/H22073 16#25a1
/HPsquare 16#33cb
/Haabkhasiancyrillic 16#04a8
/Hadescendercyrillic 16#04b2
/Hardsigncyrillic 16#042a
/Hbar 16#0126
/Hbrevebelow 16#1e2a
/Hcedilla 16#1e28
/Hcircle 16#24bd
/Hcircumflex 16#0124
/Hdieresis 16#1e26
/Hdotaccent 16#1e22
/Hdotbelow 16#1e24
/Hmonospace 16#ff28
/Hoarmenian 16#0540
/Horicoptic 16#03e8
/Hsmall 16#f768
/Hungarumlaut 16#f6cf
/Hungarumlautsmall 16#f6f8
/Hzsquare 16#3390
/I 16#0049
/IAcyrillic 16#042f
/IJ 16#0132
/IUcyrillic 16#042e
/Iacute 16#00cd
/Iacutesmall 16#f7ed
/Ibreve 16#012c
/Icaron 16#01cf
/Icircle 16#24be
/Icircumflex 16#00ce
/Icircumflexsmall 16#f7ee
/Icyrillic 16#0406
/Idblgrave 16#0208
/Idieresis 16#00cf
/Idieresisacute 16#1e2e
/Idieresiscyrillic 16#04e4
/Idieresissmall 16#f7ef
/Idot 16#0130
/Idotaccent 16#0130
/Idotbelow 16#1eca
/Iebrevecyrillic 16#04d6
/Iecyrillic 16#0415
/Ifraktur 16#2111
/Igrave 16#00cc
/Igravesmall 16#f7ec
/Ihookabove 16#1ec8
/Iicyrillic 16#0418
/Iinvertedbreve 16#020a
/Iishortcyrillic 16#0419
/Imacron 16#012a
/Imacroncyrillic 16#04e2
/Imonospace 16#ff29
/Iniarmenian 16#053b
/Iocyrillic 16#0401
/Iogonek 16#012e
/Iota 16#0399
/Iotaafrican 16#0196
/Iotadieresis 16#03aa
/Iotatonos 16#038a
/Ismall 16#f769
/Istroke 16#0197
/Itilde 16#0128
/Itildebelow 16#1e2c
/Izhitsacyrillic 16#0474
/Izhitsadblgravecyrillic 16#0476
/J 16#004a
/Jaarmenian 16#0541
/Jcircle 16#24bf
/Jcircumflex 16#0134
/Jecyrillic 16#0408
/Jheharmenian 16#054b
/Jmonospace 16#ff2a
/Jsmall 16#f76a
/K 16#004b
/KBsquare 16#3385
/KKsquare 16#33cd
/Kabashkircyrillic 16#04a0
/Kacute 16#1e30
/Kacyrillic 16#041a
/Kadescendercyrillic 16#049a
/Kahookcyrillic 16#04c3
/Kappa 16#039a
/Kastrokecyrillic 16#049e
/Kaverticalstrokecyrillic 16#049c
/Kcaron 16#01e8
/Kcedilla 16#0136
/Kcircle 16#24c0
/Kcommaaccent 16#0136
/Kdotbelow 16#1e32
/Keharmenian 16#0554
/Kenarmenian 16#053f
/Khacyrillic 16#0425
/Kheicoptic 16#03e6
/Khook 16#0198
/Kjecyrillic 16#040c
/Klinebelow 16#1e34
/Kmonospace 16#ff2b
/Koppacyrillic 16#0480
/Koppagreek 16#03de
/Ksicyrillic 16#046e
/Ksmall 16#f76b
/L 16#004c
/LJ 16#01c7
/LL 16#f6bf
/Lacute 16#0139
/Lambda 16#039b
/Lcaron 16#013d
/Lcedilla 16#013b
/Lcircle 16#24c1
/Lcircumflexbelow 16#1e3c
/Lcommaaccent 16#013b
/Ldot 16#013f
/Ldotaccent 16#013f
/Ldotbelow 16#1e36
/Ldotbelowmacron 16#1e38
/Liwnarmenian 16#053c
/Lj 16#01c8
/Ljecyrillic 16#0409
/Llinebelow 16#1e3a
/Lmonospace 16#ff2c
/Lslash 16#0141
/Lslashsmall 16#f6f9
/Lsmall 16#f76c
/M 16#004d
/MBsquare 16#3386
/Macron 16#f6d0
/Macronsmall 16#f7af
/Macute 16#1e3e
/Mcircle 16#24c2
/Mdotaccent 16#1e40
/Mdotbelow 16#1e42
/Menarmenian 16#0544
/Mmonospace 16#ff2d
/Msmall 16#f76d
/Mturned 16#019c
/Mu 16#039c
/N 16#004e
/NJ 16#01ca
/Nacute 16#0143
/Ncaron 16#0147
/Ncedilla 16#0145
/Ncircle 16#24c3
/Ncircumflexbelow 16#1e4a
/Ncommaaccent 16#0145
/Ndotaccent 16#1e44
/Ndotbelow 16#1e46
/Nhookleft 16#019d
/Nineroman 16#2168
/Nj 16#01cb
/Njecyrillic 16#040a
/Nlinebelow 16#1e48
/Nmonospace 16#ff2e
/Nowarmenian 16#0546
/Nsmall 16#f76e
/Ntilde 16#00d1
/Ntildesmall 16#f7f1
/Nu 16#039d
/O 16#004f
/OE 16#0152
/OEsmall 16#f6fa
/Oacute 16#00d3
/Oacutesmall 16#f7f3
/Obarredcyrillic 16#04e8
/Obarreddieresiscyrillic 16#04ea
/Obreve 16#014e
/Ocaron 16#01d1
/Ocenteredtilde 16#019f
/Ocircle 16#24c4
/Ocircumflex 16#00d4
/Ocircumflexacute 16#1ed0
/Ocircumflexdotbelow 16#1ed8
/Ocircumflexgrave 16#1ed2
/Ocircumflexhookabove 16#1ed4
/Ocircumflexsmall 16#f7f4
/Ocircumflextilde 16#1ed6
/Ocyrillic 16#041e
/Odblacute 16#0150
/Odblgrave 16#020c
/Odieresis 16#00d6
/Odieresiscyrillic 16#04e6
/Odieresissmall 16#f7f6
/Odotbelow 16#1ecc
/Ogoneksmall 16#f6fb
/Ograve 16#00d2
/Ogravesmall 16#f7f2
/Oharmenian 16#0555
/Ohm 16#2126
/Ohookabove 16#1ece
/Ohorn 16#01a0
/Ohornacute 16#1eda
/Ohorndotbelow 16#1ee2
/Ohorngrave 16#1edc
/Ohornhookabove 16#1ede
/Ohorntilde 16#1ee0
/Ohungarumlaut 16#0150
/Oi 16#01a2
/Oinvertedbreve 16#020e
/Omacron 16#014c
/Omacronacute 16#1e52
/Omacrongrave 16#1e50
/Omega 16#2126
/Omegacyrillic 16#0460
/Omegagreek 16#03a9
/Omegaroundcyrillic 16#047a
/Omegatitlocyrillic 16#047c
/Omegatonos 16#038f
/Omicron 16#039f
/Omicrontonos 16#038c
/Omonospace 16#ff2f
/Oneroman 16#2160
/Oogonek 16#01ea
/Oogonekmacron 16#01ec
/Oopen 16#0186
/Oslash 16#00d8
/Oslashacute 16#01fe
/Oslashsmall 16#f7f8
/Osmall 16#f76f
/Ostrokeacute 16#01fe
/Otcyrillic 16#047e
/Otilde 16#00d5
/Otildeacute 16#1e4c
/Otildedieresis 16#1e4e
/Otildesmall 16#f7f5
/P 16#0050
/Pacute 16#1e54
/Pcircle 16#24c5
/Pdotaccent 16#1e56
/Pecyrillic 16#041f
/Peharmenian 16#054a
/Pemiddlehookcyrillic 16#04a6
/Phi 16#03a6
/Phook 16#01a4
/Pi 16#03a0
/Piwrarmenian 16#0553
/Pmonospace 16#ff30
/Psi 16#03a8
/Psicyrillic 16#0470
/Psmall 16#f770
/Q 16#0051
/Qcircle 16#24c6
/Qmonospace 16#ff31
/Qsmall 16#f771
/R 16#0052
/Raarmenian 16#054c
/Racute 16#0154
/Rcaron 16#0158
/Rcedilla 16#0156
/Rcircle 16#24c7
/Rcommaaccent 16#0156
/Rdblgrave 16#0210
/Rdotaccent 16#1e58
/Rdotbelow 16#1e5a
/Rdotbelowmacron 16#1e5c
/Reharmenian 16#0550
/Rfraktur 16#211c
/Rho 16#03a1
/Ringsmall 16#f6fc
/Rinvertedbreve 16#0212
/Rlinebelow 16#1e5e
/Rmonospace 16#ff32
/Rsmall 16#f772
/Rsmallinverted 16#0281
/Rsmallinvertedsuperior 16#02b6
/S 16#0053
/SF010000 16#250c
/SF020000 16#2514
/SF030000 16#2510
/SF040000 16#2518
/SF050000 16#253c
/SF060000 16#252c
/SF070000 16#2534
/SF080000 16#251c
/SF090000 16#2524
/SF100000 16#2500
/SF110000 16#2502
/SF190000 16#2561
/SF200000 16#2562
/SF210000 16#2556
/SF220000 16#2555
/SF230000 16#2563
/SF240000 16#2551
/SF250000 16#2557
/SF260000 16#255d
/SF270000 16#255c
/SF280000 16#255b
/SF360000 16#255e
/SF370000 16#255f
/SF380000 16#255a
/SF390000 16#2554
/SF400000 16#2569
/SF410000 16#2566
/SF420000 16#2560
/SF430000 16#2550
/SF440000 16#256c
/SF450000 16#2567
/SF460000 16#2568
/SF470000 16#2564
/SF480000 16#2565
/SF490000 16#2559
/SF500000 16#2558
/SF510000 16#2552
/SF520000 16#2553
/SF530000 16#256b
/SF540000 16#256a
/Sacute 16#015a
/Sacutedotaccent 16#1e64
/Sampigreek 16#03e0
/Scaron 16#0160
/Scarondotaccent 16#1e66
/Scaronsmall 16#f6fd
/Scedilla 16#015e
/Schwa 16#018f
/Schwacyrillic 16#04d8
/Schwadieresiscyrillic 16#04da
/Scircle 16#24c8
/Scircumflex 16#015c
/Scommaaccent 16#0218
/Sdotaccent 16#1e60
/Sdotbelow 16#1e62
/Sdotbelowdotaccent 16#1e68
/Seharmenian 16#054d
/Sevenroman 16#2166
/Shaarmenian 16#0547
/Shacyrillic 16#0428
/Shchacyrillic 16#0429
/Sheicoptic 16#03e2
/Shhacyrillic 16#04ba
/Shimacoptic 16#03ec
/Sigma 16#03a3
/Sixroman 16#2165
/Smonospace 16#ff33
/Softsigncyrillic 16#042c
/Ssmall 16#f773
/Stigmagreek 16#03da
/T 16#0054
/Tau 16#03a4
/Tbar 16#0166
/Tcaron 16#0164
/Tcedilla 16#0162
/Tcircle 16#24c9
/Tcircumflexbelow 16#1e70
/Tcommaaccent 16#0162
/Tdotaccent 16#1e6a
/Tdotbelow 16#1e6c
/Tecyrillic 16#0422
/Tedescendercyrillic 16#04ac
/Tenroman 16#2169
/Tetsecyrillic 16#04b4
/Theta 16#0398
/Thook 16#01ac
/Thorn 16#00de
/Thornsmall 16#f7fe
/Threeroman 16#2162
/Tildesmall 16#f6fe
/Tiwnarmenian 16#054f
/Tlinebelow 16#1e6e
/Tmonospace 16#ff34
/Toarmenian 16#0539
/Tonefive 16#01bc
/Tonesix 16#0184
/Tonetwo 16#01a7
/Tretroflexhook 16#01ae
/Tsecyrillic 16#0426
/Tshecyrillic 16#040b
/Tsmall 16#f774
/Twelveroman 16#216b
/Tworoman 16#2161
/U 16#0055
/Uacute 16#00da
/Uacutesmall 16#f7fa
/Ubreve 16#016c
/Ucaron 16#01d3
/Ucircle 16#24ca
/Ucircumflex 16#00db
/Ucircumflexbelow 16#1e76
/Ucircumflexsmall 16#f7fb
/Ucyrillic 16#0423
/Udblacute 16#0170
/Udblgrave 16#0214
/Udieresis 16#00dc
/Udieresisacute 16#01d7
/Udieresisbelow 16#1e72
/Udieresiscaron 16#01d9
/Udieresiscyrillic 16#04f0
/Udieresisgrave 16#01db
/Udieresismacron 16#01d5
/Udieresissmall 16#f7fc
/Udotbelow 16#1ee4
/Ugrave 16#00d9
/Ugravesmall 16#f7f9
/Uhookabove 16#1ee6
/Uhorn 16#01af
/Uhornacute 16#1ee8
/Uhorndotbelow 16#1ef0
/Uhorngrave 16#1eea
/Uhornhookabove 16#1eec
/Uhorntilde 16#1eee
/Uhungarumlaut 16#0170
/Uhungarumlautcyrillic 16#04f2
/Uinvertedbreve 16#0216
/Ukcyrillic 16#0478
/Umacron 16#016a
/Umacroncyrillic 16#04ee
/Umacrondieresis 16#1e7a
/Umonospace 16#ff35
/Uogonek 16#0172
/Upsilon 16#03a5
/Upsilon1 16#03d2
/Upsilonacutehooksymbolgreek 16#03d3
/Upsilonafrican 16#01b1
/Upsilondieresis 16#03ab
/Upsilondieresishooksymbolgreek 16#03d4
/Upsilonhooksymbol 16#03d2
/Upsilontonos 16#038e
/Uring 16#016e
/Ushortcyrillic 16#040e
/Usmall 16#f775
/Ustraightcyrillic 16#04ae
/Ustraightstrokecyrillic 16#04b0
/Utilde 16#0168
/Utildeacute 16#1e78
/Utildebelow 16#1e74
/V 16#0056
/Vcircle 16#24cb
/Vdotbelow 16#1e7e
/Vecyrillic 16#0412
/Vewarmenian 16#054e
/Vhook 16#01b2
/Vmonospace 16#ff36
/Voarmenian 16#0548
/Vsmall 16#f776
/Vtilde 16#1e7c
/W 16#0057
/Wacute 16#1e82
/Wcircle 16#24cc
/Wcircumflex 16#0174
/Wdieresis 16#1e84
/Wdotaccent 16#1e86
/Wdotbelow 16#1e88
/Wgrave 16#1e80
/Wmonospace 16#ff37
/Wsmall 16#f777
/X 16#0058
/Xcircle 16#24cd
/Xdieresis 16#1e8c
/Xdotaccent 16#1e8a
/Xeharmenian 16#053d
/Xi 16#039e
/Xmonospace 16#ff38
/Xsmall 16#f778
/Y 16#0059
/Yacute 16#00dd
/Yacutesmall 16#f7fd
/Yatcyrillic 16#0462
/Ycircle 16#24ce
/Ycircumflex 16#0176
/Ydieresis 16#0178
/Ydieresissmall 16#f7ff
/Ydotaccent 16#1e8e
/Ydotbelow 16#1ef4
/Yericyrillic 16#042b
/Yerudieresiscyrillic 16#04f8
/Ygrave 16#1ef2
/Yhook 16#01b3
/Yhookabove 16#1ef6
/Yiarmenian 16#0545
/Yicyrillic 16#0407
/Yiwnarmenian 16#0552
/Ymonospace 16#ff39
/Ysmall 16#f779
/Ytilde 16#1ef8
/Yusbigcyrillic 16#046a
/Yusbigiotifiedcyrillic 16#046c
/Yuslittlecyrillic 16#0466
/Yuslittleiotifiedcyrillic 16#0468
/Z 16#005a
/Zaarmenian 16#0536
/Zacute 16#0179
/Zcaron 16#017d
/Zcaronsmall 16#f6ff
/Zcircle 16#24cf
/Zcircumflex 16#1e90
/Zdot 16#017b
/Zdotaccent 16#017b
/Zdotbelow 16#1e92
/Zecyrillic 16#0417
/Zedescendercyrillic 16#0498
/Zedieresiscyrillic 16#04de
/Zeta 16#0396
/Zhearmenian 16#053a
/Zhebrevecyrillic 16#04c1
/Zhecyrillic 16#0416
/Zhedescendercyrillic 16#0496
/Zhedieresiscyrillic 16#04dc
/Zlinebelow 16#1e94
/Zmonospace 16#ff3a
/Zsmall 16#f77a
/Zstroke 16#01b5
/a 16#0061
/aabengali 16#0986
/aacute 16#00e1
/aadeva 16#0906
/aagujarati 16#0a86
/aagurmukhi 16#0a06
/aamatragurmukhi 16#0a3e
/aarusquare 16#3303
/aavowelsignbengali 16#09be
/aavowelsigndeva 16#093e
/aavowelsigngujarati 16#0abe
/abbreviationmarkarmenian 16#055f
/abbreviationsigndeva 16#0970
/abengali 16#0985
/abopomofo 16#311a
/abreve 16#0103
/abreveacute 16#1eaf
/abrevecyrillic 16#04d1
/abrevedotbelow 16#1eb7
/abrevegrave 16#1eb1
/abrevehookabove 16#1eb3
/abrevetilde 16#1eb5
/acaron 16#01ce
/acircle 16#24d0
/acircumflex 16#00e2
/acircumflexacute 16#1ea5
/acircumflexdotbelow 16#1ead
/acircumflexgrave 16#1ea7
/acircumflexhookabove 16#1ea9
/acircumflextilde 16#1eab
/acute 16#00b4
/acutebelowcmb 16#0317
/acutecmb 16#0301
/acutecomb 16#0301
/acutedeva 16#0954
/acutelowmod 16#02cf
/acutetonecmb 16#0341
/acyrillic 16#0430
/adblgrave 16#0201
/addakgurmukhi 16#0a71
/adeva 16#0905
/adieresis 16#00e4
/adieresiscyrillic 16#04d3
/adieresismacron 16#01df
/adotbelow 16#1ea1
/adotmacron 16#01e1
/ae 16#00e6
/aeacute 16#01fd
/aekorean 16#3150
/aemacron 16#01e3
/afii00208 16#2015
/afii08941 16#20a4
/afii10017 16#0410
/afii10018 16#0411
/afii10019 16#0412
/afii10020 16#0413
/afii10021 16#0414
/afii10022 16#0415
/afii10023 16#0401
/afii10024 16#0416
/afii10025 16#0417
/afii10026 16#0418
/afii10027 16#0419
/afii10028 16#041a
/afii10029 16#041b
/afii10030 16#041c
/afii10031 16#041d
/afii10032 16#041e
/afii10033 16#041f
/afii10034 16#0420
/afii10035 16#0421
/afii10036 16#0422
/afii10037 16#0423
/afii10038 16#0424
/afii10039 16#0425
/afii10040 16#0426
/afii10041 16#0427
/afii10042 16#0428
/afii10043 16#0429
/afii10044 16#042a
/afii10045 16#042b
/afii10046 16#042c
/afii10047 16#042d
/afii10048 16#042e
/afii10049 16#042f
/afii10050 16#0490
/afii10051 16#0402
/afii10052 16#0403
/afii10053 16#0404
/afii10054 16#0405
/afii10055 16#0406
/afii10056 16#0407
/afii10057 16#0408
/afii10058 16#0409
/afii10059 16#040a
/afii10060 16#040b
/afii10061 16#040c
/afii10062 16#040e
/afii10063 16#f6c4
/afii10064 16#f6c5
/afii10065 16#0430
/afii10066 16#0431
/afii10067 16#0432
/afii10068 16#0433
/afii10069 16#0434
/afii10070 16#0435
/afii10071 16#0451
/afii10072 16#0436
/afii10073 16#0437
/afii10074 16#0438
/afii10075 16#0439
/afii10076 16#043a
/afii10077 16#043b
/afii10078 16#043c
/afii10079 16#043d
/afii10080 16#043e
/afii10081 16#043f
/afii10082 16#0440
/afii10083 16#0441
/afii10084 16#0442
/afii10085 16#0443
/afii10086 16#0444
/afii10087 16#0445
/afii10088 16#0446
/afii10089 16#0447
/afii10090 16#0448
/afii10091 16#0449
/afii10092 16#044a
/afii10093 16#044b
/afii10094 16#044c
/afii10095 16#044d
/afii10096 16#044e
/afii10097 16#044f
/afii10098 16#0491
/afii10099 16#0452
/afii10100 16#0453
/afii10101 16#0454
/afii10102 16#0455
/afii10103 16#0456
/afii10104 16#0457
/afii10105 16#0458
/afii10106 16#0459
/afii10107 16#045a
/afii10108 16#045b
/afii10109 16#045c
/afii10110 16#045e
/afii10145 16#040f
/afii10146 16#0462
/afii10147 16#0472
/afii10148 16#0474
/afii10192 16#f6c6
/afii10193 16#045f
/afii10194 16#0463
/afii10195 16#0473
/afii10196 16#0475
/afii10831 16#f6c7
/afii10832 16#f6c8
/afii10846 16#04d9
/afii299 16#200e
/afii300 16#200f
/afii301 16#200d
/afii57381 16#066a
/afii57388 16#060c
/afii57392 16#0660
/afii57393 16#0661
/afii57394 16#0662
/afii57395 16#0663
/afii57396 16#0664
/afii57397 16#0665
/afii57398 16#0666
/afii57399 16#0667
/afii57400 16#0668
/afii57401 16#0669
/afii57403 16#061b
/afii57407 16#061f
/afii57409 16#0621
/afii57410 16#0622
/afii57411 16#0623
/afii57412 16#0624
/afii57413 16#0625
/afii57414 16#0626
/afii57415 16#0627
/afii57416 16#0628
/afii57417 16#0629
/afii57418 16#062a
/afii57419 16#062b
/afii57420 16#062c
/afii57421 16#062d
/afii57422 16#062e
/afii57423 16#062f
/afii57424 16#0630
/afii57425 16#0631
/afii57426 16#0632
/afii57427 16#0633
/afii57428 16#0634
/afii57429 16#0635
/afii57430 16#0636
/afii57431 16#0637
/afii57432 16#0638
/afii57433 16#0639
/afii57434 16#063a
/afii57440 16#0640
/afii57441 16#0641
/afii57442 16#0642
/afii57443 16#0643
/afii57444 16#0644
/afii57445 16#0645
/afii57446 16#0646
/afii57448 16#0648
/afii57449 16#0649
/afii57450 16#064a
/afii57451 16#064b
/afii57452 16#064c
/afii57453 16#064d
/afii57454 16#064e
/afii57455 16#064f
/afii57456 16#0650
/afii57457 16#0651
/afii57458 16#0652
/afii57470 16#0647
/afii57505 16#06a4
/afii57506 16#067e
/afii57507 16#0686
/afii57508 16#0698
/afii57509 16#06af
/afii57511 16#0679
/afii57512 16#0688
/afii57513 16#0691
/afii57514 16#06ba
/afii57519 16#06d2
/afii57534 16#06d5
/afii57636 16#20aa
/afii57645 16#05be
/afii57658 16#05c3
/afii57664 16#05d0
/afii57665 16#05d1
/afii57666 16#05d2
/afii57667 16#05d3
/afii57668 16#05d4
/afii57669 16#05d5
/afii57670 16#05d6
/afii57671 16#05d7
/afii57672 16#05d8
/afii57673 16#05d9
/afii57674 16#05da
/afii57675 16#05db
/afii57676 16#05dc
/afii57677 16#05dd
/afii57678 16#05de
/afii57679 16#05df
/afii57680 16#05e0
/afii57681 16#05e1
/afii57682 16#05e2
/afii57683 16#05e3
/afii57684 16#05e4
/afii57685 16#05e5
/afii57686 16#05e6
/afii57687 16#05e7
/afii57688 16#05e8
/afii57689 16#05e9
/afii57690 16#05ea
/afii57694 16#fb2a
/afii57695 16#fb2b
/afii57700 16#fb4b
/afii57705 16#fb1f
/afii57716 16#05f0
/afii57717 16#05f1
/afii57718 16#05f2
/afii57723 16#fb35
/afii57793 16#05b4
/afii57794 16#05b5
/afii57795 16#05b6
/afii57796 16#05bb
/afii57797 16#05b8
/afii57798 16#05b7
/afii57799 16#05b0
/afii57800 16#05b2
/afii57801 16#05b1
/afii57802 16#05b3
/afii57803 16#05c2
/afii57804 16#05c1
/afii57806 16#05b9
/afii57807 16#05bc
/afii57839 16#05bd
/afii57841 16#05bf
/afii57842 16#05c0
/afii57929 16#02bc
/afii61248 16#2105
/afii61289 16#2113
/afii61352 16#2116
/afii61573 16#202c
/afii61574 16#202d
/afii61575 16#202e
/afii61664 16#200c
/afii63167 16#066d
/afii64937 16#02bd
/agrave 16#00e0
/agujarati 16#0a85
/agurmukhi 16#0a05
/ahiragana 16#3042
/ahookabove 16#1ea3
/aibengali 16#0990
/aibopomofo 16#311e
/aideva 16#0910
/aiecyrillic 16#04d5
/aigujarati 16#0a90
/aigurmukhi 16#0a10
/aimatragurmukhi 16#0a48
/ainarabic 16#0639
/ainfinalarabic 16#feca
/aininitialarabic 16#fecb
/ainmedialarabic 16#fecc
/ainvertedbreve 16#0203
/aivowelsignbengali 16#09c8
/aivowelsigndeva 16#0948
/aivowelsigngujarati 16#0ac8
/akatakana 16#30a2
/akatakanahalfwidth 16#ff71
/akorean 16#314f
/alef 16#05d0
/alefarabic 16#0627
/alefdageshhebrew 16#fb30
/aleffinalarabic 16#fe8e
/alefhamzaabovearabic 16#0623
/alefhamzaabovefinalarabic 16#fe84
/alefhamzabelowarabic 16#0625
/alefhamzabelowfinalarabic 16#fe88
/alefhebrew 16#05d0
/aleflamedhebrew 16#fb4f
/alefmaddaabovearabic 16#0622
/alefmaddaabovefinalarabic 16#fe82
/alefmaksuraarabic 16#0649
/alefmaksurafinalarabic 16#fef0
/alefmaksurainitialarabic 16#fef3
/alefmaksuramedialarabic 16#fef4
/alefpatahhebrew 16#fb2e
/alefqamatshebrew 16#fb2f
/aleph 16#2135
/allequal 16#224c
/alpha 16#03b1
/alphatonos 16#03ac
/amacron 16#0101
/amonospace 16#ff41
/ampersand 16#0026
/ampersandmonospace 16#ff06
/ampersandsmall 16#f726
/amsquare 16#33c2
/anbopomofo 16#3122
/angbopomofo 16#3124
/angkhankhuthai 16#0e5a
/angle 16#2220
/anglebracketleft 16#3008
/anglebracketleftvertical 16#fe3f
/anglebracketright 16#3009
/anglebracketrightvertical 16#fe40
/angleleft 16#2329
/angleright 16#232a
/angstrom 16#212b
/anoteleia 16#0387
/anudattadeva 16#0952
/anusvarabengali 16#0982
/anusvaradeva 16#0902
/anusvaragujarati 16#0a82
/aogonek 16#0105
/apaatosquare 16#3300
/aparen 16#249c
/apostrophearmenian 16#055a
/apostrophemod 16#02bc
/apple 16#f8ff
/approaches 16#2250
/approxequal 16#2248
/approxequalorimage 16#2252
/approximatelyequal 16#2245
/araeaekorean 16#318e
/araeakorean 16#318d
/arc 16#2312
/arighthalfring 16#1e9a
/aring 16#00e5
/aringacute 16#01fb
/aringbelow 16#1e01
/arrowboth 16#2194
/arrowdashdown 16#21e3
/arrowdashleft 16#21e0
/arrowdashright 16#21e2
/arrowdashup 16#21e1
/arrowdblboth 16#21d4
/arrowdbldown 16#21d3
/arrowdblleft 16#21d0
/arrowdblright 16#21d2
/arrowdblup 16#21d1
/arrowdown 16#2193
/arrowdownleft 16#2199
/arrowdownright 16#2198
/arrowdownwhite 16#21e9
/arrowheaddownmod 16#02c5
/arrowheadleftmod 16#02c2
/arrowheadrightmod 16#02c3
/arrowheadupmod 16#02c4
/arrowhorizex 16#f8e7
/arrowleft 16#2190
/arrowleftdbl 16#21d0
/arrowleftdblstroke 16#21cd
/arrowleftoverright 16#21c6
/arrowleftwhite 16#21e6
/arrowright 16#2192
/arrowrightdblstroke 16#21cf
/arrowrightheavy 16#279e
/arrowrightoverleft 16#21c4
/arrowrightwhite 16#21e8
/arrowtableft 16#21e4
/arrowtabright 16#21e5
/arrowup 16#2191
/arrowupdn 16#2195
/arrowupdnbse 16#21a8
/arrowupdownbase 16#21a8
/arrowupleft 16#2196
/arrowupleftofdown 16#21c5
/arrowupright 16#2197
/arrowupwhite 16#21e7
/arrowvertex 16#f8e6
/asciicircum 16#005e
/asciicircummonospace 16#ff3e
/asciitilde 16#007e
/asciitildemonospace 16#ff5e
/ascript 16#0251
/ascriptturned 16#0252
/asmallhiragana 16#3041
/asmallkatakana 16#30a1
/asmallkatakanahalfwidth 16#ff67
/asterisk 16#002a
/asteriskaltonearabic 16#066d
/asteriskarabic 16#066d
/asteriskmath 16#2217
/asteriskmonospace 16#ff0a
/asterisksmall 16#fe61
/asterism 16#2042
/asuperior 16#f6e9
/asymptoticallyequal 16#2243
/at 16#0040
/atilde 16#00e3
/atmonospace 16#ff20
/atsmall 16#fe6b
/aturned 16#0250
/aubengali 16#0994
/aubopomofo 16#3120
/audeva 16#0914
/augujarati 16#0a94
/augurmukhi 16#0a14
/aulengthmarkbengali 16#09d7
/aumatragurmukhi 16#0a4c
/auvowelsignbengali 16#09cc
/auvowelsigndeva 16#094c
/auvowelsigngujarati 16#0acc
/avagrahadeva 16#093d
/aybarmenian 16#0561
/ayin 16#05e2
/ayinaltonehebrew 16#fb20
/ayinhebrew 16#05e2
/b 16#0062
/babengali 16#09ac
/backslash 16#005c
/backslashmonospace 16#ff3c
/badeva 16#092c
/bagujarati 16#0aac
/bagurmukhi 16#0a2c
/bahiragana 16#3070
/bahtthai 16#0e3f
/bakatakana 16#30d0
/bar 16#007c
/barmonospace 16#ff5c
/bbopomofo 16#3105
/bcircle 16#24d1
/bdotaccent 16#1e03
/bdotbelow 16#1e05
/beamedsixteenthnotes 16#266c
/because 16#2235
/becyrillic 16#0431
/beharabic 16#0628
/behfinalarabic 16#fe90
/behinitialarabic 16#fe91
/behiragana 16#3079
/behmedialarabic 16#fe92
/behmeeminitialarabic 16#fc9f
/behmeemisolatedarabic 16#fc08
/behnoonfinalarabic 16#fc6d
/bekatakana 16#30d9
/benarmenian 16#0562
/bet 16#05d1
/beta 16#03b2
/betasymbolgreek 16#03d0
/betdagesh 16#fb31
/betdageshhebrew 16#fb31
/bethebrew 16#05d1
/betrafehebrew 16#fb4c
/bhabengali 16#09ad
/bhadeva 16#092d
/bhagujarati 16#0aad
/bhagurmukhi 16#0a2d
/bhook 16#0253
/bihiragana 16#3073
/bikatakana 16#30d3
/bilabialclick 16#0298
/bindigurmukhi 16#0a02
/birusquare 16#3331
/blackcircle 16#25cf
/blackdiamond 16#25c6
/blackdownpointingtriangle 16#25bc
/blackleftpointingpointer 16#25c4
/blackleftpointingtriangle 16#25c0
/blacklenticularbracketleft 16#3010
/blacklenticularbracketleftvertical 16#fe3b
/blacklenticularbracketright 16#3011
/blacklenticularbracketrightvertical 16#fe3c
/blacklowerlefttriangle 16#25e3
/blacklowerrighttriangle 16#25e2
/blackrectangle 16#25ac
/blackrightpointingpointer 16#25ba
/blackrightpointingtriangle 16#25b6
/blacksmallsquare 16#25aa
/blacksmilingface 16#263b
/blacksquare 16#25a0
/blackstar 16#2605
/blackupperlefttriangle 16#25e4
/blackupperrighttriangle 16#25e5
/blackuppointingsmalltriangle 16#25b4
/blackuppointingtriangle 16#25b2
/blank 16#2423
/blinebelow 16#1e07
/block 16#2588
/bmonospace 16#ff42
/bobaimaithai 16#0e1a
/bohiragana 16#307c
/bokatakana 16#30dc
/bparen 16#249d
/bqsquare 16#33c3
/braceex 16#f8f4
/braceleft 16#007b
/braceleftbt 16#f8f3
/braceleftmid 16#f8f2
/braceleftmonospace 16#ff5b
/braceleftsmall 16#fe5b
/bracelefttp 16#f8f1
/braceleftvertical 16#fe37
/braceright 16#007d
/bracerightbt 16#f8fe
/bracerightmid 16#f8fd
/bracerightmonospace 16#ff5d
/bracerightsmall 16#fe5c
/bracerighttp 16#f8fc
/bracerightvertical 16#fe38
/bracketleft 16#005b
/bracketleftbt 16#f8f0
/bracketleftex 16#f8ef
/bracketleftmonospace 16#ff3b
/bracketlefttp 16#f8ee
/bracketright 16#005d
/bracketrightbt 16#f8fb
/bracketrightex 16#f8fa
/bracketrightmonospace 16#ff3d
/bracketrighttp 16#f8f9
/breve 16#02d8
/brevebelowcmb 16#032e
/brevecmb 16#0306
/breveinvertedbelowcmb 16#032f
/breveinvertedcmb 16#0311
/breveinverteddoublecmb 16#0361
/bridgebelowcmb 16#032a
/bridgeinvertedbelowcmb 16#033a
/brokenbar 16#00a6
/bstroke 16#0180
/bsuperior 16#f6ea
/btopbar 16#0183
/buhiragana 16#3076
/bukatakana 16#30d6
/bullet 16#2022
/bulletinverse 16#25d8
/bulletoperator 16#2219
/bullseye 16#25ce
/c 16#0063
/caarmenian 16#056e
/cabengali 16#099a
/cacute 16#0107
/cadeva 16#091a
/cagujarati 16#0a9a
/cagurmukhi 16#0a1a
/calsquare 16#3388
/candrabindubengali 16#0981
/candrabinducmb 16#0310
/candrabindudeva 16#0901
/candrabindugujarati 16#0a81
/capslock 16#21ea
/careof 16#2105
/caron 16#02c7
/caronbelowcmb 16#032c
/caroncmb 16#030c
/carriagereturn 16#21b5
/cbopomofo 16#3118
/ccaron 16#010d
/ccedilla 16#00e7
/ccedillaacute 16#1e09
/ccircle 16#24d2
/ccircumflex 16#0109
/ccurl 16#0255
/cdot 16#010b
/cdotaccent 16#010b
/cdsquare 16#33c5
/cedilla 16#00b8
/cedillacmb 16#0327
/cent 16#00a2
/centigrade 16#2103
/centinferior 16#f6df
/centmonospace 16#ffe0
/centoldstyle 16#f7a2
/centsuperior 16#f6e0
/chaarmenian 16#0579
/chabengali 16#099b
/chadeva 16#091b
/chagujarati 16#0a9b
/chagurmukhi 16#0a1b
/chbopomofo 16#3114
/cheabkhasiancyrillic 16#04bd
/checkmark 16#2713
/checyrillic 16#0447
/chedescenderabkhasiancyrillic 16#04bf
/chedescendercyrillic 16#04b7
/chedieresiscyrillic 16#04f5
/cheharmenian 16#0573
/chekhakassiancyrillic 16#04cc
/cheverticalstrokecyrillic 16#04b9
/chi 16#03c7
/chieuchacirclekorean 16#3277
/chieuchaparenkorean 16#3217
/chieuchcirclekorean 16#3269
/chieuchkorean 16#314a
/chieuchparenkorean 16#3209
/chochangthai 16#0e0a
/chochanthai 16#0e08
/chochingthai 16#0e09
/chochoethai 16#0e0c
/chook 16#0188
/cieucacirclekorean 16#3276
/cieucaparenkorean 16#3216
/cieuccirclekorean 16#3268
/cieuckorean 16#3148
/cieucparenkorean 16#3208
/cieucuparenkorean 16#321c
/circle 16#25cb
/circlemultiply 16#2297
/circleot 16#2299
/circleplus 16#2295
/circlepostalmark 16#3036
/circlewithlefthalfblack 16#25d0
/circlewithrighthalfblack 16#25d1
/circumflex 16#02c6
/circumflexbelowcmb 16#032d
/circumflexcmb 16#0302
/clear 16#2327
/clickalveolar 16#01c2
/clickdental 16#01c0
/clicklateral 16#01c1
/clickretroflex 16#01c3
/club 16#2663
/clubsuitblack 16#2663
/clubsuitwhite 16#2667
/cmcubedsquare 16#33a4
/cmonospace 16#ff43
/cmsquaredsquare 16#33a0
/coarmenian 16#0581
/colon 16#003a
/colonmonetary 16#20a1
/colonmonospace 16#ff1a
/colonsign 16#20a1
/colonsmall 16#fe55
/colontriangularhalfmod 16#02d1
/colontriangularmod 16#02d0
/comma 16#002c
/commaabovecmb 16#0313
/commaaboverightcmb 16#0315
/commaaccent 16#f6c3
/commaarabic 16#060c
/commaarmenian 16#055d
/commainferior 16#f6e1
/commamonospace 16#ff0c
/commareversedabovecmb 16#0314
/commareversedmod 16#02bd
/commasmall 16#fe50
/commasuperior 16#f6e2
/commaturnedabovecmb 16#0312
/commaturnedmod 16#02bb
/compass 16#263c
/congruent 16#2245
/contourintegral 16#222e
/control 16#2303
/controlACK 16#0006
/controlBEL 16#0007
/controlBS 16#0008
/controlCAN 16#0018
/controlCR 16#000d
/controlDC1 16#0011
/controlDC2 16#0012
/controlDC3 16#0013
/controlDC4 16#0014
/controlDEL 16#007f
/controlDLE 16#0010
/controlEM 16#0019
/controlENQ 16#0005
/controlEOT 16#0004
/controlESC 16#001b
/controlETB 16#0017
/controlETX 16#0003
/controlFF 16#000c
/controlFS 16#001c
/controlGS 16#001d
/controlHT 16#0009
/controlLF 16#000a
/controlNAK 16#0015
/controlRS 16#001e
/controlSI 16#000f
/controlSO 16#000e
/controlSOT 16#0002
/controlSTX 16#0001
/controlSUB 16#001a
/controlSYN 16#0016
/controlUS 16#001f
/controlVT 16#000b
/copyright 16#00a9
/copyrightsans 16#f8e9
/copyrightserif 16#f6d9
/cornerbracketleft 16#300c
/cornerbracketlefthalfwidth 16#ff62
/cornerbracketleftvertical 16#fe41
/cornerbracketright 16#300d
/cornerbracketrighthalfwidth 16#ff63
/cornerbracketrightvertical 16#fe42
/corporationsquare 16#337f
/cosquare 16#33c7
/coverkgsquare 16#33c6
/cparen 16#249e
/cruzeiro 16#20a2
/cstretched 16#0297
/curlyand 16#22cf
/curlyor 16#22ce
/currency 16#00a4
/cyrBreve 16#f6d1
/cyrFlex 16#f6d2
/cyrbreve 16#f6d4
/cyrflex 16#f6d5
/d 16#0064
/daarmenian 16#0564
/dabengali 16#09a6
/dadarabic 16#0636
/dadeva 16#0926
/dadfinalarabic 16#febe
/dadinitialarabic 16#febf
/dadmedialarabic 16#fec0
/dagesh 16#05bc
/dageshhebrew 16#05bc
/dagger 16#2020
/daggerdbl 16#2021
/dagujarati 16#0aa6
/dagurmukhi 16#0a26
/dahiragana 16#3060
/dakatakana 16#30c0
/dalarabic 16#062f
/dalet 16#05d3
/daletdagesh 16#fb33
/daletdageshhebrew 16#fb33
/dalethebrew 16#05d3
/dalfinalarabic 16#feaa
/dammaarabic 16#064f
/dammalowarabic 16#064f
/dammatanaltonearabic 16#064c
/dammatanarabic 16#064c
/danda 16#0964
/dargahebrew 16#05a7
/dargalefthebrew 16#05a7
/dasiapneumatacyrilliccmb 16#0485
/dblGrave 16#f6d3
/dblanglebracketleft 16#300a
/dblanglebracketleftvertical 16#fe3d
/dblanglebracketright 16#300b
/dblanglebracketrightvertical 16#fe3e
/dblarchinvertedbelowcmb 16#032b
/dblarrowleft 16#21d4
/dblarrowright 16#21d2
/dbldanda 16#0965
/dblgrave 16#f6d6
/dblgravecmb 16#030f
/dblintegral 16#222c
/dbllowline 16#2017
/dbllowlinecmb 16#0333
/dbloverlinecmb 16#033f
/dblprimemod 16#02ba
/dblverticalbar 16#2016
/dblverticallineabovecmb 16#030e
/dbopomofo 16#3109
/dbsquare 16#33c8
/dcaron 16#010f
/dcedilla 16#1e11
/dcircle 16#24d3
/dcircumflexbelow 16#1e13
/dcroat 16#0111
/ddabengali 16#09a1
/ddadeva 16#0921
/ddagujarati 16#0aa1
/ddagurmukhi 16#0a21
/ddalarabic 16#0688
/ddalfinalarabic 16#fb89
/dddhadeva 16#095c
/ddhabengali 16#09a2
/ddhadeva 16#0922
/ddhagujarati 16#0aa2
/ddhagurmukhi 16#0a22
/ddotaccent 16#1e0b
/ddotbelow 16#1e0d
/decimalseparatorarabic 16#066b
/decimalseparatorpersian 16#066b
/decyrillic 16#0434
/degree 16#00b0
/dehihebrew 16#05ad
/dehiragana 16#3067
/deicoptic 16#03ef
/dekatakana 16#30c7
/deleteleft 16#232b
/deleteright 16#2326
/delta 16#03b4
/deltaturned 16#018d
/denominatorminusonenumeratorbengali 16#09f8
/dezh 16#02a4
/dhabengali 16#09a7
/dhadeva 16#0927
/dhagujarati 16#0aa7
/dhagurmukhi 16#0a27
/dhook 16#0257
/dialytikatonos 16#0385
/dialytikatonoscmb 16#0344
/diamond 16#2666
/diamondsuitwhite 16#2662
/dieresis 16#00a8
/dieresisacute 16#f6d7
/dieresisbelowcmb 16#0324
/dieresiscmb 16#0308
/dieresisgrave 16#f6d8
/dieresistonos 16#0385
/dihiragana 16#3062
/dikatakana 16#30c2
/dittomark 16#3003
/divide 16#00f7
/divides 16#2223
/divisionslash 16#2215
/djecyrillic 16#0452
/dkshade 16#2593
/dlinebelow 16#1e0f
/dlsquare 16#3397
/dmacron 16#0111
/dmonospace 16#ff44
/dnblock 16#2584
/dochadathai 16#0e0e
/dodekthai 16#0e14
/dohiragana 16#3069
/dokatakana 16#30c9
/dollar 16#0024
/dollarinferior 16#f6e3
/dollarmonospace 16#ff04
/dollaroldstyle 16#f724
/dollarsmall 16#fe69
/dollarsuperior 16#f6e4
/dong 16#20ab
/dorusquare 16#3326
/dotaccent 16#02d9
/dotaccentcmb 16#0307
/dotbelowcmb 16#0323
/dotbelowcomb 16#0323
/dotkatakana 16#30fb
/dotlessi 16#0131
/dotlessj 16#f6be
/dotlessjstrokehook 16#0284
/dotmath 16#22c5
/dottedcircle 16#25cc
/doubleyodpatah 16#fb1f
/doubleyodpatahhebrew 16#fb1f
/downtackbelowcmb 16#031e
/downtackmod 16#02d5
/dparen 16#249f
/dsuperior 16#f6eb
/dtail 16#0256
/dtopbar 16#018c
/duhiragana 16#3065
/dukatakana 16#30c5
/dz 16#01f3
/dzaltone 16#02a3
/dzcaron 16#01c6
/dzcurl 16#02a5
/dzeabkhasiancyrillic 16#04e1
/dzecyrillic 16#0455
/dzhecyrillic 16#045f
/e 16#0065
/eacute 16#00e9
/earth 16#2641
/ebengali 16#098f
/ebopomofo 16#311c
/ebreve 16#0115
/ecandradeva 16#090d
/ecandragujarati 16#0a8d
/ecandravowelsigndeva 16#0945
/ecandravowelsigngujarati 16#0ac5
/ecaron 16#011b
/ecedillabreve 16#1e1d
/echarmenian 16#0565
/echyiwnarmenian 16#0587
/ecircle 16#24d4
/ecircumflex 16#00ea
/ecircumflexacute 16#1ebf
/ecircumflexbelow 16#1e19
/ecircumflexdotbelow 16#1ec7
/ecircumflexgrave 16#1ec1
/ecircumflexhookabove 16#1ec3
/ecircumflextilde 16#1ec5
/ecyrillic 16#0454
/edblgrave 16#0205
/edeva 16#090f
/edieresis 16#00eb
/edot 16#0117
/edotaccent 16#0117
/edotbelow 16#1eb9
/eegurmukhi 16#0a0f
/eematragurmukhi 16#0a47
/efcyrillic 16#0444
/egrave 16#00e8
/egujarati 16#0a8f
/eharmenian 16#0567
/ehbopomofo 16#311d
/ehiragana 16#3048
/ehookabove 16#1ebb
/eibopomofo 16#311f
/eight 16#0038
/eightarabic 16#0668
/eightbengali 16#09ee
/eightcircle 16#2467
/eightcircleinversesansserif 16#2791
/eightdeva 16#096e
/eighteencircle 16#2471
/eighteenparen 16#2485
/eighteenperiod 16#2499
/eightgujarati 16#0aee
/eightgurmukhi 16#0a6e
/eighthackarabic 16#0668
/eighthangzhou 16#3028
/eighthnotebeamed 16#266b
/eightideographicparen 16#3227
/eightinferior 16#2088
/eightmonospace 16#ff18
/eightoldstyle 16#f738
/eightparen 16#247b
/eightperiod 16#248f
/eightpersian 16#06f8
/eightroman 16#2177
/eightsuperior 16#2078
/eightthai 16#0e58
/einvertedbreve 16#0207
/eiotifiedcyrillic 16#0465
/ekatakana 16#30a8
/ekatakanahalfwidth 16#ff74
/ekonkargurmukhi 16#0a74
/ekorean 16#3154
/elcyrillic 16#043b
/element 16#2208
/elevencircle 16#246a
/elevenparen 16#247e
/elevenperiod 16#2492
/elevenroman 16#217a
/ellipsis 16#2026
/ellipsisvertical 16#22ee
/emacron 16#0113
/emacronacute 16#1e17
/emacrongrave 16#1e15
/emcyrillic 16#043c
/emdash 16#2014
/emdashvertical 16#fe31
/emonospace 16#ff45
/emphasismarkarmenian 16#055b
/emptyset 16#2205
/enbopomofo 16#3123
/encyrillic 16#043d
/endash 16#2013
/endashvertical 16#fe32
/endescendercyrillic 16#04a3
/eng 16#014b
/engbopomofo 16#3125
/enghecyrillic 16#04a5
/enhookcyrillic 16#04c8
/enspace 16#2002
/eogonek 16#0119
/eokorean 16#3153
/eopen 16#025b
/eopenclosed 16#029a
/eopenreversed 16#025c
/eopenreversedclosed 16#025e
/eopenreversedhook 16#025d
/eparen 16#24a0
/epsilon 16#03b5
/epsilontonos 16#03ad
/equal 16#003d
/equalmonospace 16#ff1d
/equalsmall 16#fe66
/equalsuperior 16#207c
/equivalence 16#2261
/erbopomofo 16#3126
/ercyrillic 16#0440
/ereversed 16#0258
/ereversedcyrillic 16#044d
/escyrillic 16#0441
/esdescendercyrillic 16#04ab
/esh 16#0283
/eshcurl 16#0286
/eshortdeva 16#090e
/eshortvowelsigndeva 16#0946
/eshreversedloop 16#01aa
/eshsquatreversed 16#0285
/esmallhiragana 16#3047
/esmallkatakana 16#30a7
/esmallkatakanahalfwidth 16#ff6a
/estimated 16#212e
/esuperior 16#f6ec
/eta 16#03b7
/etarmenian 16#0568
/etatonos 16#03ae
/eth 16#00f0
/etilde 16#1ebd
/etildebelow 16#1e1b
/etnahtafoukhhebrew 16#0591
/etnahtafoukhlefthebrew 16#0591
/etnahtahebrew 16#0591
/etnahtalefthebrew 16#0591
/eturned 16#01dd
/eukorean 16#3161
/euro 16#20ac
/evowelsignbengali 16#09c7
/evowelsigndeva 16#0947
/evowelsigngujarati 16#0ac7
/exclam 16#0021
/exclamarmenian 16#055c
/exclamdbl 16#203c
/exclamdown 16#00a1
/exclamdownsmall 16#f7a1
/exclammonospace 16#ff01
/exclamsmall 16#f721
/existential 16#2203
/ezh 16#0292
/ezhcaron 16#01ef
/ezhcurl 16#0293
/ezhreversed 16#01b9
/ezhtail 16#01ba
/f 16#0066
/fadeva 16#095e
/fagurmukhi 16#0a5e
/fahrenheit 16#2109
/fathaarabic 16#064e
/fathalowarabic 16#064e
/fathatanarabic 16#064b
/fbopomofo 16#3108
/fcircle 16#24d5
/fdotaccent 16#1e1f
/feharabic 16#0641
/feharmenian 16#0586
/fehfinalarabic 16#fed2
/fehinitialarabic 16#fed3
/fehmedialarabic 16#fed4
/feicoptic 16#03e5
/female 16#2640
/ff 16#fb00
/ffi 16#fb03
/ffl 16#fb04
/fi 16#fb01
/fifteencircle 16#246e
/fifteenparen 16#2482
/fifteenperiod 16#2496
/figuredash 16#2012
/filledbox 16#25a0
/filledrect 16#25ac
/finalkaf 16#05da
/finalkafdagesh 16#fb3a
/finalkafdageshhebrew 16#fb3a
/finalkafhebrew 16#05da
/finalmem 16#05dd
/finalmemhebrew 16#05dd
/finalnun 16#05df
/finalnunhebrew 16#05df
/finalpe 16#05e3
/finalpehebrew 16#05e3
/finaltsadi 16#05e5
/finaltsadihebrew 16#05e5
/firsttonechinese 16#02c9
/fisheye 16#25c9
/fitacyrillic 16#0473
/five 16#0035
/fivearabic 16#0665
/fivebengali 16#09eb
/fivecircle 16#2464
/fivecircleinversesansserif 16#278e
/fivedeva 16#096b
/fiveeighths 16#215d
/fivegujarati 16#0aeb
/fivegurmukhi 16#0a6b
/fivehackarabic 16#0665
/fivehangzhou 16#3025
/fiveideographicparen 16#3224
/fiveinferior 16#2085
/fivemonospace 16#ff15
/fiveoldstyle 16#f735
/fiveparen 16#2478
/fiveperiod 16#248c
/fivepersian 16#06f5
/fiveroman 16#2174
/fivesuperior 16#2075
/fivethai 16#0e55
/fl 16#fb02
/florin 16#0192
/fmonospace 16#ff46
/fmsquare 16#3399
/fofanthai 16#0e1f
/fofathai 16#0e1d
/fongmanthai 16#0e4f
/forall 16#2200
/four 16#0034
/fourarabic 16#0664
/fourbengali 16#09ea
/fourcircle 16#2463
/fourcircleinversesansserif 16#278d
/fourdeva 16#096a
/fourgujarati 16#0aea
/fourgurmukhi 16#0a6a
/fourhackarabic 16#0664
/fourhangzhou 16#3024
/fourideographicparen 16#3223
/fourinferior 16#2084
/fourmonospace 16#ff14
/fournumeratorbengali 16#09f7
/fouroldstyle 16#f734
/fourparen 16#2477
/fourperiod 16#248b
/fourpersian 16#06f4
/fourroman 16#2173
/foursuperior 16#2074
/fourteencircle 16#246d
/fourteenparen 16#2481
/fourteenperiod 16#2495
/fourthai 16#0e54
/fourthtonechinese 16#02cb
/fparen 16#24a1
/fraction 16#2044
/franc 16#20a3
/g 16#0067
/gabengali 16#0997
/gacute 16#01f5
/gadeva 16#0917
/gafarabic 16#06af
/gaffinalarabic 16#fb93
/gafinitialarabic 16#fb94
/gafmedialarabic 16#fb95
/gagujarati 16#0a97
/gagurmukhi 16#0a17
/gahiragana 16#304c
/gakatakana 16#30ac
/gamma 16#03b3
/gammalatinsmall 16#0263
/gammasuperior 16#02e0
/gangiacoptic 16#03eb
/gbopomofo 16#310d
/gbreve 16#011f
/gcaron 16#01e7
/gcedilla 16#0123
/gcircle 16#24d6
/gcircumflex 16#011d
/gcommaaccent 16#0123
/gdot 16#0121
/gdotaccent 16#0121
/gecyrillic 16#0433
/gehiragana 16#3052
/gekatakana 16#30b2
/geometricallyequal 16#2251
/gereshaccenthebrew 16#059c
/gereshhebrew 16#05f3
/gereshmuqdamhebrew 16#059d
/germandbls 16#00df
/gershayimaccenthebrew 16#059e
/gershayimhebrew 16#05f4
/getamark 16#3013
/ghabengali 16#0998
/ghadarmenian 16#0572
/ghadeva 16#0918
/ghagujarati 16#0a98
/ghagurmukhi 16#0a18
/ghainarabic 16#063a
/ghainfinalarabic 16#fece
/ghaininitialarabic 16#fecf
/ghainmedialarabic 16#fed0
/ghemiddlehookcyrillic 16#0495
/ghestrokecyrillic 16#0493
/gheupturncyrillic 16#0491
/ghhadeva 16#095a
/ghhagurmukhi 16#0a5a
/ghook 16#0260
/ghzsquare 16#3393
/gihiragana 16#304e
/gikatakana 16#30ae
/gimarmenian 16#0563
/gimel 16#05d2
/gimeldagesh 16#fb32
/gimeldageshhebrew 16#fb32
/gimelhebrew 16#05d2
/gjecyrillic 16#0453
/glottalinvertedstroke 16#01be
/glottalstop 16#0294
/glottalstopinverted 16#0296
/glottalstopmod 16#02c0
/glottalstopreversed 16#0295
/glottalstopreversedmod 16#02c1
/glottalstopreversedsuperior 16#02e4
/glottalstopstroke 16#02a1
/glottalstopstrokereversed 16#02a2
/gmacron 16#1e21
/gmonospace 16#ff47
/gohiragana 16#3054
/gokatakana 16#30b4
/gparen 16#24a2
/gpasquare 16#33ac
/gradient 16#2207
/grave 16#0060
/gravebelowcmb 16#0316
/gravecmb 16#0300
/gravecomb 16#0300
/gravedeva 16#0953
/gravelowmod 16#02ce
/gravemonospace 16#ff40
/gravetonecmb 16#0340
/greater 16#003e
/greaterequal 16#2265
/greaterequalorless 16#22db
/greatermonospace 16#ff1e
/greaterorequivalent 16#2273
/greaterorless 16#2277
/greateroverequal 16#2267
/greatersmall 16#fe65
/gscript 16#0261
/gstroke 16#01e5
/guhiragana 16#3050
/guillemotleft 16#00ab
/guillemotright 16#00bb
/guilsinglleft 16#2039
/guilsinglright 16#203a
/gukatakana 16#30b0
/guramusquare 16#3318
/gysquare 16#33c9
/h 16#0068
/haabkhasiancyrillic 16#04a9
/haaltonearabic 16#06c1
/habengali 16#09b9
/hadescendercyrillic 16#04b3
/hadeva 16#0939
/hagujarati 16#0ab9
/hagurmukhi 16#0a39
/haharabic 16#062d
/hahfinalarabic 16#fea2
/hahinitialarabic 16#fea3
/hahiragana 16#306f
/hahmedialarabic 16#fea4
/haitusquare 16#332a
/hakatakana 16#30cf
/hakatakanahalfwidth 16#ff8a
/halantgurmukhi 16#0a4d
/hamzaarabic 16#0621
/hamzalowarabic 16#0621
/hangulfiller 16#3164
/hardsigncyrillic 16#044a
/harpoonleftbarbup 16#21bc
/harpoonrightbarbup 16#21c0
/hasquare 16#33ca
/hatafpatah 16#05b2
/hatafpatah16 16#05b2
/hatafpatah23 16#05b2
/hatafpatah2f 16#05b2
/hatafpatahhebrew 16#05b2
/hatafpatahnarrowhebrew 16#05b2
/hatafpatahquarterhebrew 16#05b2
/hatafpatahwidehebrew 16#05b2
/hatafqamats 16#05b3
/hatafqamats1b 16#05b3
/hatafqamats28 16#05b3
/hatafqamats34 16#05b3
/hatafqamatshebrew 16#05b3
/hatafqamatsnarrowhebrew 16#05b3
/hatafqamatsquarterhebrew 16#05b3
/hatafqamatswidehebrew 16#05b3
/hatafsegol 16#05b1
/hatafsegol17 16#05b1
/hatafsegol24 16#05b1
/hatafsegol30 16#05b1
/hatafsegolhebrew 16#05b1
/hatafsegolnarrowhebrew 16#05b1
/hatafsegolquarterhebrew 16#05b1
/hatafsegolwidehebrew 16#05b1
/hbar 16#0127
/hbopomofo 16#310f
/hbrevebelow 16#1e2b
/hcedilla 16#1e29
/hcircle 16#24d7
/hcircumflex 16#0125
/hdieresis 16#1e27
/hdotaccent 16#1e23
/hdotbelow 16#1e25
/he 16#05d4
/heart 16#2665
/heartsuitblack 16#2665
/heartsuitwhite 16#2661
/hedagesh 16#fb34
/hedageshhebrew 16#fb34
/hehaltonearabic 16#06c1
/heharabic 16#0647
/hehebrew 16#05d4
/hehfinalaltonearabic 16#fba7
/hehfinalalttwoarabic 16#feea
/hehfinalarabic 16#feea
/hehhamzaabovefinalarabic 16#fba5
/hehhamzaaboveisolatedarabic 16#fba4
/hehinitialaltonearabic 16#fba8
/hehinitialarabic 16#feeb
/hehiragana 16#3078
/hehmedialaltonearabic 16#fba9
/hehmedialarabic 16#feec
/heiseierasquare 16#337b
/hekatakana 16#30d8
/hekatakanahalfwidth 16#ff8d
/hekutaarusquare 16#3336
/henghook 16#0267
/herutusquare 16#3339
/het 16#05d7
/hethebrew 16#05d7
/hhook 16#0266
/hhooksuperior 16#02b1
/hieuhacirclekorean 16#327b
/hieuhaparenkorean 16#321b
/hieuhcirclekorean 16#326d
/hieuhkorean 16#314e
/hieuhparenkorean 16#320d
/hihiragana 16#3072
/hikatakana 16#30d2
/hikatakanahalfwidth 16#ff8b
/hiriq 16#05b4
/hiriq14 16#05b4
/hiriq21 16#05b4
/hiriq2d 16#05b4
/hiriqhebrew 16#05b4
/hiriqnarrowhebrew 16#05b4
/hiriqquarterhebrew 16#05b4
/hiriqwidehebrew 16#05b4
/hlinebelow 16#1e96
/hmonospace 16#ff48
/hoarmenian 16#0570
/hohipthai 16#0e2b
/hohiragana 16#307b
/hokatakana 16#30db
/hokatakanahalfwidth 16#ff8e
/holam 16#05b9
/holam19 16#05b9
/holam26 16#05b9
/holam32 16#05b9
/holamhebrew 16#05b9
/holamnarrowhebrew 16#05b9
/holamquarterhebrew 16#05b9
/holamwidehebrew 16#05b9
/honokhukthai 16#0e2e
/hookabovecomb 16#0309
/hookcmb 16#0309
/hookpalatalizedbelowcmb 16#0321
/hookretroflexbelowcmb 16#0322
/hoonsquare 16#3342
/horicoptic 16#03e9
/horizontalbar 16#2015
/horncmb 16#031b
/hotsprings 16#2668
/house 16#2302
/hparen 16#24a3
/hsuperior 16#02b0
/hturned 16#0265
/huhiragana 16#3075
/huiitosquare 16#3333
/hukatakana 16#30d5
/hukatakanahalfwidth 16#ff8c
/hungarumlaut 16#02dd
/hungarumlautcmb 16#030b
/hv 16#0195
/hyphen 16#002d
/hypheninferior 16#f6e5
/hyphenmonospace 16#ff0d
/hyphensmall 16#fe63
/hyphensuperior 16#f6e6
/hyphentwo 16#2010
/i 16#0069
/iacute 16#00ed
/iacyrillic 16#044f
/ibengali 16#0987
/ibopomofo 16#3127
/ibreve 16#012d
/icaron 16#01d0
/icircle 16#24d8
/icircumflex 16#00ee
/icyrillic 16#0456
/idblgrave 16#0209
/ideographearthcircle 16#328f
/ideographfirecircle 16#328b
/ideographicallianceparen 16#323f
/ideographiccallparen 16#323a
/ideographiccentrecircle 16#32a5
/ideographicclose 16#3006
/ideographiccomma 16#3001
/ideographiccommaleft 16#ff64
/ideographiccongratulationparen 16#3237
/ideographiccorrectcircle 16#32a3
/ideographicearthparen 16#322f
/ideographicenterpriseparen 16#323d
/ideographicexcellentcircle 16#329d
/ideographicfestivalparen 16#3240
/ideographicfinancialcircle 16#3296
/ideographicfinancialparen 16#3236
/ideographicfireparen 16#322b
/ideographichaveparen 16#3232
/ideographichighcircle 16#32a4
/ideographiciterationmark 16#3005
/ideographiclaborcircle 16#3298
/ideographiclaborparen 16#3238
/ideographicleftcircle 16#32a7
/ideographiclowcircle 16#32a6
/ideographicmedicinecircle 16#32a9
/ideographicmetalparen 16#322e
/ideographicmoonparen 16#322a
/ideographicnameparen 16#3234
/ideographicperiod 16#3002
/ideographicprintcircle 16#329e
/ideographicreachparen 16#3243
/ideographicrepresentparen 16#3239
/ideographicresourceparen 16#323e
/ideographicrightcircle 16#32a8
/ideographicsecretcircle 16#3299
/ideographicselfparen 16#3242
/ideographicsocietyparen 16#3233
/ideographicspace 16#3000
/ideographicspecialparen 16#3235
/ideographicstockparen 16#3231
/ideographicstudyparen 16#323b
/ideographicsunparen 16#3230
/ideographicsuperviseparen 16#323c
/ideographicwaterparen 16#322c
/ideographicwoodparen 16#322d
/ideographiczero 16#3007
/ideographmetalcircle 16#328e
/ideographmooncircle 16#328a
/ideographnamecircle 16#3294
/ideographsuncircle 16#3290
/ideographwatercircle 16#328c
/ideographwoodcircle 16#328d
/ideva 16#0907
/idieresis 16#00ef
/idieresisacute 16#1e2f
/idieresiscyrillic 16#04e5
/idotbelow 16#1ecb
/iebrevecyrillic 16#04d7
/iecyrillic 16#0435
/ieungacirclekorean 16#3275
/ieungaparenkorean 16#3215
/ieungcirclekorean 16#3267
/ieungkorean 16#3147
/ieungparenkorean 16#3207
/igrave 16#00ec
/igujarati 16#0a87
/igurmukhi 16#0a07
/ihiragana 16#3044
/ihookabove 16#1ec9
/iibengali 16#0988
/iicyrillic 16#0438
/iideva 16#0908
/iigujarati 16#0a88
/iigurmukhi 16#0a08
/iimatragurmukhi 16#0a40
/iinvertedbreve 16#020b
/iishortcyrillic 16#0439
/iivowelsignbengali 16#09c0
/iivowelsigndeva 16#0940
/iivowelsigngujarati 16#0ac0
/ij 16#0133
/ikatakana 16#30a4
/ikatakanahalfwidth 16#ff72
/ikorean 16#3163
/ilde 16#02dc
/iluyhebrew 16#05ac
/imacron 16#012b
/imacroncyrillic 16#04e3
/imageorapproximatelyequal 16#2253
/imatragurmukhi 16#0a3f
/imonospace 16#ff49
/increment 16#2206
/infinity 16#221e
/iniarmenian 16#056b
/integral 16#222b
/integralbottom 16#2321
/integralbt 16#2321
/integralex 16#f8f5
/integraltop 16#2320
/integraltp 16#2320
/intersection 16#2229
/intisquare 16#3305
/invbullet 16#25d8
/invcircle 16#25d9
/invsmileface 16#263b
/iocyrillic 16#0451
/iogonek 16#012f
/iota 16#03b9
/iotadieresis 16#03ca
/iotadieresistonos 16#0390
/iotalatin 16#0269
/iotatonos 16#03af
/iparen 16#24a4
/irigurmukhi 16#0a72
/ismallhiragana 16#3043
/ismallkatakana 16#30a3
/ismallkatakanahalfwidth 16#ff68
/issharbengali 16#09fa
/istroke 16#0268
/isuperior 16#f6ed
/iterationhiragana 16#309d
/iterationkatakana 16#30fd
/itilde 16#0129
/itildebelow 16#1e2d
/iubopomofo 16#3129
/iucyrillic 16#044e
/ivowelsignbengali 16#09bf
/ivowelsigndeva 16#093f
/ivowelsigngujarati 16#0abf
/izhitsacyrillic 16#0475
/izhitsadblgravecyrillic 16#0477
/j 16#006a
/jaarmenian 16#0571
/jabengali 16#099c
/jadeva 16#091c
/jagujarati 16#0a9c
/jagurmukhi 16#0a1c
/jbopomofo 16#3110
/jcaron 16#01f0
/jcircle 16#24d9
/jcircumflex 16#0135
/jcrossedtail 16#029d
/jdotlessstroke 16#025f
/jecyrillic 16#0458
/jeemarabic 16#062c
/jeemfinalarabic 16#fe9e
/jeeminitialarabic 16#fe9f
/jeemmedialarabic 16#fea0
/jeharabic 16#0698
/jehfinalarabic 16#fb8b
/jhabengali 16#099d
/jhadeva 16#091d
/jhagujarati 16#0a9d
/jhagurmukhi 16#0a1d
/jheharmenian 16#057b
/jis 16#3004
/jmonospace 16#ff4a
/jparen 16#24a5
/jsuperior 16#02b2
/k 16#006b
/kabashkircyrillic 16#04a1
/kabengali 16#0995
/kacute 16#1e31
/kacyrillic 16#043a
/kadescendercyrillic 16#049b
/kadeva 16#0915
/kaf 16#05db
/kafarabic 16#0643
/kafdagesh 16#fb3b
/kafdageshhebrew 16#fb3b
/kaffinalarabic 16#feda
/kafhebrew 16#05db
/kafinitialarabic 16#fedb
/kafmedialarabic 16#fedc
/kafrafehebrew 16#fb4d
/kagujarati 16#0a95
/kagurmukhi 16#0a15
/kahiragana 16#304b
/kahookcyrillic 16#04c4
/kakatakana 16#30ab
/kakatakanahalfwidth 16#ff76
/kappa 16#03ba
/kappasymbolgreek 16#03f0
/kapyeounmieumkorean 16#3171
/kapyeounphieuphkorean 16#3184
/kapyeounpieupkorean 16#3178
/kapyeounssangpieupkorean 16#3179
/karoriisquare 16#330d
/kashidaautoarabic 16#0640
/kashidaautonosidebearingarabic 16#0640
/kasmallkatakana 16#30f5
/kasquare 16#3384
/kasraarabic 16#0650
/kasratanarabic 16#064d
/kastrokecyrillic 16#049f
/katahiraprolongmarkhalfwidth 16#ff70
/kaverticalstrokecyrillic 16#049d
/kbopomofo 16#310e
/kcalsquare 16#3389
/kcaron 16#01e9
/kcedilla 16#0137
/kcircle 16#24da
/kcommaaccent 16#0137
/kdotbelow 16#1e33
/keharmenian 16#0584
/kehiragana 16#3051
/kekatakana 16#30b1
/kekatakanahalfwidth 16#ff79
/kenarmenian 16#056f
/kesmallkatakana 16#30f6
/kgreenlandic 16#0138
/khabengali 16#0996
/khacyrillic 16#0445
/khadeva 16#0916
/khagujarati 16#0a96
/khagurmukhi 16#0a16
/khaharabic 16#062e
/khahfinalarabic 16#fea6
/khahinitialarabic 16#fea7
/khahmedialarabic 16#fea8
/kheicoptic 16#03e7
/khhadeva 16#0959
/khhagurmukhi 16#0a59
/khieukhacirclekorean 16#3278
/khieukhaparenkorean 16#3218
/khieukhcirclekorean 16#326a
/khieukhkorean 16#314b
/khieukhparenkorean 16#320a
/khokhaithai 16#0e02
/khokhonthai 16#0e05
/khokhuatthai 16#0e03
/khokhwaithai 16#0e04
/khomutthai 16#0e5b
/khook 16#0199
/khorakhangthai 16#0e06
/khzsquare 16#3391
/kihiragana 16#304d
/kikatakana 16#30ad
/kikatakanahalfwidth 16#ff77
/kiroguramusquare 16#3315
/kiromeetorusquare 16#3316
/kirosquare 16#3314
/kiyeokacirclekorean 16#326e
/kiyeokaparenkorean 16#320e
/kiyeokcirclekorean 16#3260
/kiyeokkorean 16#3131
/kiyeokparenkorean 16#3200
/kiyeoksioskorean 16#3133
/kjecyrillic 16#045c
/klinebelow 16#1e35
/klsquare 16#3398
/kmcubedsquare 16#33a6
/kmonospace 16#ff4b
/kmsquaredsquare 16#33a2
/kohiragana 16#3053
/kohmsquare 16#33c0
/kokaithai 16#0e01
/kokatakana 16#30b3
/kokatakanahalfwidth 16#ff7a
/kooposquare 16#331e
/koppacyrillic 16#0481
/koreanstandardsymbol 16#327f
/koroniscmb 16#0343
/kparen 16#24a6
/kpasquare 16#33aa
/ksicyrillic 16#046f
/ktsquare 16#33cf
/kturned 16#029e
/kuhiragana 16#304f
/kukatakana 16#30af
/kukatakanahalfwidth 16#ff78
/kvsquare 16#33b8
/kwsquare 16#33be
/l 16#006c
/labengali 16#09b2
/lacute 16#013a
/ladeva 16#0932
/lagujarati 16#0ab2
/lagurmukhi 16#0a32
/lakkhangyaothai 16#0e45
/lamaleffinalarabic 16#fefc
/lamalefhamzaabovefinalarabic 16#fef8
/lamalefhamzaaboveisolatedarabic 16#fef7
/lamalefhamzabelowfinalarabic 16#fefa
/lamalefhamzabelowisolatedarabic 16#fef9
/lamalefisolatedarabic 16#fefb
/lamalefmaddaabovefinalarabic 16#fef6
/lamalefmaddaaboveisolatedarabic 16#fef5
/lamarabic 16#0644
/lambda 16#03bb
/lambdastroke 16#019b
/lamed 16#05dc
/lameddagesh 16#fb3c
/lameddageshhebrew 16#fb3c
/lamedhebrew 16#05dc
/lamfinalarabic 16#fede
/lamhahinitialarabic 16#fcca
/laminitialarabic 16#fedf
/lamjeeminitialarabic 16#fcc9
/lamkhahinitialarabic 16#fccb
/lamlamhehisolatedarabic 16#fdf2
/lammedialarabic 16#fee0
/lammeemhahinitialarabic 16#fd88
/lammeeminitialarabic 16#fccc
/largecircle 16#25ef
/lbar 16#019a
/lbelt 16#026c
/lbopomofo 16#310c
/lcaron 16#013e
/lcedilla 16#013c
/lcircle 16#24db
/lcircumflexbelow 16#1e3d
/lcommaaccent 16#013c
/ldot 16#0140
/ldotaccent 16#0140
/ldotbelow 16#1e37
/ldotbelowmacron 16#1e39
/leftangleabovecmb 16#031a
/lefttackbelowcmb 16#0318
/less 16#003c
/lessequal 16#2264
/lessequalorgreater 16#22da
/lessmonospace 16#ff1c
/lessorequivalent 16#2272
/lessorgreater 16#2276
/lessoverequal 16#2266
/lesssmall 16#fe64
/lezh 16#026e
/lfblock 16#258c
/lhookretroflex 16#026d
/lira 16#20a4
/liwnarmenian 16#056c
/lj 16#01c9
/ljecyrillic 16#0459
/ll 16#f6c0
/lladeva 16#0933
/llagujarati 16#0ab3
/llinebelow 16#1e3b
/llladeva 16#0934
/llvocalicbengali 16#09e1
/llvocalicdeva 16#0961
/llvocalicvowelsignbengali 16#09e3
/llvocalicvowelsigndeva 16#0963
/lmiddletilde 16#026b
/lmonospace 16#ff4c
/lmsquare 16#33d0
/lochulathai 16#0e2c
/logicaland 16#2227
/logicalnot 16#00ac
/logicalnotreversed 16#2310
/logicalor 16#2228
/lolingthai 16#0e25
/longs 16#017f
/lowlinecenterline 16#fe4e
/lowlinecmb 16#0332
/lowlinedashed 16#fe4d
/lozenge 16#25ca
/lparen 16#24a7
/lslash 16#0142
/lsquare 16#2113
/lsuperior 16#f6ee
/ltshade 16#2591
/luthai 16#0e26
/lvocalicbengali 16#098c
/lvocalicdeva 16#090c
/lvocalicvowelsignbengali 16#09e2
/lvocalicvowelsigndeva 16#0962
/lxsquare 16#33d3
/m 16#006d
/mabengali 16#09ae
/macron 16#00af
/macronbelowcmb 16#0331
/macroncmb 16#0304
/macronlowmod 16#02cd
/macronmonospace 16#ffe3
/macute 16#1e3f
/madeva 16#092e
/magujarati 16#0aae
/magurmukhi 16#0a2e
/mahapakhhebrew 16#05a4
/mahapakhlefthebrew 16#05a4
/mahiragana 16#307e
/maichattawalowleftthai 16#f895
/maichattawalowrightthai 16#f894
/maichattawathai 16#0e4b
/maichattawaupperleftthai 16#f893
/maieklowleftthai 16#f88c
/maieklowrightthai 16#f88b
/maiekthai 16#0e48
/maiekupperleftthai 16#f88a
/maihanakatleftthai 16#f884
/maihanakatthai 16#0e31
/maitaikhuleftthai 16#f889
/maitaikhuthai 16#0e47
/maitholowleftthai 16#f88f
/maitholowrightthai 16#f88e
/maithothai 16#0e49
/maithoupperleftthai 16#f88d
/maitrilowleftthai 16#f892
/maitrilowrightthai 16#f891
/maitrithai 16#0e4a
/maitriupperleftthai 16#f890
/maiyamokthai 16#0e46
/makatakana 16#30de
/makatakanahalfwidth 16#ff8f
/male 16#2642
/mansyonsquare 16#3347
/maqafhebrew 16#05be
/mars 16#2642
/masoracirclehebrew 16#05af
/masquare 16#3383
/mbopomofo 16#3107
/mbsquare 16#33d4
/mcircle 16#24dc
/mcubedsquare 16#33a5
/mdotaccent 16#1e41
/mdotbelow 16#1e43
/meemarabic 16#0645
/meemfinalarabic 16#fee2
/meeminitialarabic 16#fee3
/meemmedialarabic 16#fee4
/meemmeeminitialarabic 16#fcd1
/meemmeemisolatedarabic 16#fc48
/meetorusquare 16#334d
/mehiragana 16#3081
/meizierasquare 16#337e
/mekatakana 16#30e1
/mekatakanahalfwidth 16#ff92
/mem 16#05de
/memdagesh 16#fb3e
/memdageshhebrew 16#fb3e
/memhebrew 16#05de
/menarmenian 16#0574
/merkhahebrew 16#05a5
/merkhakefulahebrew 16#05a6
/merkhakefulalefthebrew 16#05a6
/merkhalefthebrew 16#05a5
/mhook 16#0271
/mhzsquare 16#3392
/middledotkatakanahalfwidth 16#ff65
/middot 16#00b7
/mieumacirclekorean 16#3272
/mieumaparenkorean 16#3212
/mieumcirclekorean 16#3264
/mieumkorean 16#3141
/mieumpansioskorean 16#3170
/mieumparenkorean 16#3204
/mieumpieupkorean 16#316e
/mieumsioskorean 16#316f
/mihiragana 16#307f
/mikatakana 16#30df
/mikatakanahalfwidth 16#ff90
/minus 16#2212
/minusbelowcmb 16#0320
/minuscircle 16#2296
/minusmod 16#02d7
/minusplus 16#2213
/minute 16#2032
/miribaarusquare 16#334a
/mirisquare 16#3349
/mlonglegturned 16#0270
/mlsquare 16#3396
/mmcubedsquare 16#33a3
/mmonospace 16#ff4d
/mmsquaredsquare 16#339f
/mohiragana 16#3082
/mohmsquare 16#33c1
/mokatakana 16#30e2
/mokatakanahalfwidth 16#ff93
/molsquare 16#33d6
/momathai 16#0e21
/moverssquare 16#33a7
/moverssquaredsquare 16#33a8
/mparen 16#24a8
/mpasquare 16#33ab
/mssquare 16#33b3
/msuperior 16#f6ef
/mturned 16#026f
/mu 16#00b5
/mu1 16#00b5
/muasquare 16#3382
/muchgreater 16#226b
/muchless 16#226a
/mufsquare 16#338c
/mugreek 16#03bc
/mugsquare 16#338d
/muhiragana 16#3080
/mukatakana 16#30e0
/mukatakanahalfwidth 16#ff91
/mulsquare 16#3395
/multiply 16#00d7
/mumsquare 16#339b
/munahhebrew 16#05a3
/munahlefthebrew 16#05a3
/musicalnote 16#266a
/musicalnotedbl 16#266b
/musicflatsign 16#266d
/musicsharpsign 16#266f
/mussquare 16#33b2
/muvsquare 16#33b6
/muwsquare 16#33bc
/mvmegasquare 16#33b9
/mvsquare 16#33b7
/mwmegasquare 16#33bf
/mwsquare 16#33bd
/n 16#006e
/nabengali 16#09a8
/nabla 16#2207
/nacute 16#0144
/nadeva 16#0928
/nagujarati 16#0aa8
/nagurmukhi 16#0a28
/nahiragana 16#306a
/nakatakana 16#30ca
/nakatakanahalfwidth 16#ff85
/napostrophe 16#0149
/nasquare 16#3381
/nbopomofo 16#310b
/nbspace 16#00a0
/ncaron 16#0148
/ncedilla 16#0146
/ncircle 16#24dd
/ncircumflexbelow 16#1e4b
/ncommaaccent 16#0146
/ndotaccent 16#1e45
/ndotbelow 16#1e47
/nehiragana 16#306d
/nekatakana 16#30cd
/nekatakanahalfwidth 16#ff88
/newsheqelsign 16#20aa
/nfsquare 16#338b
/ngabengali 16#0999
/ngadeva 16#0919
/ngagujarati 16#0a99
/ngagurmukhi 16#0a19
/ngonguthai 16#0e07
/nhiragana 16#3093
/nhookleft 16#0272
/nhookretroflex 16#0273
/nieunacirclekorean 16#326f
/nieunaparenkorean 16#320f
/nieuncieuckorean 16#3135
/nieuncirclekorean 16#3261
/nieunhieuhkorean 16#3136
/nieunkorean 16#3134
/nieunpansioskorean 16#3168
/nieunparenkorean 16#3201
/nieunsioskorean 16#3167
/nieuntikeutkorean 16#3166
/nihiragana 16#306b
/nikatakana 16#30cb
/nikatakanahalfwidth 16#ff86
/nikhahitleftthai 16#f899
/nikhahitthai 16#0e4d
/nine 16#0039
/ninearabic 16#0669
/ninebengali 16#09ef
/ninecircle 16#2468
/ninecircleinversesansserif 16#2792
/ninedeva 16#096f
/ninegujarati 16#0aef
/ninegurmukhi 16#0a6f
/ninehackarabic 16#0669
/ninehangzhou 16#3029
/nineideographicparen 16#3228
/nineinferior 16#2089
/ninemonospace 16#ff19
/nineoldstyle 16#f739
/nineparen 16#247c
/nineperiod 16#2490
/ninepersian 16#06f9
/nineroman 16#2178
/ninesuperior 16#2079
/nineteencircle 16#2472
/nineteenparen 16#2486
/nineteenperiod 16#249a
/ninethai 16#0e59
/nj 16#01cc
/njecyrillic 16#045a
/nkatakana 16#30f3
/nkatakanahalfwidth 16#ff9d
/nlegrightlong 16#019e
/nlinebelow 16#1e49
/nmonospace 16#ff4e
/nmsquare 16#339a
/nnabengali 16#09a3
/nnadeva 16#0923
/nnagujarati 16#0aa3
/nnagurmukhi 16#0a23
/nnnadeva 16#0929
/nohiragana 16#306e
/nokatakana 16#30ce
/nokatakanahalfwidth 16#ff89
/nonbreakingspace 16#00a0
/nonenthai 16#0e13
/nonuthai 16#0e19
/noonarabic 16#0646
/noonfinalarabic 16#fee6
/noonghunnaarabic 16#06ba
/noonghunnafinalarabic 16#fb9f
/nooninitialarabic 16#fee7
/noonjeeminitialarabic 16#fcd2
/noonjeemisolatedarabic 16#fc4b
/noonmedialarabic 16#fee8
/noonmeeminitialarabic 16#fcd5
/noonmeemisolatedarabic 16#fc4e
/noonnoonfinalarabic 16#fc8d
/notcontains 16#220c
/notelement 16#2209
/notelementof 16#2209
/notequal 16#2260
/notgreater 16#226f
/notgreaternorequal 16#2271
/notgreaternorless 16#2279
/notidentical 16#2262
/notless 16#226e
/notlessnorequal 16#2270
/notparallel 16#2226
/notprecedes 16#2280
/notsubset 16#2284
/notsucceeds 16#2281
/notsuperset 16#2285
/nowarmenian 16#0576
/nparen 16#24a9
/nssquare 16#33b1
/nsuperior 16#207f
/ntilde 16#00f1
/nu 16#03bd
/nuhiragana 16#306c
/nukatakana 16#30cc
/nukatakanahalfwidth 16#ff87
/nuktabengali 16#09bc
/nuktadeva 16#093c
/nuktagujarati 16#0abc
/nuktagurmukhi 16#0a3c
/numbersign 16#0023
/numbersignmonospace 16#ff03
/numbersignsmall 16#fe5f
/numeralsigngreek 16#0374
/numeralsignlowergreek 16#0375
/numero 16#2116
/nun 16#05e0
/nundagesh 16#fb40
/nundageshhebrew 16#fb40
/nunhebrew 16#05e0
/nvsquare 16#33b5
/nwsquare 16#33bb
/nyabengali 16#099e
/nyadeva 16#091e
/nyagujarati 16#0a9e
/nyagurmukhi 16#0a1e
/o 16#006f
/oacute 16#00f3
/oangthai 16#0e2d
/obarred 16#0275
/obarredcyrillic 16#04e9
/obarreddieresiscyrillic 16#04eb
/obengali 16#0993
/obopomofo 16#311b
/obreve 16#014f
/ocandradeva 16#0911
/ocandragujarati 16#0a91
/ocandravowelsigndeva 16#0949
/ocandravowelsigngujarati 16#0ac9
/ocaron 16#01d2
/ocircle 16#24de
/ocircumflex 16#00f4
/ocircumflexacute 16#1ed1
/ocircumflexdotbelow 16#1ed9
/ocircumflexgrave 16#1ed3
/ocircumflexhookabove 16#1ed5
/ocircumflextilde 16#1ed7
/ocyrillic 16#043e
/odblacute 16#0151
/odblgrave 16#020d
/odeva 16#0913
/odieresis 16#00f6
/odieresiscyrillic 16#04e7
/odotbelow 16#1ecd
/oe 16#0153
/oekorean 16#315a
/ogonek 16#02db
/ogonekcmb 16#0328
/ograve 16#00f2
/ogujarati 16#0a93
/oharmenian 16#0585
/ohiragana 16#304a
/ohookabove 16#1ecf
/ohorn 16#01a1
/ohornacute 16#1edb
/ohorndotbelow 16#1ee3
/ohorngrave 16#1edd
/ohornhookabove 16#1edf
/ohorntilde 16#1ee1
/ohungarumlaut 16#0151
/oi 16#01a3
/oinvertedbreve 16#020f
/okatakana 16#30aa
/okatakanahalfwidth 16#ff75
/okorean 16#3157
/olehebrew 16#05ab
/omacron 16#014d
/omacronacute 16#1e53
/omacrongrave 16#1e51
/omdeva 16#0950
/omega 16#03c9
/omega1 16#03d6
/omegacyrillic 16#0461
/omegalatinclosed 16#0277
/omegaroundcyrillic 16#047b
/omegatitlocyrillic 16#047d
/omegatonos 16#03ce
/omgujarati 16#0ad0
/omicron 16#03bf
/omicrontonos 16#03cc
/omonospace 16#ff4f
/one 16#0031
/onearabic 16#0661
/onebengali 16#09e7
/onecircle 16#2460
/onecircleinversesansserif 16#278a
/onedeva 16#0967
/onedotenleader 16#2024
/oneeighth 16#215b
/onefitted 16#f6dc
/onegujarati 16#0ae7
/onegurmukhi 16#0a67
/onehackarabic 16#0661
/onehalf 16#00bd
/onehangzhou 16#3021
/oneideographicparen 16#3220
/oneinferior 16#2081
/onemonospace 16#ff11
/onenumeratorbengali 16#09f4
/oneoldstyle 16#f731
/oneparen 16#2474
/oneperiod 16#2488
/onepersian 16#06f1
/onequarter 16#00bc
/oneroman 16#2170
/onesuperior 16#00b9
/onethai 16#0e51
/onethird 16#2153
/oogonek 16#01eb
/oogonekmacron 16#01ed
/oogurmukhi 16#0a13
/oomatragurmukhi 16#0a4b
/oopen 16#0254
/oparen 16#24aa
/openbullet 16#25e6
/option 16#2325
/ordfeminine 16#00aa
/ordmasculine 16#00ba
/orthogonal 16#221f
/oshortdeva 16#0912
/oshortvowelsigndeva 16#094a
/oslash 16#00f8
/oslashacute 16#01ff
/osmallhiragana 16#3049
/osmallkatakana 16#30a9
/osmallkatakanahalfwidth 16#ff6b
/ostrokeacute 16#01ff
/osuperior 16#f6f0
/otcyrillic 16#047f
/otilde 16#00f5
/otildeacute 16#1e4d
/otildedieresis 16#1e4f
/oubopomofo 16#3121
/overline 16#203e
/overlinecenterline 16#fe4a
/overlinecmb 16#0305
/overlinedashed 16#fe49
/overlinedblwavy 16#fe4c
/overlinewavy 16#fe4b
/overscore 16#00af
/ovowelsignbengali 16#09cb
/ovowelsigndeva 16#094b
/ovowelsigngujarati 16#0acb
/p 16#0070
/paampssquare 16#3380
/paasentosquare 16#332b
/pabengali 16#09aa
/pacute 16#1e55
/padeva 16#092a
/pagedown 16#21df
/pageup 16#21de
/pagujarati 16#0aaa
/pagurmukhi 16#0a2a
/pahiragana 16#3071
/paiyannoithai 16#0e2f
/pakatakana 16#30d1
/palatalizationcyrilliccmb 16#0484
/palochkacyrillic 16#04c0
/pansioskorean 16#317f
/paragraph 16#00b6
/parallel 16#2225
/parenleft 16#0028
/parenleftaltonearabic 16#fd3e
/parenleftbt 16#f8ed
/parenleftex 16#f8ec
/parenleftinferior 16#208d
/parenleftmonospace 16#ff08
/parenleftsmall 16#fe59
/parenleftsuperior 16#207d
/parenlefttp 16#f8eb
/parenleftvertical 16#fe35
/parenright 16#0029
/parenrightaltonearabic 16#fd3f
/parenrightbt 16#f8f8
/parenrightex 16#f8f7
/parenrightinferior 16#208e
/parenrightmonospace 16#ff09
/parenrightsmall 16#fe5a
/parenrightsuperior 16#207e
/parenrighttp 16#f8f6
/parenrightvertical 16#fe36
/partialdiff 16#2202
/paseqhebrew 16#05c0
/pashtahebrew 16#0599
/pasquare 16#33a9
/patah 16#05b7
/patah11 16#05b7
/patah1d 16#05b7
/patah2a 16#05b7
/patahhebrew 16#05b7
/patahnarrowhebrew 16#05b7
/patahquarterhebrew 16#05b7
/patahwidehebrew 16#05b7
/pazerhebrew 16#05a1
/pbopomofo 16#3106
/pcircle 16#24df
/pdotaccent 16#1e57
/pe 16#05e4
/pecyrillic 16#043f
/pedagesh 16#fb44
/pedageshhebrew 16#fb44
/peezisquare 16#333b
/pefinaldageshhebrew 16#fb43
/peharabic 16#067e
/peharmenian 16#057a
/pehebrew 16#05e4
/pehfinalarabic 16#fb57
/pehinitialarabic 16#fb58
/pehiragana 16#307a
/pehmedialarabic 16#fb59
/pekatakana 16#30da
/pemiddlehookcyrillic 16#04a7
/perafehebrew 16#fb4e
/percent 16#0025
/percentarabic 16#066a
/percentmonospace 16#ff05
/percentsmall 16#fe6a
/period 16#002e
/periodarmenian 16#0589
/periodcentered 16#00b7
/periodhalfwidth 16#ff61
/periodinferior 16#f6e7
/periodmonospace 16#ff0e
/periodsmall 16#fe52
/periodsuperior 16#f6e8
/perispomenigreekcmb 16#0342
/perpendicular 16#22a5
/perthousand 16#2030
/peseta 16#20a7
/pfsquare 16#338a
/phabengali 16#09ab
/phadeva 16#092b
/phagujarati 16#0aab
/phagurmukhi 16#0a2b
/phi 16#03c6
/phi1 16#03d5
/phieuphacirclekorean 16#327a
/phieuphaparenkorean 16#321a
/phieuphcirclekorean 16#326c
/phieuphkorean 16#314d
/phieuphparenkorean 16#320c
/philatin 16#0278
/phinthuthai 16#0e3a
/phisymbolgreek 16#03d5
/phook 16#01a5
/phophanthai 16#0e1e
/phophungthai 16#0e1c
/phosamphaothai 16#0e20
/pi 16#03c0
/pieupacirclekorean 16#3273
/pieupaparenkorean 16#3213
/pieupcieuckorean 16#3176
/pieupcirclekorean 16#3265
/pieupkiyeokkorean 16#3172
/pieupkorean 16#3142
/pieupparenkorean 16#3205
/pieupsioskiyeokkorean 16#3174
/pieupsioskorean 16#3144
/pieupsiostikeutkorean 16#3175
/pieupthieuthkorean 16#3177
/pieuptikeutkorean 16#3173
/pihiragana 16#3074
/pikatakana 16#30d4
/pisymbolgreek 16#03d6
/piwrarmenian 16#0583
/plus 16#002b
/plusbelowcmb 16#031f
/pluscircle 16#2295
/plusminus 16#00b1
/plusmod 16#02d6
/plusmonospace 16#ff0b
/plussmall 16#fe62
/plussuperior 16#207a
/pmonospace 16#ff50
/pmsquare 16#33d8
/pohiragana 16#307d
/pointingindexdownwhite 16#261f
/pointingindexleftwhite 16#261c
/pointingindexrightwhite 16#261e
/pointingindexupwhite 16#261d
/pokatakana 16#30dd
/poplathai 16#0e1b
/postalmark 16#3012
/postalmarkface 16#3020
/pparen 16#24ab
/precedes 16#227a
/prescription 16#211e
/primemod 16#02b9
/primereversed 16#2035
/product 16#220f
/projective 16#2305
/prolongedkana 16#30fc
/propellor 16#2318
/propersubset 16#2282
/propersuperset 16#2283
/proportion 16#2237
/proportional 16#221d
/psi 16#03c8
/psicyrillic 16#0471
/psilipneumatacyrilliccmb 16#0486
/pssquare 16#33b0
/puhiragana 16#3077
/pukatakana 16#30d7
/pvsquare 16#33b4
/pwsquare 16#33ba
/q 16#0071
/qadeva 16#0958
/qadmahebrew 16#05a8
/qafarabic 16#0642
/qaffinalarabic 16#fed6
/qafinitialarabic 16#fed7
/qafmedialarabic 16#fed8
/qamats 16#05b8
/qamats10 16#05b8
/qamats1a 16#05b8
/qamats1c 16#05b8
/qamats27 16#05b8
/qamats29 16#05b8
/qamats33 16#05b8
/qamatsde 16#05b8
/qamatshebrew 16#05b8
/qamatsnarrowhebrew 16#05b8
/qamatsqatanhebrew 16#05b8
/qamatsqatannarrowhebrew 16#05b8
/qamatsqatanquarterhebrew 16#05b8
/qamatsqatanwidehebrew 16#05b8
/qamatsquarterhebrew 16#05b8
/qamatswidehebrew 16#05b8
/qarneyparahebrew 16#059f
/qbopomofo 16#3111
/qcircle 16#24e0
/qhook 16#02a0
/qmonospace 16#ff51
/qof 16#05e7
/qofdagesh 16#fb47
/qofdageshhebrew 16#fb47
/qofhebrew 16#05e7
/qparen 16#24ac
/quarternote 16#2669
/qubuts 16#05bb
/qubuts18 16#05bb
/qubuts25 16#05bb
/qubuts31 16#05bb
/qubutshebrew 16#05bb
/qubutsnarrowhebrew 16#05bb
/qubutsquarterhebrew 16#05bb
/qubutswidehebrew 16#05bb
/question 16#003f
/questionarabic 16#061f
/questionarmenian 16#055e
/questiondown 16#00bf
/questiondownsmall 16#f7bf
/questiongreek 16#037e
/questionmonospace 16#ff1f
/questionsmall 16#f73f
/quotedbl 16#0022
/quotedblbase 16#201e
/quotedblleft 16#201c
/quotedblmonospace 16#ff02
/quotedblprime 16#301e
/quotedblprimereversed 16#301d
/quotedblright 16#201d
/quoteleft 16#2018
/quoteleftreversed 16#201b
/quotereversed 16#201b
/quoteright 16#2019
/quoterightn 16#0149
/quotesinglbase 16#201a
/quotesingle 16#0027
/quotesinglemonospace 16#ff07
/r 16#0072
/raarmenian 16#057c
/rabengali 16#09b0
/racute 16#0155
/radeva 16#0930
/radical 16#221a
/radicalex 16#f8e5
/radoverssquare 16#33ae
/radoverssquaredsquare 16#33af
/radsquare 16#33ad
/rafe 16#05bf
/rafehebrew 16#05bf
/ragujarati 16#0ab0
/ragurmukhi 16#0a30
/rahiragana 16#3089
/rakatakana 16#30e9
/rakatakanahalfwidth 16#ff97
/ralowerdiagonalbengali 16#09f1
/ramiddlediagonalbengali 16#09f0
/ramshorn 16#0264
/ratio 16#2236
/rbopomofo 16#3116
/rcaron 16#0159
/rcedilla 16#0157
/rcircle 16#24e1
/rcommaaccent 16#0157
/rdblgrave 16#0211
/rdotaccent 16#1e59
/rdotbelow 16#1e5b
/rdotbelowmacron 16#1e5d
/referencemark 16#203b
/reflexsubset 16#2286
/reflexsuperset 16#2287
/registered 16#00ae
/registersans 16#f8e8
/registerserif 16#f6da
/reharabic 16#0631
/reharmenian 16#0580
/rehfinalarabic 16#feae
/rehiragana 16#308c
/rekatakana 16#30ec
/rekatakanahalfwidth 16#ff9a
/resh 16#05e8
/reshdageshhebrew 16#fb48
/reshhebrew 16#05e8
/reversedtilde 16#223d
/reviahebrew 16#0597
/reviamugrashhebrew 16#0597
/revlogicalnot 16#2310
/rfishhook 16#027e
/rfishhookreversed 16#027f
/rhabengali 16#09dd
/rhadeva 16#095d
/rho 16#03c1
/rhook 16#027d
/rhookturned 16#027b
/rhookturnedsuperior 16#02b5
/rhosymbolgreek 16#03f1
/rhotichookmod 16#02de
/rieulacirclekorean 16#3271
/rieulaparenkorean 16#3211
/rieulcirclekorean 16#3263
/rieulhieuhkorean 16#3140
/rieulkiyeokkorean 16#313a
/rieulkiyeoksioskorean 16#3169
/rieulkorean 16#3139
/rieulmieumkorean 16#313b
/rieulpansioskorean 16#316c
/rieulparenkorean 16#3203
/rieulphieuphkorean 16#313f
/rieulpieupkorean 16#313c
/rieulpieupsioskorean 16#316b
/rieulsioskorean 16#313d
/rieulthieuthkorean 16#313e
/rieultikeutkorean 16#316a
/rieulyeorinhieuhkorean 16#316d
/rightangle 16#221f
/righttackbelowcmb 16#0319
/righttriangle 16#22bf
/rihiragana 16#308a
/rikatakana 16#30ea
/rikatakanahalfwidth 16#ff98
/ring 16#02da
/ringbelowcmb 16#0325
/ringcmb 16#030a
/ringhalfleft 16#02bf
/ringhalfleftarmenian 16#0559
/ringhalfleftbelowcmb 16#031c
/ringhalfleftcentered 16#02d3
/ringhalfright 16#02be
/ringhalfrightbelowcmb 16#0339
/ringhalfrightcentered 16#02d2
/rinvertedbreve 16#0213
/rittorusquare 16#3351
/rlinebelow 16#1e5f
/rlongleg 16#027c
/rlonglegturned 16#027a
/rmonospace 16#ff52
/rohiragana 16#308d
/rokatakana 16#30ed
/rokatakanahalfwidth 16#ff9b
/roruathai 16#0e23
/rparen 16#24ad
/rrabengali 16#09dc
/rradeva 16#0931
/rragurmukhi 16#0a5c
/rreharabic 16#0691
/rrehfinalarabic 16#fb8d
/rrvocalicbengali 16#09e0
/rrvocalicdeva 16#0960
/rrvocalicgujarati 16#0ae0
/rrvocalicvowelsignbengali 16#09c4
/rrvocalicvowelsigndeva 16#0944
/rrvocalicvowelsigngujarati 16#0ac4
/rsuperior 16#f6f1
/rtblock 16#2590
/rturned 16#0279
/rturnedsuperior 16#02b4
/ruhiragana 16#308b
/rukatakana 16#30eb
/rukatakanahalfwidth 16#ff99
/rupeemarkbengali 16#09f2
/rupeesignbengali 16#09f3
/rupiah 16#f6dd
/ruthai 16#0e24
/rvocalicbengali 16#098b
/rvocalicdeva 16#090b
/rvocalicgujarati 16#0a8b
/rvocalicvowelsignbengali 16#09c3
/rvocalicvowelsigndeva 16#0943
/rvocalicvowelsigngujarati 16#0ac3
/s 16#0073
/sabengali 16#09b8
/sacute 16#015b
/sacutedotaccent 16#1e65
/sadarabic 16#0635
/sadeva 16#0938
/sadfinalarabic 16#feba
/sadinitialarabic 16#febb
/sadmedialarabic 16#febc
/sagujarati 16#0ab8
/sagurmukhi 16#0a38
/sahiragana 16#3055
/sakatakana 16#30b5
/sakatakanahalfwidth 16#ff7b
/sallallahoualayhewasallamarabic 16#fdfa
/samekh 16#05e1
/samekhdagesh 16#fb41
/samekhdageshhebrew 16#fb41
/samekhhebrew 16#05e1
/saraaathai 16#0e32
/saraaethai 16#0e41
/saraaimaimalaithai 16#0e44
/saraaimaimuanthai 16#0e43
/saraamthai 16#0e33
/saraathai 16#0e30
/saraethai 16#0e40
/saraiileftthai 16#f886
/saraiithai 16#0e35
/saraileftthai 16#f885
/saraithai 16#0e34
/saraothai 16#0e42
/saraueeleftthai 16#f888
/saraueethai 16#0e37
/saraueleftthai 16#f887
/sarauethai 16#0e36
/sarauthai 16#0e38
/sarauuthai 16#0e39
/sbopomofo 16#3119
/scaron 16#0161
/scarondotaccent 16#1e67
/scedilla 16#015f
/schwa 16#0259
/schwacyrillic 16#04d9
/schwadieresiscyrillic 16#04db
/schwahook 16#025a
/scircle 16#24e2
/scircumflex 16#015d
/scommaaccent 16#0219
/sdotaccent 16#1e61
/sdotbelow 16#1e63
/sdotbelowdotaccent 16#1e69
/seagullbelowcmb 16#033c
/second 16#2033
/secondtonechinese 16#02ca
/section 16#00a7
/seenarabic 16#0633
/seenfinalarabic 16#feb2
/seeninitialarabic 16#feb3
/seenmedialarabic 16#feb4
/segol 16#05b6
/segol13 16#05b6
/segol1f 16#05b6
/segol2c 16#05b6
/segolhebrew 16#05b6
/segolnarrowhebrew 16#05b6
/segolquarterhebrew 16#05b6
/segoltahebrew 16#0592
/segolwidehebrew 16#05b6
/seharmenian 16#057d
/sehiragana 16#305b
/sekatakana 16#30bb
/sekatakanahalfwidth 16#ff7e
/semicolon 16#003b
/semicolonarabic 16#061b
/semicolonmonospace 16#ff1b
/semicolonsmall 16#fe54
/semivoicedmarkkana 16#309c
/semivoicedmarkkanahalfwidth 16#ff9f
/sentisquare 16#3322
/sentosquare 16#3323
/seven 16#0037
/sevenarabic 16#0667
/sevenbengali 16#09ed
/sevencircle 16#2466
/sevencircleinversesansserif 16#2790
/sevendeva 16#096d
/seveneighths 16#215e
/sevengujarati 16#0aed
/sevengurmukhi 16#0a6d
/sevenhackarabic 16#0667
/sevenhangzhou 16#3027
/sevenideographicparen 16#3226
/seveninferior 16#2087
/sevenmonospace 16#ff17
/sevenoldstyle 16#f737
/sevenparen 16#247a
/sevenperiod 16#248e
/sevenpersian 16#06f7
/sevenroman 16#2176
/sevensuperior 16#2077
/seventeencircle 16#2470
/seventeenparen 16#2484
/seventeenperiod 16#2498
/seventhai 16#0e57
/sfthyphen 16#00ad
/shaarmenian 16#0577
/shabengali 16#09b6
/shacyrillic 16#0448
/shaddaarabic 16#0651
/shaddadammaarabic 16#fc61
/shaddadammatanarabic 16#fc5e
/shaddafathaarabic 16#fc60
/shaddakasraarabic 16#fc62
/shaddakasratanarabic 16#fc5f
/shade 16#2592
/shadedark 16#2593
/shadelight 16#2591
/shademedium 16#2592
/shadeva 16#0936
/shagujarati 16#0ab6
/shagurmukhi 16#0a36
/shalshelethebrew 16#0593
/shbopomofo 16#3115
/shchacyrillic 16#0449
/sheenarabic 16#0634
/sheenfinalarabic 16#feb6
/sheeninitialarabic 16#feb7
/sheenmedialarabic 16#feb8
/sheicoptic 16#03e3
/sheqel 16#20aa
/sheqelhebrew 16#20aa
/sheva 16#05b0
/sheva115 16#05b0
/sheva15 16#05b0
/sheva22 16#05b0
/sheva2e 16#05b0
/shevahebrew 16#05b0
/shevanarrowhebrew 16#05b0
/shevaquarterhebrew 16#05b0
/shevawidehebrew 16#05b0
/shhacyrillic 16#04bb
/shimacoptic 16#03ed
/shin 16#05e9
/shindagesh 16#fb49
/shindageshhebrew 16#fb49
/shindageshshindot 16#fb2c
/shindageshshindothebrew 16#fb2c
/shindageshsindot 16#fb2d
/shindageshsindothebrew 16#fb2d
/shindothebrew 16#05c1
/shinhebrew 16#05e9
/shinshindot 16#fb2a
/shinshindothebrew 16#fb2a
/shinsindot 16#fb2b
/shinsindothebrew 16#fb2b
/shook 16#0282
/sigma 16#03c3
/sigma1 16#03c2
/sigmafinal 16#03c2
/sigmalunatesymbolgreek 16#03f2
/sihiragana 16#3057
/sikatakana 16#30b7
/sikatakanahalfwidth 16#ff7c
/siluqhebrew 16#05bd
/siluqlefthebrew 16#05bd
/similar 16#223c
/sindothebrew 16#05c2
/siosacirclekorean 16#3274
/siosaparenkorean 16#3214
/sioscieuckorean 16#317e
/sioscirclekorean 16#3266
/sioskiyeokkorean 16#317a
/sioskorean 16#3145
/siosnieunkorean 16#317b
/siosparenkorean 16#3206
/siospieupkorean 16#317d
/siostikeutkorean 16#317c
/six 16#0036
/sixarabic 16#0666
/sixbengali 16#09ec
/sixcircle 16#2465
/sixcircleinversesansserif 16#278f
/sixdeva 16#096c
/sixgujarati 16#0aec
/sixgurmukhi 16#0a6c
/sixhackarabic 16#0666
/sixhangzhou 16#3026
/sixideographicparen 16#3225
/sixinferior 16#2086
/sixmonospace 16#ff16
/sixoldstyle 16#f736
/sixparen 16#2479
/sixperiod 16#248d
/sixpersian 16#06f6
/sixroman 16#2175
/sixsuperior 16#2076
/sixteencircle 16#246f
/sixteencurrencydenominatorbengali 16#09f9
/sixteenparen 16#2483
/sixteenperiod 16#2497
/sixthai 16#0e56
/slash 16#002f
/slashmonospace 16#ff0f
/slong 16#017f
/slongdotaccent 16#1e9b
/smileface 16#263a
/smonospace 16#ff53
/sofpasuqhebrew 16#05c3
/softhyphen 16#00ad
/softsigncyrillic 16#044c
/sohiragana 16#305d
/sokatakana 16#30bd
/sokatakanahalfwidth 16#ff7f
/soliduslongoverlaycmb 16#0338
/solidusshortoverlaycmb 16#0337
/sorusithai 16#0e29
/sosalathai 16#0e28
/sosothai 16#0e0b
/sosuathai 16#0e2a
/space 16#0020
/spacehackarabic 16#0020
/spade 16#2660
/spadesuitblack 16#2660
/spadesuitwhite 16#2664
/sparen 16#24ae
/squarebelowcmb 16#033b
/squarecc 16#33c4
/squarecm 16#339d
/squarediagonalcrosshatchfill 16#25a9
/squarehorizontalfill 16#25a4
/squarekg 16#338f
/squarekm 16#339e
/squarekmcapital 16#33ce
/squareln 16#33d1
/squarelog 16#33d2
/squaremg 16#338e
/squaremil 16#33d5
/squaremm 16#339c
/squaremsquared 16#33a1
/squareorthogonalcrosshatchfill 16#25a6
/squareupperlefttolowerrightfill 16#25a7
/squareupperrighttolowerleftfill 16#25a8
/squareverticalfill 16#25a5
/squarewhitewithsmallblack 16#25a3
/srsquare 16#33db
/ssabengali 16#09b7
/ssadeva 16#0937
/ssagujarati 16#0ab7
/ssangcieuckorean 16#3149
/ssanghieuhkorean 16#3185
/ssangieungkorean 16#3180
/ssangkiyeokkorean 16#3132
/ssangnieunkorean 16#3165
/ssangpieupkorean 16#3143
/ssangsioskorean 16#3146
/ssangtikeutkorean 16#3138
/ssuperior 16#f6f2
/sterling 16#00a3
/sterlingmonospace 16#ffe1
/strokelongoverlaycmb 16#0336
/strokeshortoverlaycmb 16#0335
/subset 16#2282
/subsetnotequal 16#228a
/subsetorequal 16#2286
/succeeds 16#227b
/suchthat 16#220b
/suhiragana 16#3059
/sukatakana 16#30b9
/sukatakanahalfwidth 16#ff7d
/sukunarabic 16#0652
/summation 16#2211
/sun 16#263c
/superset 16#2283
/supersetnotequal 16#228b
/supersetorequal 16#2287
/svsquare 16#33dc
/syouwaerasquare 16#337c
/t 16#0074
/tabengali 16#09a4
/tackdown 16#22a4
/tackleft 16#22a3
/tadeva 16#0924
/tagujarati 16#0aa4
/tagurmukhi 16#0a24
/taharabic 16#0637
/tahfinalarabic 16#fec2
/tahinitialarabic 16#fec3
/tahiragana 16#305f
/tahmedialarabic 16#fec4
/taisyouerasquare 16#337d
/takatakana 16#30bf
/takatakanahalfwidth 16#ff80
/tatweelarabic 16#0640
/tau 16#03c4
/tav 16#05ea
/tavdages 16#fb4a
/tavdagesh 16#fb4a
/tavdageshhebrew 16#fb4a
/tavhebrew 16#05ea
/tbar 16#0167
/tbopomofo 16#310a
/tcaron 16#0165
/tccurl 16#02a8
/tcedilla 16#0163
/tcheharabic 16#0686
/tchehfinalarabic 16#fb7b
/tchehinitialarabic 16#fb7c
/tchehmedialarabic 16#fb7d
/tcircle 16#24e3
/tcircumflexbelow 16#1e71
/tcommaaccent 16#0163
/tdieresis 16#1e97
/tdotaccent 16#1e6b
/tdotbelow 16#1e6d
/tecyrillic 16#0442
/tedescendercyrillic 16#04ad
/teharabic 16#062a
/tehfinalarabic 16#fe96
/tehhahinitialarabic 16#fca2
/tehhahisolatedarabic 16#fc0c
/tehinitialarabic 16#fe97
/tehiragana 16#3066
/tehjeeminitialarabic 16#fca1
/tehjeemisolatedarabic 16#fc0b
/tehmarbutaarabic 16#0629
/tehmarbutafinalarabic 16#fe94
/tehmedialarabic 16#fe98
/tehmeeminitialarabic 16#fca4
/tehmeemisolatedarabic 16#fc0e
/tehnoonfinalarabic 16#fc73
/tekatakana 16#30c6
/tekatakanahalfwidth 16#ff83
/telephone 16#2121
/telephoneblack 16#260e
/telishagedolahebrew 16#05a0
/telishaqetanahebrew 16#05a9
/tencircle 16#2469
/tenideographicparen 16#3229
/tenparen 16#247d
/tenperiod 16#2491
/tenroman 16#2179
/tesh 16#02a7
/tet 16#05d8
/tetdagesh 16#fb38
/tetdageshhebrew 16#fb38
/tethebrew 16#05d8
/tetsecyrillic 16#04b5
/tevirhebrew 16#059b
/tevirlefthebrew 16#059b
/thabengali 16#09a5
/thadeva 16#0925
/thagujarati 16#0aa5
/thagurmukhi 16#0a25
/thalarabic 16#0630
/thalfinalarabic 16#feac
/thanthakhatlowleftthai 16#f898
/thanthakhatlowrightthai 16#f897
/thanthakhatthai 16#0e4c
/thanthakhatupperleftthai 16#f896
/theharabic 16#062b
/thehfinalarabic 16#fe9a
/thehinitialarabic 16#fe9b
/thehmedialarabic 16#fe9c
/thereexists 16#2203
/therefore 16#2234
/theta 16#03b8
/theta1 16#03d1
/thetasymbolgreek 16#03d1
/thieuthacirclekorean 16#3279
/thieuthaparenkorean 16#3219
/thieuthcirclekorean 16#326b
/thieuthkorean 16#314c
/thieuthparenkorean 16#320b
/thirteencircle 16#246c
/thirteenparen 16#2480
/thirteenperiod 16#2494
/thonangmonthothai 16#0e11
/thook 16#01ad
/thophuthaothai 16#0e12
/thorn 16#00fe
/thothahanthai 16#0e17
/thothanthai 16#0e10
/thothongthai 16#0e18
/thothungthai 16#0e16
/thousandcyrillic 16#0482
/thousandsseparatorarabic 16#066c
/thousandsseparatorpersian 16#066c
/three 16#0033
/threearabic 16#0663
/threebengali 16#09e9
/threecircle 16#2462
/threecircleinversesansserif 16#278c
/threedeva 16#0969
/threeeighths 16#215c
/threegujarati 16#0ae9
/threegurmukhi 16#0a69
/threehackarabic 16#0663
/threehangzhou 16#3023
/threeideographicparen 16#3222
/threeinferior 16#2083
/threemonospace 16#ff13
/threenumeratorbengali 16#09f6
/threeoldstyle 16#f733
/threeparen 16#2476
/threeperiod 16#248a
/threepersian 16#06f3
/threequarters 16#00be
/threequartersemdash 16#f6de
/threeroman 16#2172
/threesuperior 16#00b3
/threethai 16#0e53
/thzsquare 16#3394
/tihiragana 16#3061
/tikatakana 16#30c1
/tikatakanahalfwidth 16#ff81
/tikeutacirclekorean 16#3270
/tikeutaparenkorean 16#3210
/tikeutcirclekorean 16#3262
/tikeutkorean 16#3137
/tikeutparenkorean 16#3202
/tilde 16#02dc
/tildebelowcmb 16#0330
/tildecmb 16#0303
/tildecomb 16#0303
/tildedoublecmb 16#0360
/tildeoperator 16#223c
/tildeoverlaycmb 16#0334
/tildeverticalcmb 16#033e
/timescircle 16#2297
/tipehahebrew 16#0596
/tipehalefthebrew 16#0596
/tippigurmukhi 16#0a70
/titlocyrilliccmb 16#0483
/tiwnarmenian 16#057f
/tlinebelow 16#1e6f
/tmonospace 16#ff54
/toarmenian 16#0569
/tohiragana 16#3068
/tokatakana 16#30c8
/tokatakanahalfwidth 16#ff84
/tonebarextrahighmod 16#02e5
/tonebarextralowmod 16#02e9
/tonebarhighmod 16#02e6
/tonebarlowmod 16#02e8
/tonebarmidmod 16#02e7
/tonefive 16#01bd
/tonesix 16#0185
/tonetwo 16#01a8
/tonos 16#0384
/tonsquare 16#3327
/topatakthai 16#0e0f
/tortoiseshellbracketleft 16#3014
/tortoiseshellbracketleftsmall 16#fe5d
/tortoiseshellbracketleftvertical 16#fe39
/tortoiseshellbracketright 16#3015
/tortoiseshellbracketrightsmall 16#fe5e
/tortoiseshellbracketrightvertical 16#fe3a
/totaothai 16#0e15
/tpalatalhook 16#01ab
/tparen 16#24af
/trademark 16#2122
/trademarksans 16#f8ea
/trademarkserif 16#f6db
/tretroflexhook 16#0288
/triagdn 16#25bc
/triaglf 16#25c4
/triagrt 16#25ba
/triagup 16#25b2
/ts 16#02a6
/tsadi 16#05e6
/tsadidagesh 16#fb46
/tsadidageshhebrew 16#fb46
/tsadihebrew 16#05e6
/tsecyrillic 16#0446
/tsere 16#05b5
/tsere12 16#05b5
/tsere1e 16#05b5
/tsere2b 16#05b5
/tserehebrew 16#05b5
/tserenarrowhebrew 16#05b5
/tserequarterhebrew 16#05b5
/tserewidehebrew 16#05b5
/tshecyrillic 16#045b
/tsuperior 16#f6f3
/ttabengali 16#099f
/ttadeva 16#091f
/ttagujarati 16#0a9f
/ttagurmukhi 16#0a1f
/tteharabic 16#0679
/ttehfinalarabic 16#fb67
/ttehinitialarabic 16#fb68
/ttehmedialarabic 16#fb69
/tthabengali 16#09a0
/tthadeva 16#0920
/tthagujarati 16#0aa0
/tthagurmukhi 16#0a20
/tturned 16#0287
/tuhiragana 16#3064
/tukatakana 16#30c4
/tukatakanahalfwidth 16#ff82
/tusmallhiragana 16#3063
/tusmallkatakana 16#30c3
/tusmallkatakanahalfwidth 16#ff6f
/twelvecircle 16#246b
/twelveparen 16#247f
/twelveperiod 16#2493
/twelveroman 16#217b
/twentycircle 16#2473
/twentyhangzhou 16#5344
/twentyparen 16#2487
/twentyperiod 16#249b
/two 16#0032
/twoarabic 16#0662
/twobengali 16#09e8
/twocircle 16#2461
/twocircleinversesansserif 16#278b
/twodeva 16#0968
/twodotenleader 16#2025
/twodotleader 16#2025
/twodotleadervertical 16#fe30
/twogujarati 16#0ae8
/twogurmukhi 16#0a68
/twohackarabic 16#0662
/twohangzhou 16#3022
/twoideographicparen 16#3221
/twoinferior 16#2082
/twomonospace 16#ff12
/twonumeratorbengali 16#09f5
/twooldstyle 16#f732
/twoparen 16#2475
/twoperiod 16#2489
/twopersian 16#06f2
/tworoman 16#2171
/twostroke 16#01bb
/twosuperior 16#00b2
/twothai 16#0e52
/twothirds 16#2154
/u 16#0075
/uacute 16#00fa
/ubar 16#0289
/ubengali 16#0989
/ubopomofo 16#3128
/ubreve 16#016d
/ucaron 16#01d4
/ucircle 16#24e4
/ucircumflex 16#00fb
/ucircumflexbelow 16#1e77
/ucyrillic 16#0443
/udattadeva 16#0951
/udblacute 16#0171
/udblgrave 16#0215
/udeva 16#0909
/udieresis 16#00fc
/udieresisacute 16#01d8
/udieresisbelow 16#1e73
/udieresiscaron 16#01da
/udieresiscyrillic 16#04f1
/udieresisgrave 16#01dc
/udieresismacron 16#01d6
/udotbelow 16#1ee5
/ugrave 16#00f9
/ugujarati 16#0a89
/ugurmukhi 16#0a09
/uhiragana 16#3046
/uhookabove 16#1ee7
/uhorn 16#01b0
/uhornacute 16#1ee9
/uhorndotbelow 16#1ef1
/uhorngrave 16#1eeb
/uhornhookabove 16#1eed
/uhorntilde 16#1eef
/uhungarumlaut 16#0171
/uhungarumlautcyrillic 16#04f3
/uinvertedbreve 16#0217
/ukatakana 16#30a6
/ukatakanahalfwidth 16#ff73
/ukcyrillic 16#0479
/ukorean 16#315c
/umacron 16#016b
/umacroncyrillic 16#04ef
/umacrondieresis 16#1e7b
/umatragurmukhi 16#0a41
/umonospace 16#ff55
/underscore 16#005f
/underscoredbl 16#2017
/underscoremonospace 16#ff3f
/underscorevertical 16#fe33
/underscorewavy 16#fe4f
/union 16#222a
/universal 16#2200
/uogonek 16#0173
/uparen 16#24b0
/upblock 16#2580
/upperdothebrew 16#05c4
/upsilon 16#03c5
/upsilondieresis 16#03cb
/upsilondieresistonos 16#03b0
/upsilonlatin 16#028a
/upsilontonos 16#03cd
/uptackbelowcmb 16#031d
/uptackmod 16#02d4
/uragurmukhi 16#0a73
/uring 16#016f
/ushortcyrillic 16#045e
/usmallhiragana 16#3045
/usmallkatakana 16#30a5
/usmallkatakanahalfwidth 16#ff69
/ustraightcyrillic 16#04af
/ustraightstrokecyrillic 16#04b1
/utilde 16#0169
/utildeacute 16#1e79
/utildebelow 16#1e75
/uubengali 16#098a
/uudeva 16#090a
/uugujarati 16#0a8a
/uugurmukhi 16#0a0a
/uumatragurmukhi 16#0a42
/uuvowelsignbengali 16#09c2
/uuvowelsigndeva 16#0942
/uuvowelsigngujarati 16#0ac2
/uvowelsignbengali 16#09c1
/uvowelsigndeva 16#0941
/uvowelsigngujarati 16#0ac1
/v 16#0076
/vadeva 16#0935
/vagujarati 16#0ab5
/vagurmukhi 16#0a35
/vakatakana 16#30f7
/vav 16#05d5
/vavdagesh 16#fb35
/vavdagesh65 16#fb35
/vavdageshhebrew 16#fb35
/vavhebrew 16#05d5
/vavholam 16#fb4b
/vavholamhebrew 16#fb4b
/vavvavhebrew 16#05f0
/vavyodhebrew 16#05f1
/vcircle 16#24e5
/vdotbelow 16#1e7f
/vecyrillic 16#0432
/veharabic 16#06a4
/vehfinalarabic 16#fb6b
/vehinitialarabic 16#fb6c
/vehmedialarabic 16#fb6d
/vekatakana 16#30f9
/venus 16#2640
/verticalbar 16#007c
/verticallineabovecmb 16#030d
/verticallinebelowcmb 16#0329
/verticallinelowmod 16#02cc
/verticallinemod 16#02c8
/vewarmenian 16#057e
/vhook 16#028b
/vikatakana 16#30f8
/viramabengali 16#09cd
/viramadeva 16#094d
/viramagujarati 16#0acd
/visargabengali 16#0983
/visargadeva 16#0903
/visargagujarati 16#0a83
/vmonospace 16#ff56
/voarmenian 16#0578
/voicediterationhiragana 16#309e
/voicediterationkatakana 16#30fe
/voicedmarkkana 16#309b
/voicedmarkkanahalfwidth 16#ff9e
/vokatakana 16#30fa
/vparen 16#24b1
/vtilde 16#1e7d
/vturned 16#028c
/vuhiragana 16#3094
/vukatakana 16#30f4
/w 16#0077
/wacute 16#1e83
/waekorean 16#3159
/wahiragana 16#308f
/wakatakana 16#30ef
/wakatakanahalfwidth 16#ff9c
/wakorean 16#3158
/wasmallhiragana 16#308e
/wasmallkatakana 16#30ee
/wattosquare 16#3357
/wavedash 16#301c
/wavyunderscorevertical 16#fe34
/wawarabic 16#0648
/wawfinalarabic 16#feee
/wawhamzaabovearabic 16#0624
/wawhamzaabovefinalarabic 16#fe86
/wbsquare 16#33dd
/wcircle 16#24e6
/wcircumflex 16#0175
/wdieresis 16#1e85
/wdotaccent 16#1e87
/wdotbelow 16#1e89
/wehiragana 16#3091
/weierstrass 16#2118
/wekatakana 16#30f1
/wekorean 16#315e
/weokorean 16#315d
/wgrave 16#1e81
/whitebullet 16#25e6
/whitecircle 16#25cb
/whitecircleinverse 16#25d9
/whitecornerbracketleft 16#300e
/whitecornerbracketleftvertical 16#fe43
/whitecornerbracketright 16#300f
/whitecornerbracketrightvertical 16#fe44
/whitediamond 16#25c7
/whitediamondcontainingblacksmalldiamond 16#25c8
/whitedownpointingsmalltriangle 16#25bf
/whitedownpointingtriangle 16#25bd
/whiteleftpointingsmalltriangle 16#25c3
/whiteleftpointingtriangle 16#25c1
/whitelenticularbracketleft 16#3016
/whitelenticularbracketright 16#3017
/whiterightpointingsmalltriangle 16#25b9
/whiterightpointingtriangle 16#25b7
/whitesmallsquare 16#25ab
/whitesmilingface 16#263a
/whitesquare 16#25a1
/whitestar 16#2606
/whitetelephone 16#260f
/whitetortoiseshellbracketleft 16#3018
/whitetortoiseshellbracketright 16#3019
/whiteuppointingsmalltriangle 16#25b5
/whiteuppointingtriangle 16#25b3
/wihiragana 16#3090
/wikatakana 16#30f0
/wikorean 16#315f
/wmonospace 16#ff57
/wohiragana 16#3092
/wokatakana 16#30f2
/wokatakanahalfwidth 16#ff66
/won 16#20a9
/wonmonospace 16#ffe6
/wowaenthai 16#0e27
/wparen 16#24b2
/wring 16#1e98
/wsuperior 16#02b7
/wturned 16#028d
/wynn 16#01bf
/x 16#0078
/xabovecmb 16#033d
/xbopomofo 16#3112
/xcircle 16#24e7
/xdieresis 16#1e8d
/xdotaccent 16#1e8b
/xeharmenian 16#056d
/xi 16#03be
/xmonospace 16#ff58
/xparen 16#24b3
/xsuperior 16#02e3
/y 16#0079
/yaadosquare 16#334e
/yabengali 16#09af
/yacute 16#00fd
/yadeva 16#092f
/yaekorean 16#3152
/yagujarati 16#0aaf
/yagurmukhi 16#0a2f
/yahiragana 16#3084
/yakatakana 16#30e4
/yakatakanahalfwidth 16#ff94
/yakorean 16#3151
/yamakkanthai 16#0e4e
/yasmallhiragana 16#3083
/yasmallkatakana 16#30e3
/yasmallkatakanahalfwidth 16#ff6c
/yatcyrillic 16#0463
/ycircle 16#24e8
/ycircumflex 16#0177
/ydieresis 16#00ff
/ydotaccent 16#1e8f
/ydotbelow 16#1ef5
/yeharabic 16#064a
/yehbarreearabic 16#06d2
/yehbarreefinalarabic 16#fbaf
/yehfinalarabic 16#fef2
/yehhamzaabovearabic 16#0626
/yehhamzaabovefinalarabic 16#fe8a
/yehhamzaaboveinitialarabic 16#fe8b
/yehhamzaabovemedialarabic 16#fe8c
/yehinitialarabic 16#fef3
/yehmedialarabic 16#fef4
/yehmeeminitialarabic 16#fcdd
/yehmeemisolatedarabic 16#fc58
/yehnoonfinalarabic 16#fc94
/yehthreedotsbelowarabic 16#06d1
/yekorean 16#3156
/yen 16#00a5
/yenmonospace 16#ffe5
/yeokorean 16#3155
/yeorinhieuhkorean 16#3186
/yerahbenyomohebrew 16#05aa
/yerahbenyomolefthebrew 16#05aa
/yericyrillic 16#044b
/yerudieresiscyrillic 16#04f9
/yesieungkorean 16#3181
/yesieungpansioskorean 16#3183
/yesieungsioskorean 16#3182
/yetivhebrew 16#059a
/ygrave 16#1ef3
/yhook 16#01b4
/yhookabove 16#1ef7
/yiarmenian 16#0575
/yicyrillic 16#0457
/yikorean 16#3162
/yinyang 16#262f
/yiwnarmenian 16#0582
/ymonospace 16#ff59
/yod 16#05d9
/yoddagesh 16#fb39
/yoddageshhebrew 16#fb39
/yodhebrew 16#05d9
/yodyodhebrew 16#05f2
/yodyodpatahhebrew 16#fb1f
/yohiragana 16#3088
/yoikorean 16#3189
/yokatakana 16#30e8
/yokatakanahalfwidth 16#ff96
/yokorean 16#315b
/yosmallhiragana 16#3087
/yosmallkatakana 16#30e7
/yosmallkatakanahalfwidth 16#ff6e
/yotgreek 16#03f3
/yoyaekorean 16#3188
/yoyakorean 16#3187
/yoyakthai 16#0e22
/yoyingthai 16#0e0d
/yparen 16#24b4
/ypogegrammeni 16#037a
/ypogegrammenigreekcmb 16#0345
/yr 16#01a6
/yring 16#1e99
/ysuperior 16#02b8
/ytilde 16#1ef9
/yturned 16#028e
/yuhiragana 16#3086
/yuikorean 16#318c
/yukatakana 16#30e6
/yukatakanahalfwidth 16#ff95
/yukorean 16#3160
/yusbigcyrillic 16#046b
/yusbigiotifiedcyrillic 16#046d
/yuslittlecyrillic 16#0467
/yuslittleiotifiedcyrillic 16#0469
/yusmallhiragana 16#3085
/yusmallkatakana 16#30e5
/yusmallkatakanahalfwidth 16#ff6d
/yuyekorean 16#318b
/yuyeokorean 16#318a
/yyabengali 16#09df
/yyadeva 16#095f
/z 16#007a
/zaarmenian 16#0566
/zacute 16#017a
/zadeva 16#095b
/zagurmukhi 16#0a5b
/zaharabic 16#0638
/zahfinalarabic 16#fec6
/zahinitialarabic 16#fec7
/zahiragana 16#3056
/zahmedialarabic 16#fec8
/zainarabic 16#0632
/zainfinalarabic 16#feb0
/zakatakana 16#30b6
/zaqefgadolhebrew 16#0595
/zaqefqatanhebrew 16#0594
/zarqahebrew 16#0598
/zayin 16#05d6
/zayindagesh 16#fb36
/zayindageshhebrew 16#fb36
/zayinhebrew 16#05d6
/zbopomofo 16#3117
/zcaron 16#017e
/zcircle 16#24e9
/zcircumflex 16#1e91
/zcurl 16#0291
/zdot 16#017c
/zdotaccent 16#017c
/zdotbelow 16#1e93
/zecyrillic 16#0437
/zedescendercyrillic 16#0499
/zedieresiscyrillic 16#04df
/zehiragana 16#305c
/zekatakana 16#30bc
/zero 16#0030
/zeroarabic 16#0660
/zerobengali 16#09e6
/zerodeva 16#0966
/zerogujarati 16#0ae6
/zerogurmukhi 16#0a66
/zerohackarabic 16#0660
/zeroinferior 16#2080
/zeromonospace 16#ff10
/zerooldstyle 16#f730
/zeropersian 16#06f0
/zerosuperior 16#2070
/zerothai 16#0e50
/zerowidthjoiner 16#feff
/zerowidthnonjoiner 16#200c
/zerowidthspace 16#200b
/zeta 16#03b6
/zhbopomofo 16#3113
/zhearmenian 16#056a
/zhebrevecyrillic 16#04c2
/zhecyrillic 16#0436
/zhedescendercyrillic 16#0497
/zhedieresiscyrillic 16#04dd
/zihiragana 16#3058
/zikatakana 16#30b8
/zinorhebrew 16#05ae
/zlinebelow 16#1e95
/zmonospace 16#ff5a
/zohiragana 16#305e
/zokatakana 16#30be
/zparen 16#24b5
/zretroflexhook 16#0290
/zstroke 16#01b6
/zuhiragana 16#305a
/zukatakana 16#30ba
.dicttomark readonly def
/currentglobal where
{pop currentglobal{setglobal}true setglobal}
{{}}
ifelse
/MacRomanEncoding .findencoding
/MacGlyphEncoding
/.notdef/.null/CR
4 index 32 95 getinterval aload pop
99 index 128 45 getinterval aload pop
/notequal/AE
/Oslash/infinity/plusminus/lessequal/greaterequal
/yen/mu1/partialdiff/summation/product
/pi/integral/ordfeminine/ordmasculine/Ohm
/ae/oslash/questiondown/exclamdown/logicalnot
/radical/florin/approxequal/increment/guillemotleft
/guillemotright/ellipsis/nbspace
174 index 203 12 getinterval aload pop
/lozenge
187 index 216 24 getinterval aload pop
/applelogo
212 index 241 7 getinterval aload pop
/overscore
220 index 249 7 getinterval aload pop
/Lslash/lslash/Scaron/scaron
/Zcaron/zcaron/brokenbar/Eth/eth
/Yacute/yacute/Thorn/thorn/minus
/multiply/onesuperior/twosuperior/threesuperior/onehalf
/onequarter/threequarters/franc/Gbreve/gbreve
/Idotaccent/Scedilla/scedilla/Cacute/cacute
/Ccaron/ccaron/dmacron
260 -1 roll pop
258 packedarray
7 1 index .registerencoding
.defineencoding
exec

%%BeginResource: file (PDF Extended Graphics State obj_6)
6 0 obj
<</Type/ExtGState
/SA true>>endobj
%%EndResource
%%BeginResource: file (PDF Extended Graphics State obj_7)
7 0 obj
<</R6
6 0 R>>
endobj
%%EndResource
%%BeginResource: file (PDF object obj_1)
1 0 obj
<<>>endobj
%%EndResource
%%EndProlog
%%Page: 1 1
%%BeginPageSetup
4 0 obj
<</Type/Page/MediaBox [0 0 385.24 121.89]
/Parent 3 0 R
/Resources<</ProcSet[/PDF]
/ExtGState 7 0 R
>>
/Contents 5 0 R
/CropBox 
[0 0 385.238 121.89]
/BleedBox 
[0 0 385.238 121.89]
/TrimBox 
[0 0 385.238 121.89]
/ArtBox 
[1.29547 1.69202 384.123 117.724]
>>
endobj
%%EndPageSetup
/pagesave save def
5 0 obj
<</Length 87911>>stream
q 0.1 0 0 0.1 0 0 cm
q
2212.96 47.2109 340 90 re W n
0 0 0 1 K
0 0 0 1 k
2257.43 82.6328 m
2257.43 98.3398 2248.11 103.133 2240.64 103.133 c
2227.06 103.133 2214.02 89.0195 2214.02 74.9102 c
2214.02 65.5898 2219.88 58.1328 2230 58.1328 c
2236.38 58.1328 2243.57 60.5313 2251.04 66.3906 c
2252.36 61.332 2255.55 58.1328 2260.09 58.1328 c
2265.41 58.1328 2268.34 63.4609 2268.34 65.0508 c
2268.34 65.8516 2267.8 66.1211 2267.27 66.1211 c
2266.47 66.1211 2266.2 65.8516 2265.95 65.0508 c
2264.09 60.2695 2260.61 60.2695 2260.36 60.2695 c
2257.43 60.2695 2257.43 67.9805 2257.43 70.3828 c
2257.43 72.5117 2257.43 72.7813 2258.22 73.8398 c
2267.54 85.5625 2269.68 97.2695 y
2269.68 97.5391 2269.68 98.3398 2268.61 98.3398 c
2267.54 98.3398 2267.54 98.0703 2267 96.2109 c
2265.41 89.8203 2261.95 82.3594 2257.43 76.5117 c
h
2250.77 69.0508 m
2241.98 61.332 2234.25 60.2695 2230.27 60.2695 c
2224.4 60.2695 2221.47 64.7891 2221.47 71.1719 c
2221.47 75.9727 2223.88 86.6211 2227.06 91.6797 c
2231.86 99.1406 2237.18 101 2240.64 101 c
2250.5 101 2250.5 87.9492 2250.5 80.2305 c
2250.5 76.5117 2250.5 70.6523 2250.77 69.0508 c
f
2369.26 91.6836 m
2370.59 91.6836 2372.45 91.6836 2372.45 93.8125 c
2372.45 95.6758 2370.59 95.6758 2369.26 95.6758 c
2309.88 95.6758 l
2308.28 95.6758 2306.42 95.6758 2306.42 93.8125 c
2306.42 91.6836 2308.28 91.6836 2309.88 91.6836 c
h
2369.26 72.5156 m
2370.59 72.5156 2372.45 72.5156 2372.45 74.3828 c
2372.45 76.5039 2370.59 76.5039 2369.26 76.5039 c
2309.88 76.5039 l
2308.28 76.5039 2306.42 76.5039 2306.42 74.3828 c
2306.42 72.5156 2308.28 72.5156 2309.88 72.5156 c
2369.26 72.5156 l
f
2452.6 90.8828 m
2452.6 98.8711 2452.07 106.863 2448.61 114.313 c
2444.08 123.902 2435.83 125.504 2431.83 125.504 c
2425.71 125.504 2418.52 122.832 2414.52 113.523 c
2411.33 106.594 2410.8 98.8711 2410.8 90.8828 c
2410.8 83.4219 2411.33 74.6445 2415.32 67.1836 c
2419.58 58.9336 2426.77 57.0625 2431.56 57.0625 c
2437.16 57.0625 2444.61 59.1914 2448.87 68.5234 c
2452.07 75.4414 2452.6 83.1641 2452.6 90.8828 c
2431.56 59.1914 m
2427.84 59.1914 2421.98 61.5938 2420.11 71.1719 c
2419.05 77.3125 2419.05 86.3516 2419.05 92.2148 c
2419.05 98.6016 2419.05 105.004 2419.85 110.594 c
2421.72 122.305 2429.17 123.102 2431.56 123.102 c
2435.03 123.102 2441.42 121.512 2443.28 111.652 c
2444.35 106.063 2444.35 98.3438 2444.35 92.2148 c
2444.35 84.7617 2444.35 78.1016 2443.28 71.7148 c
2441.95 62.1211 2436.09 59.1914 2431.56 59.1914 c
f
2541 130.027 m
2541.53 130.828 2541.8 131.09 2541.8 131.629 c
2541.8 132.957 2541 133.758 2539.94 133.758 c
2538.88 133.758 2538.34 132.957 2537.81 132.418 c
2532.75 125.496 2526.09 122.84 2518.9 122.84 c
2511.98 122.84 2505.85 125.496 2500.26 130.559 c
2498.4 132.156 2496.27 133.758 2493.07 133.758 c
2485.61 133.758 2478.43 125.496 2478.43 113.777 c
2478.43 101.797 2485.61 93.8086 2493.07 93.8086 c
2500.26 93.8086 2506.13 102.598 2506.13 113.777 c
2506.13 115.117 2506.13 119.637 2503.99 124.969 c
2510.38 121.238 2515.44 120.707 2518.9 120.707 c
2526.63 120.707 2531.68 123.898 2532.22 124.168 c
2487.75 57.5977 l
2486.68 56.2773 2486.68 55.7383 y
2486.68 54.668 2487.75 53.6094 2488.81 53.6094 c
2489.61 53.6094 2489.88 54.1367 2490.68 55.1992 c
h
2493.34 95.9375 m
2491.21 95.9375 2484.55 97.2773 2484.55 113.777 c
2484.55 130.289 2491.21 131.629 2493.34 131.629 c
2498.4 131.629 2503.46 124.168 2503.46 113.777 c
2503.46 103.137 2498.4 95.9375 2493.34 95.9375 c
2537.27 55.7383 m
2535.15 55.7383 2528.75 57.0664 2528.75 73.5781 c
2528.75 90.0898 2535.15 91.418 2537.27 91.418 c
2542.6 91.418 2547.66 84.2266 2547.66 73.8398 c
2547.66 62.9297 2542.33 55.7383 2537.27 55.7383 c
2550.05 73.5781 m
2550.05 85.0273 2544.2 93.8086 2537.01 93.8086 c
2529.55 93.8086 2522.63 85.2891 2522.63 73.8398 c
2522.63 61.5977 2529.55 53.6094 2537.01 53.6094 c
2544.46 53.6094 2550.05 62.3984 2550.05 73.5781 c
f
Q
q
1223.12 43.1914 420 90 re W n
0 0 0 1 K
0 0 0 1 k
1290.22 102.039 m
1290.22 106.57 1288.35 109.23 1286.23 109.23 c
1283.56 109.23 1280.9 106.828 1280.9 104.43 c
1280.9 103.371 1281.43 102.301 1282.5 101.512 c
1284.09 99.9102 1285.96 97.25 1285.96 92.9883 c
1285.96 89.2617 1284.09 83.3984 1280.9 78.8711 c
1277.97 74.6094 1274.24 71.1484 1269.72 71.1484 c
1264.12 71.1484 1260.93 74.8789 1260.13 80.1992 c
1261.2 82.8711 1263.33 89.2617 1263.33 91.9219 c
1263.33 92.9883 1262.79 94.0508 1261.73 94.0508 c
1260.93 94.0508 1259.6 93.7813 1258.8 92.4609 c
1257.73 90.3203 1256.67 83.9297 1256.67 80.4688 c
1253.47 75.6797 1249.48 71.1484 1243.09 71.1484 c
1236.69 71.1484 1234.57 77.0117 1234.57 82.6016 c
1234.57 95.1211 1244.68 105.5 1244.68 106.828 c
1244.68 107.891 1243.89 108.699 1242.82 108.699 c
1241.49 108.699 1240.69 107.359 1240.16 106.57 c
1235.1 99.1094 1231.37 87.3906 1231.37 78.3398 c
1231.37 71.4219 1233.5 64.2305 1241.76 64.2305 c
1248.68 64.2305 1253.47 69.0195 1256.93 74.6094 c
1258 68.75 1261.73 64.2305 1267.85 64.2305 c
1275.84 64.2305 1280.37 70.0781 1284.09 77.5391 c
1286.49 82.6016 1290.22 95.9102 1290.22 102.039 c
f
1314.98 94.0508 m
1314.98 95.3828 1314.18 96.7109 1312.05 96.7109 c
1310.19 96.7109 1308.06 94.8516 1308.06 92.9922 c
1308.06 91.6523 1309.12 90.3203 1310.99 90.3203 c
1313.11 90.3203 1314.98 92.1836 1314.98 94.0508 c
1300.6 58.3711 m
1300.34 57.5703 1299.8 56.7734 1299.8 55.4414 c
1299.8 52.2539 1302.73 49.582 1306.73 49.582 c
1313.65 49.582 1316.85 59.1602 1316.85 60.2422 c
1316.85 61.0313 1315.78 61.0313 1315.51 61.0313 c
1314.72 61.0313 1314.45 60.7617 1314.18 59.9609 c
1312.58 54.3828 1309.66 51.4531 1306.73 51.4531 c
1305.4 51.4531 1305.13 52.2539 1305.13 53.8438 c
1305.13 55.4414 1305.66 56.7734 1306.2 58.3711 c
1306.99 60.2422 1307.52 62.0938 1308.32 63.9609 c
1309.12 65.8203 1311.52 72.2109 1311.79 73.0117 c
1312.05 73.5508 1312.32 74.6133 1312.32 75.1406 c
1312.32 78.6133 1309.39 81.2734 1305.66 81.2734 c
1298.74 81.2734 1295.54 71.6836 1295.54 70.3516 c
1295.54 69.5508 1296.34 69.5508 1296.61 69.5508 c
1297.68 69.5508 1297.68 69.8203 1297.94 70.6211 c
1299.8 76.7422 1302.73 79.1406 1305.4 79.1406 c
1306.46 79.1406 1307.26 78.6133 1307.26 76.7422 c
1307.26 75.1406 1306.73 74.0703 1304.86 69.8203 c
1300.6 58.3711 l
f
1419.1 87.9258 m
1420.16 88.4648 1420.96 88.7227 1420.96 90.0547 c
1420.96 91.125 1420.16 91.6523 1419.1 92.1836 c
1364.25 118.016 l
1362.91 118.813 1362.65 118.813 1362.38 118.813 c
1361.32 118.813 1360.25 118.016 1360.25 116.953 c
1360.25 115.883 1360.78 115.355 1362.12 114.555 c
1414.31 90.0547 l
1362.12 65.293 l
1360.78 64.7656 1360.25 64.2344 1360.25 63.1523 c
1360.25 62.0938 1361.32 61.3047 1362.38 61.3047 c
1362.65 61.3047 1362.91 61.3047 1364.25 61.8359 c
1419.1 87.9258 l
f
1503.77 96.9805 m
1503.77 104.973 1503.24 112.961 1499.78 120.141 c
1495.25 129.73 1487 131.332 1483 131.332 c
1476.88 131.332 1469.69 128.66 1465.69 119.613 c
1462.5 112.691 1461.97 104.973 1461.97 96.9805 c
1461.97 89.5234 1462.5 80.4727 1466.49 73.0117 c
1470.75 65.0234 1477.94 62.8906 1482.73 62.8906 c
1488.33 62.8906 1495.78 65.0234 1500.04 74.6133 c
1503.24 81.2734 1503.77 89.2617 1503.77 96.9805 c
1482.73 65.3008 m
1479.01 65.3008 1473.15 67.6914 1471.28 77.2813 c
1470.22 83.1328 1470.22 92.1914 1470.22 98.043 c
1470.22 104.434 1470.22 111.094 1471.02 116.41 c
1472.88 128.402 1480.34 129.203 1482.73 129.203 c
1486.2 129.203 1492.59 127.332 1494.45 117.48 c
1495.52 111.891 1495.52 104.434 1495.52 98.043 c
1495.52 90.8516 1495.52 83.9336 1494.45 77.543 c
1493.12 68.2305 1487.26 65.3008 1482.73 65.3008 c
f
1584.99 125.203 m
1584.99 128.934 1585.25 129.992 1592.98 129.992 c
1595.38 129.992 l
1595.38 132.926 l
1591.65 132.664 1584.46 132.664 1580.73 132.664 c
1577 132.664 1569.55 132.664 1565.82 132.926 c
1565.82 129.992 l
1568.21 129.992 l
1575.94 129.992 1576.2 128.934 1576.2 125.203 c
1576.2 102.043 l
1546.38 102.043 l
1546.38 125.203 l
1546.38 128.934 1546.65 129.992 1554.36 129.992 c
1556.76 129.992 l
1556.76 132.926 l
1553.3 132.664 1545.84 132.664 1542.12 132.664 c
1538.39 132.664 1530.94 132.664 1527.48 132.926 c
1527.48 129.992 l
1529.87 129.992 l
1537.32 129.992 1537.59 128.934 1537.59 125.203 c
1537.59 73.0156 l
1537.59 69.293 1537.32 68.2227 1529.87 68.2227 c
1527.48 68.2227 l
1527.48 65.293 l
1530.94 65.5625 1538.12 65.5625 1542.12 65.5625 c
1545.84 65.5625 1553.3 65.5625 1556.76 65.293 c
1556.76 68.2227 l
1554.36 68.2227 l
1546.65 68.2227 1546.38 69.293 1546.38 73.0156 c
1546.38 98.8438 l
1576.2 98.8438 l
1576.2 73.0156 l
1576.2 69.293 1575.94 68.2227 1568.21 68.2227 c
1565.82 68.2227 l
1565.82 65.293 l
1569.55 65.5625 1576.73 65.5625 1580.46 65.5625 c
1584.46 65.5625 1591.65 65.5625 1595.38 65.293 c
1595.38 68.2227 l
1592.98 68.2227 l
1585.25 68.2227 1584.99 69.293 1584.99 73.0156 c
1584.99 125.203 l
f
1637.98 104.969 m
1638.77 106.031 1638.77 106.301 1638.77 106.828 c
1638.77 107.891 1637.98 107.891 1636.11 107.891 c
1604.43 107.891 l
1603.36 91.9219 l
1605.75 91.9219 l
1606.29 102.039 1608.16 105.77 1619.07 105.77 c
1630.52 105.77 l
1602.82 68.4883 l
1602.02 67.1484 1602.02 67.1484 1602.02 66.6289 c
1602.02 65.3008 1602.55 65.3008 1604.43 65.3008 c
1637.18 65.3008 l
1639.04 83.6719 l
1636.38 83.6719 l
1635.57 71.9492 1633.45 67.6914 1622 67.6914 c
1610.27 67.6914 l
1637.98 104.969 l
f
Q
q
285.43 37.3711 419.992 90 re W n
0 0 0 1 K
0 0 0 1 k
352.52 96.2148 m
352.52 100.746 350.652 103.406 348.531 103.406 c
345.859 103.406 343.199 101.004 343.199 98.6133 c
343.199 97.5469 343.742 96.4844 344.801 95.6836 c
346.402 94.0859 348.262 91.4258 348.262 87.1641 c
348.262 83.4336 346.402 77.5859 343.199 73.0547 c
340.27 68.7969 336.543 65.3242 332.02 65.3242 c
326.43 65.3242 323.23 69.0547 322.43 74.375 c
323.5 77.0469 325.633 83.4336 325.633 86.0938 c
325.633 87.1641 325.09 88.2266 324.031 88.2266 c
323.23 88.2266 321.902 87.9648 321.102 86.6367 c
320.031 84.5039 318.973 78.1055 318.973 74.6563 c
315.781 69.8555 311.781 65.3242 305.391 65.3242 c
299 65.3242 296.871 71.1836 296.871 76.7852 c
296.871 89.2969 306.992 99.6758 306.992 101.004 c
306.992 102.074 306.191 102.875 305.121 102.875 c
303.793 102.875 302.992 101.547 302.461 100.746 c
297.402 93.2969 293.672 81.5742 293.672 72.5234 c
293.672 65.5938 295.813 58.4063 304.063 58.4063 c
310.98 58.4063 315.781 63.1953 319.242 68.7969 c
320.301 62.9336 324.031 58.4063 330.152 58.4063 c
338.141 58.4063 342.672 64.2656 346.402 71.7266 c
348.793 76.7852 352.52 90.0938 352.52 96.2148 c
f
377.285 88.2266 m
377.285 89.5586 376.488 90.8984 374.355 90.8984 c
372.496 90.8984 370.367 89.0273 370.367 87.168 c
370.367 85.8359 371.426 84.4961 373.297 84.4961 c
375.418 84.4961 377.285 86.3672 377.285 88.2266 c
362.906 52.5586 m
362.637 51.7578 362.105 50.9453 362.105 49.6289 c
362.105 46.418 365.035 43.7656 369.027 43.7656 c
375.957 43.7656 379.148 53.3477 379.148 54.4063 c
379.148 55.207 378.086 55.207 377.816 55.207 c
377.016 55.207 376.758 54.9453 376.488 54.1484 c
374.887 48.5586 371.957 45.6289 369.027 45.6289 c
367.707 45.6289 367.438 46.418 367.438 48.0156 c
367.438 49.6289 367.969 50.9453 368.496 52.5586 c
369.297 54.4063 369.828 56.2773 370.629 58.1367 c
371.426 60.0078 373.828 66.3867 374.086 67.1875 c
374.355 67.7266 374.617 68.7969 374.617 69.3164 c
374.617 72.7852 371.695 75.4453 367.969 75.4453 c
361.035 75.4453 357.848 65.8672 357.848 64.5352 c
357.848 63.7383 358.648 63.7383 358.918 63.7383 c
359.977 63.7383 359.977 63.9961 360.246 64.7969 c
362.105 70.9258 365.035 73.3164 367.707 73.3164 c
368.766 73.3164 369.566 72.7852 369.566 70.9258 c
369.566 69.3164 369.027 68.2578 367.168 63.9961 c
362.906 52.5586 l
f
482.73 91.957 m
484.063 91.957 485.922 91.957 485.922 93.8281 c
485.922 95.9453 484.063 95.9453 482.73 95.9453 c
423.352 95.9453 l
421.75 95.9453 419.891 95.9453 419.891 93.8281 c
419.891 91.957 421.75 91.957 423.352 91.957 c
h
482.73 72.5273 m
484.063 72.5273 485.922 72.5273 485.922 74.6563 c
485.922 76.5156 484.063 76.5156 482.73 76.5156 c
423.352 76.5156 l
421.75 76.5156 419.891 76.5156 419.891 74.6563 c
419.891 72.5273 421.75 72.5273 423.352 72.5273 c
482.73 72.5273 l
f
566.074 91.1563 m
566.074 99.1445 565.547 107.137 562.086 114.324 c
557.555 123.906 549.297 125.508 545.305 125.508 c
539.188 125.508 531.984 122.848 527.996 113.797 c
524.805 106.867 524.266 99.1445 524.266 91.1563 c
524.266 83.6953 524.805 74.6563 528.797 67.1953 c
533.055 59.207 540.246 57.0742 545.035 57.0742 c
550.637 57.0742 558.086 59.207 562.348 68.7969 c
565.547 75.4453 566.074 83.4375 566.074 91.1563 c
545.035 59.4648 m
541.305 59.4648 535.445 61.8672 533.586 71.4453 c
532.527 77.3047 532.527 86.3672 532.527 92.2148 c
532.527 98.6172 532.527 105.277 533.324 110.598 c
535.188 122.574 542.645 123.375 545.035 123.375 c
548.508 123.375 554.887 121.516 556.758 111.656 c
557.816 106.066 557.816 98.6172 557.816 92.2148 c
557.816 85.0352 557.816 78.1055 556.758 71.7266 c
555.426 62.3945 549.566 59.4648 545.035 59.4648 c
f
647.285 119.383 m
647.285 123.113 647.559 124.176 655.277 124.176 c
657.676 124.176 l
657.676 127.105 l
653.945 126.844 646.758 126.844 643.027 126.844 c
639.297 126.844 631.848 126.844 628.117 127.105 c
628.117 124.176 l
630.516 124.176 l
638.238 124.176 638.508 123.113 638.508 119.383 c
638.508 96.2148 l
608.676 96.2148 l
608.676 119.383 l
608.676 123.113 608.945 124.176 616.668 124.176 c
619.066 124.176 l
619.066 127.105 l
615.605 126.844 608.148 126.844 604.418 126.844 c
600.688 126.844 593.238 126.844 589.777 127.105 c
589.777 124.176 l
592.168 124.176 l
599.629 124.176 599.887 123.113 599.887 119.383 c
599.887 67.1953 l
599.887 63.4648 599.629 62.3945 592.168 62.3945 c
589.777 62.3945 l
589.777 59.4648 l
593.238 59.7422 600.418 59.7422 604.418 59.7422 c
608.148 59.7422 615.605 59.7422 619.066 59.4648 c
619.066 62.3945 l
616.668 62.3945 l
608.945 62.3945 608.676 63.4648 608.676 67.1953 c
608.676 93.0234 l
638.508 93.0234 l
638.508 67.1953 l
638.508 63.4648 638.238 62.3945 630.516 62.3945 c
628.117 62.3945 l
628.117 59.4648 l
631.848 59.7422 639.035 59.7422 642.758 59.7422 c
646.758 59.7422 653.945 59.7422 657.676 59.4648 c
657.676 62.3945 l
655.277 62.3945 l
647.559 62.3945 647.285 63.4648 647.285 67.1953 c
647.285 119.383 l
f
700.273 99.1445 m
701.074 100.203 701.074 100.477 701.074 101.016 c
701.074 102.074 700.273 102.074 698.414 102.074 c
666.727 102.074 l
665.664 86.0938 l
668.055 86.0938 l
668.594 96.2148 670.453 99.9453 681.363 99.9453 c
692.816 99.9453 l
665.125 62.6758 l
664.324 61.3359 664.324 61.3359 664.324 60.8047 c
664.324 59.4648 664.855 59.4648 666.727 59.4648 c
699.477 59.4648 l
701.336 77.8438 l
698.676 77.8438 l
697.887 66.125 695.746 61.8633 684.297 61.8633 c
672.586 61.8633 l
700.273 99.1445 l
f
Q
0.399902 0 0 0 K
0.399902 0 0 0 k
182.391 194.09 633.488 709.93 re
f*
0 0 0 0.199951 K
0 0 0 0.199951 k
292.809 208.512 410.191 141.727 re
f*
/R6 gs
2.16 w
22.926 M
0 0 0 1 k
0 0 0 1 K
292.809 208.512 410.191 141.727 re
S
0.399902 0 0 0 K
0.399902 0 0 0 k
1134.23 193.148 633.488 792.48 re
f*
2068.63 193.82 633.5 792.488 re
f*
5.67 w
0 0 0 1 k
0 0 0 1 K
2178.27 207.898 411.781 758.723 re
S
2032.81 161.781 702.68 850.969 re
S
2068.63 191.531 631.051 791.457 re
S
0 0 0 0.199951 K
0 0 0 0.199951 k
290.301 345.852 411.777 475.5 re
f*
2.16 w
0 0 0 1 k
0 0 0 1 K
290.301 345.852 411.777 475.5 re
S
0 0 0 0.199951 K
0 0 0 0.199951 k
291.891 821.621 410.188 141.73 re
f*
0 0 0 1 k
0 0 0 1 K
291.891 821.621 410.188 141.73 re
S
0.399902 0.199951 0 0.399902 K
0.399902 0.199951 0 0.399902 k
2735.49 1012.74 -702.684 -850.969 re
2068.63 982.988 631.051 -791.457 re
f*
5.67 w
0 0 0 1 k
0 0 0 1 K
2735.49 1012.74 -702.684 -850.969 re
2068.63 982.988 631.051 -791.457 re
S
0.199951 0 0 0.399902 K
0.199951 0 0 0.399902 k
2735.49 1012.74 -702.684 -850.969 re
2068.63 982.988 631.051 -791.457 re
f*
0 0 0 1 k
0 0 0 1 K
2735.49 1012.74 -702.684 -850.969 re
2068.63 982.988 631.051 -791.457 re
S
0 0 0 0.5 K
0 0 0 0.5 k
2735.49 1012.74 -702.684 -850.969 re
2068.63 982.988 631.051 -791.457 re
f*
0 0 0 1 k
0 0 0 1 K
2735.49 1012.74 -702.684 -850.969 re
2068.63 982.988 631.051 -791.457 re
S
0 0 0 0.199951 K
0 0 0 0.199951 k
2735.49 1012.74 -702.684 -850.969 re
2068.63 982.988 631.051 -791.457 re
f*
7.09 w
0 0 0 1 k
0 0 0 1 K
2735.49 1012.74 -702.684 -850.969 re
2068.63 982.988 631.051 -791.457 re
S
0 0 0 0.199951 K
0 0 0 0.199951 k
2178.27 207.898 411.781 758.723 re
f*
2.16 w
0 0 0 1 k
0 0 0 1 K
2178.27 207.898 411.781 758.723 re
S
2368.05 161.77 32.2188 850.969 re
f*
5.67 w
2368.05 161.77 32.2188 850.969 re
S
42.52 w
1 0 1 0 k
1 0 1 0 K
2590.05 587.262 m
2828.46 587.262 l
S
0 0 0 1 K
0 0 0 1 k
2828.46 538.148 419.359 98.2227 re
f*
5.67 w
1 J
2828.46 538.148 419.359 98.2227 re
S
0 0 0 0.100098 K
0 0 0 0.100098 k
3257.63 219.215 m
3257.63 292.402 3224.18 362.563 3164.71 414.102 c
3113.77 414.102 l
3113.77 22.6133 l
3162.71 22.6133 l
3223.4 74.2813 3257.63 145.172 3257.63 219.215 c
f*
0 0 0 0.199951 K
0 0 0 0.199951 k
3257.63 219.215 m
3257.63 292.402 3224.18 362.563 3164.71 414.102 c
3113.77 414.102 l
3113.77 22.6133 l
3162.71 22.6133 l
3223.4 74.2813 3257.63 145.172 3257.63 219.215 c
f*
3388.06 414.102 m
3422.79 353.621 3440.88 286.883 3440.88 219.211 c
3440.88 150.891 3422.44 83.5391 3387.06 22.6016 c
3424.05 22.6094 l
3456.16 83.0313 3472.8 148.84 3472.8 215.449 c
3472.8 284.23 3455.05 352.133 3420.9 414.102 c
f*
3257.63 219.215 m
3257.63 292.402 3224.18 362.563 3164.71 414.102 c
3113.77 414.102 l
3113.77 22.6133 l
3162.71 22.6133 l
3223.4 74.2813 3257.63 145.172 3257.63 219.215 c
f*
0.399902 0 0 0 K
0.399902 0 0 0 k
3387.07 22.6016 m
3422.44 83.543 3440.88 150.891 3440.88 219.211 c
3440.88 286.883 3422.79 353.621 3388.07 414.102 c
3164.72 414.102 l
3224.19 362.563 3257.64 292.402 3257.64 219.211 c
3257.64 145.172 3223.41 74.2813 3162.71 22.6133 c
f*
0 1 0.599609 0 K
0 1 0.599609 0 k
3162.71 22.6094 m
3223.4 74.2813 3257.63 145.172 3257.63 219.211 c
3257.63 292.402 3224.18 362.563 3164.71 414.102 c
3113.76 414.102 l
3113.76 22.6094 l
f*
0 0 0 0.199951 K
0 0 0 0.199951 k
3162.71 22.6094 m
3223.4 74.2813 3257.63 145.172 3257.63 219.211 c
3257.63 292.402 3224.18 362.563 3164.71 414.102 c
3113.76 414.102 l
3113.76 22.6094 l
f*
3440.88 219.215 m
3440.88 150.895 3422.44 83.543 3387.07 22.6016 c
3424.05 22.6133 l
3456.16 83.0234 3472.8 148.832 3472.8 215.453 c
3472.8 284.234 3455.05 352.133 3420.91 414.102 c
3388.07 414.102 l
3422.79 353.613 3440.88 286.883 3440.88 219.215 c
f*
0 0 0 0.300049 K
0 0 0 0.300049 k
3162.71 22.6094 m
3223.4 74.2813 3257.63 145.172 3257.63 219.211 c
3257.63 292.402 3224.18 362.563 3164.71 414.102 c
3113.76 414.102 l
3113.76 22.6094 l
f*
3388.06 414.102 m
3422.79 353.621 3440.88 286.883 3440.88 219.211 c
3440.88 150.891 3422.44 83.5391 3387.06 22.6016 c
3424.05 22.6094 l
3456.16 83.0313 3472.8 148.84 3472.8 215.449 c
3472.8 284.23 3455.05 352.133 3420.9 414.102 c
f*
0 0 0 0.199951 K
0 0 0 0.199951 k
3257.63 219.215 m
3257.63 292.402 3224.18 362.563 3164.71 414.102 c
3113.77 414.102 l
3113.77 22.6133 l
3162.71 22.6133 l
3223.4 74.2813 3257.63 145.172 3257.63 219.215 c
f*
3257.63 219.215 m
3257.63 292.402 3224.18 362.563 3164.71 414.102 c
3113.77 414.102 l
3113.77 22.6133 l
3162.71 22.6133 l
3223.4 74.2813 3257.63 145.172 3257.63 219.215 c
f*
3388.06 414.102 m
3422.79 353.621 3440.88 286.883 3440.88 219.211 c
3440.88 150.891 3422.44 83.5391 3387.06 22.6016 c
3424.05 22.6094 l
3456.16 83.0313 3472.8 148.84 3472.8 215.449 c
3472.8 284.23 3455.05 352.133 3420.9 414.102 c
f*
7.09 w
0 J
1 0 1 0 k
1 0 1 0 K
3230.11 106.867 m
3836.22 171.41 l
S
3463.97 131.766 m
3836.23 171.406 l
3836.23 253.387 l
3464.32 297.438 l
3469.95 270.469 3472.8 243.027 3472.8 215.457 c
3472.8 187.297 3469.82 159.285 3463.97 131.766 c
f*
3429.83 128.133 m
3437.14 157.965 3440.87 188.492 3440.87 219.215 c
3440.87 246.844 3437.86 274.313 3431.93 301.273 c
3233.47 324.773 l
3249.27 291.645 3257.63 255.813 3257.63 219.215 c
3257.63 180.094 3248.08 141.863 3230.11 106.875 c
f*
3431.93 301.273 m
3437.86 274.313 3440.88 246.844 3440.88 219.215 c
3440.88 188.492 3437.14 157.965 3429.83 128.133 c
3463.97 131.762 l
3469.82 159.293 3472.8 187.305 3472.8 215.453 c
3472.8 243.031 3469.95 270.465 3464.32 297.434 c
f*
14.17 w
0 0 0 1 k
0 0 0 1 K
3162.71 22.6094 m
3223.4 74.2813 3257.63 145.172 3257.63 219.211 c
3257.63 292.402 3224.18 362.563 3164.71 414.102 c
S
3424.05 22.6094 m
3456.16 83.0313 3472.8 148.84 3472.8 215.449 c
3472.8 284.23 3455.06 352.133 3420.91 414.102 c
S
3387.07 22.6016 m
3422.44 83.543 3440.88 150.891 3440.88 219.211 c
3440.88 286.883 3422.79 353.621 3388.07 414.102 c
S
10 w
3113.77 22.6094 722.461 391.492 re
S
0 0 0 0.199951 K
0 0 0 0.199951 k
2943.29 122.68 m
2944.26 24.9219 l
2859.68 24.0781 l
2858.71 121.84 l
h
f*
7.09 w
0 0 0 1 k
0 0 0 1 K
2943.29 122.68 m
2944.26 24.9219 l
2859.68 24.0781 l
2858.71 121.84 l
2943.29 122.68 l
h
S
0 0 0 0.199951 K
0 0 0 0.199951 k
2858.99 93.832 m
2859.4 52.082 l
2800.18 30.2734 l
2799.34 114.473 l
h
f*
0 0 0 1 k
0 0 0 1 K
2858.99 93.832 m
2859.4 52.082 l
2800.18 30.2734 l
2799.34 114.473 l
2858.99 93.832 l
h
S
0 0 0 0.27002 K
0 0 0 0.27002 k
2578.8 137.879 m
2681.57 29.8281 l
2669.11 16.9219 l
2566.35 124.969 l
h
f*
10 w
0 0 0 1 k
0 0 0 1 K
3229.41 209.605 m
3229.41 260.523 3204.75 334.336 3163.37 370.184 c
S
3163.38 72.8164 m
3205.61 108.766 3229.42 158.086 3229.42 209.605 c
S
3155.38 386.586 m
3167.29 338.016 l
3176.13 358.016 l
3197.9 360.246 l
f
5.67 w
292.02 207.941 411.781 758.719 re
S
146.57 161.82 702.68 850.961 re
S
182.379 191.578 631.051 791.461 re
S
0.399902 0.199951 0 0.399902 K
0.399902 0.199951 0 0.399902 k
849.25 1012.78 -702.68 -850.961 re
182.379 983.031 631.043 -791.461 re
f*
0 0 0 1 k
0 0 0 1 K
849.25 1012.78 -702.68 -850.961 re
182.379 983.031 631.043 -791.461 re
S
0.199951 0 0 0.399902 K
0.199951 0 0 0.399902 k
849.25 1012.78 -702.68 -850.961 re
182.379 983.031 631.043 -791.461 re
f*
0 0 0 1 k
0 0 0 1 K
849.25 1012.78 -702.68 -850.961 re
182.379 983.031 631.043 -791.461 re
S
0 0 0 0.5 K
0 0 0 0.5 k
849.25 1012.78 -702.68 -850.961 re
182.379 983.031 631.043 -791.461 re
f*
0 0 0 1 k
0 0 0 1 K
849.25 1012.78 -702.68 -850.961 re
182.379 983.031 631.043 -791.461 re
S
0 0 0 0.199951 K
0 0 0 0.199951 k
849.25 1012.78 -702.68 -850.961 re
182.379 983.031 631.043 -791.461 re
f*
7.09 w
0 0 0 1 k
0 0 0 1 K
849.25 1012.78 -702.68 -850.961 re
182.379 983.031 631.043 -791.461 re
S
481.801 161.82 32.2188 850.961 re
f*
5.67 w
481.801 161.82 32.2188 850.961 re
S
10 w
882.645 962.469 m
882.645 920.789 l
S
894.484 954.051 m
882.645 983.031 l
f
882.645 983.031 m
870.805 954.051 l
882.645 960.93 l
894.484 954.051 l
f
894.484 929.203 m
882.645 900.234 l
f
882.645 900.23 m
870.805 929.199 l
882.645 922.328 l
894.484 929.199 l
f
99.1484 934.063 m
99.1484 205.813 l
S
122.887 919.199 m
99.207 977.137 l
f
99.2109 977.145 m
75.5313 919.203 l
99.2109 932.953 l
122.891 919.203 l
f
123.172 251.797 m
99.4922 193.848 l
f
99.4922 193.848 m
75.8242 251.797 l
99.4922 238.047 l
123.176 251.797 l
f
5.67 w
1242.02 207.941 411.781 758.719 re
S
1096.57 161.82 702.68 850.961 re
S
1132.38 191.578 631.051 791.461 re
S
0.399902 0.199951 0 0.399902 K
0.399902 0.199951 0 0.399902 k
1799.25 1012.78 -702.68 -850.961 re
1132.39 983.031 631.039 -791.461 re
f*
0 0 0 1 k
0 0 0 1 K
1799.25 1012.78 -702.68 -850.961 re
1132.39 983.031 631.039 -791.461 re
S
0.199951 0 0 0.399902 K
0.199951 0 0 0.399902 k
1799.25 1012.78 -702.68 -850.961 re
1132.39 983.031 631.039 -791.461 re
f*
0 0 0 1 k
0 0 0 1 K
1799.25 1012.78 -702.68 -850.961 re
1132.39 983.031 631.039 -791.461 re
S
0 0 0 0.5 K
0 0 0 0.5 k
1799.25 1012.78 -702.68 -850.961 re
1132.39 983.031 631.039 -791.461 re
f*
0 0 0 1 k
0 0 0 1 K
1799.25 1012.78 -702.68 -850.961 re
1132.39 983.031 631.039 -791.461 re
S
0 0 0 0.199951 K
0 0 0 0.199951 k
1799.25 1012.78 -702.68 -850.961 re
1132.39 983.031 631.039 -791.461 re
f*
7.09 w
0 0 0 1 k
0 0 0 1 K
1799.25 1012.78 -702.68 -850.961 re
1132.39 983.031 631.039 -791.461 re
S
0 0 0 0 K
0 0 0 0 k
1188.74 529.43 m
1194.15 526.047 1195.8 518.918 1192.42 513.508 c
1189.03 508.09 1181.9 506.449 1176.49 509.828 c
1171.08 513.207 1169.43 520.34 1172.82 525.746 c
1176.2 531.156 1183.33 532.809 1188.74 529.43 c
f*
1213.54 505.938 m
1218.18 503.035 1219.59 496.926 1216.69 492.285 c
1213.79 487.648 1207.68 486.238 1203.04 489.137 c
1198.4 492.027 1196.99 498.148 1199.89 502.785 c
1202.79 507.418 1208.9 508.836 1213.54 505.938 c
f*
1149.05 576.668 m
1152.93 574.25 1154.09 569.16 1151.68 565.289 c
1149.27 561.43 1144.18 560.25 1140.3 562.668 c
1136.43 565.078 1135.27 570.18 1137.68 574.039 c
1140.09 577.91 1145.18 579.09 1149.05 576.668 c
f*
1199.58 577.93 m
1202.67 576 1203.61 571.918 1201.68 568.828 c
1199.75 565.738 1195.67 564.801 1192.58 566.73 c
1189.49 568.66 1188.54 572.73 1190.48 575.828 c
1192.41 578.918 1196.48 579.859 1199.58 577.93 c
f*
1147.96 518.309 m
1151.05 516.379 1151.98 512.301 1150.05 509.211 c
1148.13 506.121 1144.05 505.18 1140.96 507.109 c
1137.87 509.039 1136.92 513.109 1138.86 516.211 c
1140.79 519.301 1144.86 520.238 1147.96 518.309 c
f*
1166.27 493.461 m
1171.68 490.082 1173.33 482.949 1169.95 477.531 c
1166.56 472.121 1159.43 470.48 1154.02 473.859 c
1148.61 477.242 1146.96 484.371 1150.34 489.781 c
1153.73 495.191 1160.85 496.84 1166.27 493.461 c
f*
1219.83 548.023 m
1222.92 546.094 1223.86 542.012 1221.93 538.922 c
1220 535.832 1215.92 534.891 1212.83 536.82 c
1209.74 538.754 1208.79 542.82 1210.73 545.922 c
1212.66 549.012 1216.73 549.953 1219.83 548.023 c
f*
1224.77 479.441 m
1227.87 477.512 1228.8 473.434 1226.87 470.344 c
1224.94 467.254 1220.86 466.313 1217.77 468.242 c
1214.68 470.172 1213.74 474.254 1215.67 477.344 c
1217.6 480.441 1221.68 481.371 1224.77 479.441 c
f*
1200.82 466.035 m
1203.92 464.105 1204.85 460.023 1202.92 456.934 c
1200.99 453.844 1196.91 452.902 1193.82 454.836 c
1190.73 456.766 1189.79 460.836 1191.72 463.934 c
1193.65 467.023 1197.73 467.965 1200.82 466.035 c
f*
1231.82 512.703 m
1234.92 510.773 1235.85 506.695 1233.92 503.605 c
1231.99 500.516 1227.91 499.574 1224.82 501.504 c
1221.73 503.434 1220.79 507.504 1222.72 510.605 c
1224.65 513.695 1228.73 514.633 1231.82 512.703 c
f*
1231.09 588.023 m
1235.73 585.121 1237.14 579.012 1234.24 574.371 c
1231.34 569.73 1225.23 568.32 1220.59 571.223 c
1215.95 574.121 1214.54 580.23 1217.44 584.871 c
1220.34 589.512 1226.45 590.922 1231.09 588.023 c
f*
1164.73 554.164 m
1169.37 551.266 1170.78 545.152 1167.88 540.516 c
1164.98 535.875 1158.87 534.465 1154.23 537.363 c
1149.59 540.266 1148.18 546.375 1151.08 551.016 c
1153.98 555.652 1160.09 557.063 1164.73 554.164 c
f*
1193.88 670.473 m
1201.61 675.305 1203.96 685.484 1199.13 693.223 c
1194.3 700.953 1184.11 703.305 1176.38 698.473 c
1168.65 693.645 1166.3 683.453 1171.13 675.723 c
1175.96 667.992 1186.15 665.645 1193.88 670.473 c
f*
1216.05 698.164 m
1220.69 701.063 1222.1 707.172 1219.2 711.813 c
1216.3 716.453 1210.19 717.863 1205.55 714.965 c
1200.91 712.074 1199.5 705.953 1202.4 701.313 c
1205.3 696.684 1211.41 695.262 1216.05 698.164 c
f*
1151.57 627.43 m
1155.44 629.852 1156.61 634.941 1154.2 638.813 c
1151.78 642.672 1146.69 643.852 1142.82 641.43 c
1138.96 639.02 1137.78 633.922 1140.2 630.063 c
1142.61 626.191 1147.71 625.012 1151.57 627.43 c
f*
1202.1 626.172 m
1205.2 628.102 1206.13 632.18 1204.2 635.27 c
1202.27 638.359 1198.19 639.301 1195.1 637.371 c
1192.01 635.441 1191.07 631.371 1193 628.27 c
1194.93 625.18 1199.01 624.242 1202.1 626.172 c
f*
1150.47 685.789 m
1153.56 687.719 1154.5 691.801 1152.57 694.891 c
1150.64 697.98 1146.56 698.922 1143.47 696.988 c
1140.38 695.059 1139.43 690.988 1141.37 687.891 c
1143.3 684.801 1147.38 683.859 1150.47 685.789 c
f*
1168.79 710.641 m
1174.21 714.02 1175.85 721.148 1172.46 726.57 c
1169.07 731.98 1161.95 733.617 1156.54 730.238 c
1151.13 726.859 1149.48 719.73 1152.87 714.32 c
1156.25 708.91 1163.37 707.258 1168.79 710.641 c
f*
1222.35 656.078 m
1225.44 658.008 1226.38 662.09 1224.45 665.18 c
1222.52 668.27 1218.44 669.207 1215.35 667.277 c
1212.26 665.348 1211.3 661.277 1213.25 658.18 c
1215.18 655.09 1219.26 654.148 1222.35 656.078 c
f*
1227.29 724.656 m
1230.39 726.586 1231.33 730.668 1229.39 733.758 c
1227.46 736.848 1223.39 737.785 1220.29 735.855 c
1217.2 733.926 1216.26 729.848 1218.19 726.758 c
1220.13 723.656 1224.2 722.727 1227.29 724.656 c
f*
1196.34 749.266 m
1193.25 747.336 1192.3 743.258 1194.23 740.168 c
1196.16 737.078 1200.25 736.137 1203.34 738.066 c
1206.43 739.996 1207.38 744.078 1205.43 747.168 c
1203.5 750.258 1199.43 751.195 1196.34 749.266 c
f*
1234.34 691.395 m
1237.43 693.324 1238.37 697.406 1236.44 700.496 c
1234.51 703.586 1230.43 704.527 1227.34 702.598 c
1224.25 700.668 1223.3 696.598 1225.24 693.496 c
1227.17 690.406 1231.24 689.465 1234.34 691.395 c
f*
1233.61 616.078 m
1238.25 618.977 1239.66 625.09 1236.75 629.727 c
1233.86 634.367 1227.75 635.777 1223.11 632.879 c
1218.46 629.977 1217.05 623.867 1219.95 619.227 c
1222.86 614.59 1228.96 613.18 1233.61 616.078 c
f*
1167.25 649.938 m
1171.89 652.836 1173.3 658.945 1170.4 663.586 c
1167.5 668.227 1161.39 669.637 1156.75 666.734 c
1152.11 663.836 1150.7 657.727 1153.6 653.086 c
1156.5 648.445 1162.61 647.035 1167.25 649.938 c
f*
1224.02 387.012 m
1229.05 383.871 1230.59 377.25 1227.43 372.223 c
1224.3 367.199 1217.68 365.672 1212.66 368.813 c
1207.63 371.949 1206.11 378.57 1209.23 383.602 c
1212.38 388.621 1219 390.152 1224.02 387.012 c
f*
1155.52 353.973 m
1160.16 351.074 1161.57 344.965 1158.67 340.324 c
1155.77 335.684 1149.66 334.273 1145.02 337.176 c
1140.38 340.074 1138.97 346.184 1141.87 350.824 c
1144.77 355.465 1150.88 356.875 1155.52 353.973 c
f*
1184.78 434.953 m
1188.65 432.535 1189.82 427.445 1187.41 423.574 c
1184.99 419.715 1179.9 418.535 1176.03 420.953 c
1172.16 423.363 1170.99 428.465 1173.4 432.324 c
1175.82 436.195 1180.91 437.375 1184.78 434.953 c
f*
1235.3 436.215 m
1238.4 434.285 1239.34 430.203 1237.4 427.113 c
1235.47 424.016 1231.4 423.086 1228.3 425.016 c
1225.21 426.945 1224.27 431.016 1226.2 434.113 c
1228.14 437.203 1232.21 438.145 1235.3 436.215 c
f*
1183.68 376.598 m
1186.77 374.668 1187.7 370.586 1185.77 367.496 c
1183.84 364.406 1179.77 363.465 1176.68 365.395 c
1173.59 367.324 1172.64 371.395 1174.57 374.496 c
1176.5 377.586 1180.59 378.527 1183.68 376.598 c
f*
1176.21 597.105 m
1181.62 593.723 1183.27 586.594 1179.89 581.176 c
1176.5 575.766 1169.37 574.113 1163.96 577.504 c
1158.55 580.883 1156.9 588.016 1160.28 593.426 c
1163.67 598.836 1170.79 600.484 1176.21 597.105 c
f*
1159.39 377.598 m
1162.48 375.668 1163.42 371.586 1161.49 368.496 c
1159.56 365.406 1155.48 364.469 1152.39 366.398 c
1149.3 368.328 1148.35 372.398 1150.29 375.496 c
1152.22 378.586 1156.29 379.527 1159.39 377.598 c
f*
1188.8 307.34 m
1191.89 305.406 1192.82 301.328 1190.89 298.238 c
1188.96 295.148 1184.89 294.207 1181.8 296.137 c
1178.71 298.066 1177.76 302.148 1179.7 305.238 c
1181.63 308.34 1185.7 309.27 1188.8 307.34 c
f*
1223.04 349.883 m
1219.95 351.813 1219 355.891 1220.93 358.98 c
1222.86 362.07 1226.95 363.012 1230.04 361.082 c
1233.13 359.152 1234.07 355.082 1232.13 351.98 c
1230.2 348.891 1226.13 347.953 1223.04 349.883 c
f*
1177.07 357.781 m
1180.16 355.852 1181.1 351.773 1179.17 348.684 c
1177.24 345.582 1173.16 344.652 1170.07 346.582 c
1166.98 348.512 1166.03 352.582 1167.97 355.684 c
1169.9 358.773 1173.97 359.711 1177.07 357.781 c
f*
1200.45 412.449 m
1205.09 409.551 1206.5 403.441 1203.6 398.801 c
1200.7 394.16 1194.59 392.75 1189.95 395.648 c
1185.31 398.551 1183.9 404.66 1186.8 409.301 c
1189.7 413.941 1195.81 415.352 1200.45 412.449 c
f*
1192.19 912.988 m
1198.38 909.117 1200.26 900.977 1196.39 894.785 c
1192.53 888.605 1184.38 886.727 1178.19 890.586 c
1172.01 894.445 1170.12 902.598 1173.99 908.785 c
1177.86 914.969 1186 916.848 1192.19 912.988 c
f*
1216.11 888.094 m
1220.75 885.195 1222.16 879.086 1219.25 874.445 c
1216.36 869.805 1210.25 868.395 1205.61 871.297 c
1200.96 874.195 1199.55 880.305 1202.45 884.945 c
1205.36 889.586 1211.46 890.996 1216.11 888.094 c
f*
1151.63 958.828 m
1155.49 956.418 1156.67 951.328 1154.26 947.457 c
1151.84 943.586 1146.75 942.406 1142.88 944.828 c
1139.01 947.246 1137.84 952.336 1140.25 956.207 c
1142.67 960.066 1147.76 961.246 1151.63 958.828 c
f*
1202.15 960.086 m
1205.25 958.156 1206.18 954.078 1204.25 950.988 c
1202.32 947.898 1198.24 946.957 1195.15 948.887 c
1192.06 950.816 1191.12 954.887 1193.05 957.988 c
1194.98 961.078 1199.06 962.016 1202.15 960.086 c
f*
1150.52 900.469 m
1153.63 898.539 1154.55 894.457 1152.63 891.367 c
1150.7 888.277 1146.61 887.34 1143.52 889.27 c
1140.43 891.199 1139.49 895.277 1141.43 898.367 c
1143.36 901.457 1147.43 902.398 1150.52 900.469 c
f*
1168.84 875.617 m
1174.26 872.238 1175.9 865.109 1172.52 859.699 c
1169.14 854.277 1162 852.641 1156.59 856.02 c
1151.18 859.398 1149.53 866.527 1152.92 871.938 c
1156.3 877.359 1163.43 879 1168.84 875.617 c
f*
1222.4 930.18 m
1225.5 928.25 1226.43 924.172 1224.5 921.078 c
1222.57 917.988 1218.49 917.051 1215.4 918.98 c
1212.31 920.91 1211.37 924.98 1213.3 928.078 c
1215.23 931.172 1219.31 932.109 1222.4 930.18 c
f*
1227.35 861.605 m
1230.44 859.676 1231.38 855.598 1229.45 852.508 c
1227.52 849.414 1223.44 848.477 1220.35 850.406 c
1217.26 852.336 1216.3 856.406 1218.25 859.508 c
1220.18 862.598 1224.25 863.535 1227.35 861.605 c
f*
1196.39 836.992 m
1193.3 838.922 1192.36 843 1194.29 846.09 c
1196.22 849.18 1200.3 850.121 1203.39 848.191 c
1206.48 846.262 1207.43 842.191 1205.49 839.09 c
1203.56 836 1199.49 835.063 1196.39 836.992 c
f*
1234.39 894.867 m
1237.48 892.938 1238.42 888.855 1236.49 885.766 c
1234.56 882.668 1230.48 881.738 1227.39 883.668 c
1224.3 885.598 1223.35 889.668 1225.29 892.766 c
1227.22 895.855 1231.3 896.797 1234.39 894.867 c
f*
1233.66 970.184 m
1238.3 967.285 1239.71 961.176 1236.81 956.535 c
1233.91 951.895 1227.8 950.484 1223.16 953.387 c
1218.52 956.285 1217.11 962.395 1220.02 967.035 c
1222.91 971.676 1229.02 973.086 1233.66 970.184 c
f*
1167.3 936.328 m
1171.94 933.426 1173.35 927.316 1170.45 922.676 c
1167.55 918.035 1161.44 916.629 1156.8 919.527 c
1152.16 922.426 1150.75 928.535 1153.65 933.176 c
1156.55 937.816 1162.66 939.227 1167.3 936.328 c
f*
1683.38 912.988 m
1689.57 909.117 1691.45 900.977 1687.58 894.785 c
1683.72 888.605 1675.57 886.727 1669.38 890.586 c
1663.2 894.445 1661.31 902.598 1665.18 908.785 c
1669.04 914.969 1677.19 916.848 1683.38 912.988 c
f*
1711.6 827.188 m
1716.24 824.285 1717.65 818.176 1714.75 813.535 c
1711.85 808.898 1705.74 807.488 1701.1 810.387 c
1696.46 813.277 1695.05 819.398 1697.95 824.035 c
1700.85 828.668 1706.96 830.086 1711.6 827.188 c
f*
1753.18 914.578 m
1757.04 912.168 1758.22 907.078 1755.8 903.211 c
1753.39 899.34 1748.3 898.16 1744.43 900.578 c
1740.56 903 1739.39 908.09 1741.8 911.961 c
1744.22 915.82 1749.31 917 1753.18 914.578 c
f*
1693.34 960.086 m
1696.44 958.156 1697.37 954.078 1695.44 950.988 c
1693.51 947.898 1689.43 946.957 1686.34 948.887 c
1683.25 950.816 1682.31 954.887 1684.24 957.988 c
1686.17 961.078 1690.25 962.016 1693.34 960.086 c
f*
1670.54 792.422 m
1673.63 790.492 1674.56 786.41 1672.63 783.32 c
1670.7 780.23 1666.63 779.293 1663.54 781.223 c
1660.45 783.152 1659.49 787.223 1661.43 790.32 c
1663.36 793.41 1667.45 794.352 1670.54 792.422 c
f*
1713.59 930.18 m
1716.69 928.25 1717.62 924.172 1715.69 921.078 c
1713.76 917.988 1709.68 917.051 1706.59 918.98 c
1703.5 920.91 1702.56 924.98 1704.49 928.078 c
1706.42 931.172 1710.5 932.109 1713.59 930.18 c
f*
1718.54 861.605 m
1721.63 859.676 1722.57 855.598 1720.64 852.508 c
1718.71 849.414 1714.63 848.477 1711.54 850.406 c
1708.45 852.336 1707.5 856.406 1709.44 859.508 c
1711.37 862.598 1715.44 863.535 1718.54 861.605 c
f*
1687.58 836.992 m
1684.49 838.922 1683.55 843 1685.48 846.09 c
1687.41 849.18 1691.49 850.121 1694.58 848.191 c
1697.67 846.262 1698.62 842.191 1696.68 839.09 c
1694.75 836 1690.68 835.063 1687.58 836.992 c
f*
1718.98 904.262 m
1722.07 902.332 1723.01 898.254 1721.07 895.16 c
1719.14 892.07 1715.07 891.133 1711.98 893.063 c
1708.89 894.992 1707.95 899.063 1709.88 902.16 c
1711.8 905.254 1715.89 906.191 1718.98 904.262 c
f*
1724.85 970.184 m
1729.49 967.285 1730.9 961.176 1728 956.535 c
1725.1 951.895 1719 950.484 1714.35 953.387 c
1709.71 956.285 1708.3 962.395 1711.2 967.035 c
1714.1 971.676 1720.21 973.086 1724.85 970.184 c
f*
1721.98 780.086 m
1729.71 775.258 1732.06 765.066 1727.23 757.336 c
1722.4 749.605 1712.21 747.246 1704.48 752.086 c
1696.75 756.918 1694.4 767.098 1699.23 774.836 c
1704.06 782.566 1714.25 784.918 1721.98 780.086 c
f*
1744.15 752.391 m
1748.79 749.492 1750.2 743.383 1747.3 738.742 c
1744.4 734.102 1738.29 732.691 1733.65 735.594 c
1729.01 738.492 1727.6 744.602 1730.5 749.242 c
1733.4 753.883 1739.51 755.293 1744.15 752.391 c
f*
1679.66 823.125 m
1683.54 820.715 1684.71 815.625 1682.3 811.754 c
1679.88 807.883 1674.79 806.703 1670.91 809.125 c
1667.05 811.543 1665.88 816.633 1668.29 820.504 c
1670.71 824.363 1675.8 825.543 1679.66 823.125 c
f*
1730.19 824.383 m
1733.28 822.453 1734.22 818.375 1732.29 815.285 c
1730.36 812.195 1726.28 811.254 1723.19 813.184 c
1720.1 815.113 1719.15 819.184 1721.09 822.285 c
1723.02 825.375 1727.09 826.313 1730.19 824.383 c
f*
1678.57 764.766 m
1681.66 762.836 1682.6 758.754 1680.66 755.664 c
1678.73 752.574 1674.66 751.637 1671.57 753.566 c
1668.48 755.496 1667.53 759.574 1669.46 762.664 c
1671.39 765.754 1675.46 766.695 1678.57 764.766 c
f*
1696.88 739.918 m
1702.29 736.535 1703.94 729.406 1700.56 723.996 c
1697.17 718.574 1690.04 716.938 1684.63 720.316 c
1679.22 723.695 1677.57 730.824 1680.95 736.234 c
1684.34 741.656 1691.46 743.297 1696.88 739.918 c
f*
1750.44 794.477 m
1753.53 792.547 1754.47 788.469 1752.54 785.379 c
1750.61 782.285 1746.53 781.348 1743.44 783.277 c
1740.35 785.207 1739.4 789.277 1741.34 792.379 c
1743.27 795.469 1747.34 796.406 1750.44 794.477 c
f*
1755.38 725.902 m
1758.48 723.973 1759.41 719.891 1757.48 716.801 c
1755.55 713.711 1751.47 712.773 1748.38 714.703 c
1745.29 716.633 1744.35 720.703 1746.28 723.801 c
1748.21 726.891 1752.29 727.832 1755.38 725.902 c
f*
1724.43 701.289 m
1721.33 703.219 1720.4 707.297 1722.33 710.387 c
1724.26 713.477 1728.34 714.418 1731.43 712.488 c
1734.52 710.559 1735.46 706.488 1733.53 703.387 c
1731.6 700.297 1727.52 699.359 1724.43 701.289 c
f*
1703.85 703.016 m
1706.95 701.086 1707.88 697.008 1705.95 693.918 c
1704.02 690.828 1699.94 689.887 1696.85 691.816 c
1693.76 693.746 1692.82 697.816 1694.75 700.918 c
1696.68 704.008 1700.76 704.945 1703.85 703.016 c
f*
1695.34 800.625 m
1699.98 797.723 1701.39 791.613 1698.49 786.973 c
1695.59 782.336 1689.49 780.926 1684.84 783.824 c
1680.2 786.723 1678.79 792.836 1681.69 797.473 c
1684.59 802.113 1690.7 803.523 1695.34 800.625 c
f*
1706.56 625.238 m
1700.38 629.098 1698.49 637.246 1702.36 643.438 c
1706.22 649.617 1714.37 651.496 1720.56 647.637 c
1726.75 643.777 1728.63 635.629 1724.76 629.438 c
1720.9 623.258 1712.75 621.367 1706.56 625.238 c
f*
1682.64 650.125 m
1678 653.027 1676.59 659.137 1679.49 663.777 c
1682.39 668.418 1688.5 669.824 1693.14 666.926 c
1697.78 664.035 1699.19 657.918 1696.29 653.277 c
1693.39 648.645 1687.28 647.227 1682.64 650.125 c
f*
1747.13 579.395 m
1743.26 581.813 1742.09 586.902 1744.5 590.773 c
1746.92 594.633 1752.01 595.813 1755.88 593.395 c
1759.73 590.984 1760.92 585.883 1758.5 582.023 c
1756.09 578.152 1750.98 576.973 1747.13 579.395 c
f*
1696.6 578.133 m
1693.5 580.063 1692.57 584.145 1694.5 587.234 c
1696.43 590.336 1700.51 591.266 1703.6 589.336 c
1706.69 587.402 1707.63 583.336 1705.7 580.234 c
1703.77 577.145 1699.69 576.203 1696.6 578.133 c
f*
1748.22 637.754 m
1745.13 639.684 1744.2 643.762 1746.13 646.852 c
1748.05 649.941 1752.13 650.883 1755.22 648.953 c
1758.31 647.023 1759.25 642.953 1757.32 639.852 c
1755.39 636.762 1751.31 635.824 1748.22 637.754 c
f*
1729.91 662.602 m
1724.49 665.98 1722.85 673.113 1726.23 678.531 c
1729.62 683.941 1736.75 685.582 1742.16 682.203 c
1747.57 678.82 1749.22 671.691 1745.83 666.281 c
1742.45 660.871 1735.32 659.223 1729.91 662.602 c
f*
1676.35 608.043 m
1673.25 609.973 1672.32 614.051 1674.25 617.141 c
1676.18 620.242 1680.26 621.172 1683.35 619.242 c
1686.44 617.313 1687.38 613.242 1685.45 610.141 c
1683.52 607.051 1679.44 606.109 1676.35 608.043 c
f*
1671.4 676.621 m
1668.31 678.551 1667.38 682.629 1669.3 685.719 c
1671.23 688.809 1675.31 689.75 1678.4 687.82 c
1681.49 685.891 1682.44 681.809 1680.5 678.719 c
1678.57 675.621 1674.5 674.691 1671.4 676.621 c
f*
1731.43 567.332 m
1734.53 565.402 1735.46 561.324 1733.53 558.234 c
1731.6 555.145 1727.52 554.203 1724.43 556.133 c
1721.34 558.063 1720.4 562.133 1722.33 565.234 c
1724.26 568.324 1728.34 569.262 1731.43 567.332 c
f*
1664.36 643.359 m
1661.27 645.289 1660.33 649.367 1662.26 652.457 c
1664.19 655.547 1668.27 656.488 1671.36 654.559 c
1674.45 652.629 1675.4 648.559 1673.46 645.457 c
1671.53 642.367 1667.46 641.43 1664.36 643.359 c
f*
1665.09 568.043 m
1660.45 570.941 1659.04 577.051 1661.94 581.691 c
1664.84 586.332 1670.94 587.742 1675.59 584.84 c
1680.23 581.941 1681.64 575.832 1678.74 571.191 c
1675.84 566.551 1669.73 565.141 1665.09 568.043 c
f*
1731.45 601.898 m
1726.81 604.797 1725.4 610.906 1728.3 615.547 c
1731.2 620.188 1737.31 621.598 1741.95 618.699 c
1746.59 615.797 1748 609.688 1745.1 605.047 c
1742.2 600.406 1736.09 598.996 1731.45 601.898 c
f*
1706.21 482.008 m
1701.19 485.145 1699.66 491.766 1702.8 496.797 c
1705.94 501.816 1712.56 503.348 1717.58 500.207 c
1722.61 497.066 1724.13 490.445 1721 485.414 c
1717.86 480.395 1711.23 478.867 1706.21 482.008 c
f*
1680.98 504.801 m
1676.34 507.699 1674.93 513.809 1677.83 518.449 c
1680.73 523.09 1686.84 524.5 1691.48 521.598 c
1696.12 518.699 1697.53 512.59 1694.63 507.949 c
1691.73 503.309 1685.62 501.898 1680.98 504.801 c
f*
1745.46 434.063 m
1741.59 436.48 1740.42 441.57 1742.83 445.441 c
1745.25 449.301 1750.34 450.48 1754.21 448.063 c
1758.08 445.652 1759.25 440.551 1756.84 436.691 c
1754.42 432.82 1749.33 431.652 1745.46 434.063 c
f*
1694.94 432.809 m
1691.84 434.738 1690.9 438.816 1692.84 441.906 c
1694.77 444.996 1698.85 445.938 1701.94 444.008 c
1705.03 442.078 1705.97 437.996 1704.04 434.906 c
1702.11 431.816 1698.03 430.879 1694.94 432.809 c
f*
1746.56 492.426 m
1743.46 494.355 1742.54 498.438 1744.46 501.527 c
1746.39 504.617 1750.47 505.555 1753.56 503.625 c
1756.65 501.695 1757.59 497.617 1755.66 494.527 c
1753.73 491.426 1749.65 490.496 1746.56 492.426 c
f*
1728.25 517.27 m
1722.83 520.648 1721.19 527.781 1724.57 533.199 c
1727.95 538.609 1735.08 540.262 1740.5 536.871 c
1745.91 533.488 1747.56 526.359 1744.17 520.949 c
1740.79 515.539 1733.66 513.891 1728.25 517.27 c
f*
1674.69 462.715 m
1671.59 464.645 1670.66 468.723 1672.59 471.813 c
1674.52 474.902 1678.6 475.844 1681.69 473.914 c
1684.78 471.984 1685.72 467.902 1683.79 464.813 c
1681.86 461.723 1677.78 460.785 1674.69 462.715 c
f*
1669.74 531.289 m
1666.65 533.219 1665.71 537.297 1667.64 540.387 c
1669.57 543.477 1673.65 544.418 1676.74 542.488 c
1679.83 540.559 1680.78 536.488 1678.84 533.387 c
1676.91 530.297 1672.84 529.359 1669.74 531.289 c
f*
1700.7 555.902 m
1703.79 553.973 1704.73 549.891 1702.8 546.801 c
1700.87 543.703 1696.79 542.773 1693.7 544.703 c
1690.61 546.633 1689.66 550.703 1691.6 553.801 c
1693.53 556.891 1697.6 557.832 1700.7 555.902 c
f*
1662.7 498.027 m
1659.6 499.957 1658.67 504.035 1660.6 507.125 c
1662.53 510.215 1666.61 511.156 1669.7 509.227 c
1672.79 507.297 1673.73 503.227 1671.8 500.125 c
1669.87 497.035 1665.79 496.098 1662.7 498.027 c
f*
1663.43 422.711 m
1658.79 425.609 1657.38 431.719 1660.27 436.359 c
1663.18 441 1669.29 442.41 1673.93 439.508 c
1678.57 436.609 1679.98 430.5 1677.07 425.859 c
1674.18 421.219 1668.07 419.809 1663.43 422.711 c
f*
1729.79 456.566 m
1725.15 459.465 1723.74 465.574 1726.64 470.215 c
1729.54 474.855 1735.65 476.266 1740.29 473.367 c
1744.93 470.465 1746.34 464.355 1743.44 459.715 c
1740.54 455.074 1734.43 453.668 1729.79 456.566 c
f*
1704.42 328.395 m
1696.69 333.223 1694.32 343.402 1699.17 351.145 c
1704 358.871 1714.18 361.223 1721.92 356.395 c
1729.64 351.563 1732 341.371 1727.17 333.645 c
1722.34 325.914 1712.14 323.563 1704.42 328.395 c
f*
1682.25 356.082 m
1677.61 358.984 1676.2 365.094 1679.1 369.734 c
1682 374.371 1688.11 375.781 1692.75 372.883 c
1697.39 369.984 1698.8 363.871 1695.9 359.234 c
1693 354.594 1686.89 353.184 1682.25 356.082 c
f*
1746.73 285.352 m
1742.86 287.77 1741.68 292.859 1744.11 296.723 c
1746.52 300.59 1751.61 301.77 1755.48 299.352 c
1759.34 296.941 1760.52 291.84 1758.11 287.98 c
1755.68 284.109 1750.59 282.93 1746.73 285.352 c
f*
1694.96 294.23 m
1691.88 296.16 1690.93 300.242 1692.86 303.332 c
1694.79 306.422 1698.88 307.363 1701.96 305.434 c
1705.05 303.504 1706 299.434 1704.06 296.332 c
1702.13 293.242 1698.06 292.301 1694.96 294.23 c
f*
1747.83 343.711 m
1744.73 345.641 1743.8 349.719 1745.73 352.809 c
1747.66 355.898 1751.74 356.84 1754.83 354.91 c
1757.92 352.98 1758.86 348.91 1756.93 345.809 c
1755 342.719 1750.92 341.781 1747.83 343.711 c
f*
1729.51 368.559 m
1724.09 371.938 1722.45 379.07 1725.83 384.48 c
1729.21 389.898 1736.35 391.539 1741.76 388.16 c
1747.17 384.777 1748.82 377.648 1745.43 372.238 c
1742.05 366.82 1734.92 365.18 1729.51 368.559 c
f*
1731.54 270.191 m
1728.45 272.121 1727.5 276.199 1729.43 279.289 c
1731.36 282.379 1735.45 283.32 1738.54 281.391 c
1741.63 279.461 1742.57 275.391 1740.64 272.289 c
1738.71 269.199 1734.64 268.262 1731.54 270.191 c
f*
1671.01 382.57 m
1667.92 384.504 1666.98 388.582 1668.91 391.672 c
1670.84 394.762 1674.92 395.703 1678.01 393.773 c
1681.1 391.844 1682.05 387.773 1680.11 384.672 c
1678.18 381.582 1674.11 380.641 1671.01 382.57 c
f*
1701.96 407.188 m
1705.05 405.258 1706 401.176 1704.07 398.086 c
1702.14 394.996 1698.05 394.059 1694.96 395.988 c
1691.88 397.918 1690.93 401.988 1692.86 405.086 c
1694.8 408.176 1698.86 409.117 1701.96 407.188 c
f*
1663.96 349.316 m
1660.87 351.246 1659.93 355.324 1661.86 358.414 c
1663.79 361.504 1667.87 362.445 1670.96 360.516 c
1674.05 358.586 1675 354.504 1673.06 351.414 c
1671.13 348.324 1667.06 347.387 1663.96 349.316 c
f*
1664.7 273.992 m
1660.05 276.895 1658.64 283.004 1661.54 287.645 c
1664.45 292.281 1670.54 293.691 1675.2 290.793 c
1679.84 287.902 1681.25 281.781 1678.34 277.145 c
1675.45 272.512 1669.34 271.094 1664.7 273.992 c
f*
1731.05 307.852 m
1726.41 310.75 1725 316.859 1727.9 321.5 c
1730.8 326.141 1736.91 327.551 1741.55 324.652 c
1746.19 321.762 1747.6 315.641 1744.7 311 c
1741.8 306.371 1735.69 304.949 1731.05 307.852 c
f*
1192.06 284.438 m
1199.79 279.609 1202.14 269.418 1197.31 261.688 c
1192.48 253.957 1182.29 251.598 1174.56 256.438 c
1166.83 261.27 1164.48 271.449 1169.31 279.188 c
1174.14 286.918 1184.33 289.27 1192.06 284.438 c
f*
1214.23 256.742 m
1218.87 253.844 1220.28 247.73 1217.38 243.094 c
1214.48 238.453 1208.37 237.043 1203.73 239.941 c
1199.09 242.844 1197.68 248.953 1200.58 253.594 c
1203.48 258.23 1209.59 259.641 1214.23 256.742 c
f*
1149.75 327.48 m
1153.62 325.059 1154.79 319.969 1152.38 316.102 c
1149.96 312.238 1144.87 311.059 1141 313.48 c
1137.14 315.891 1135.96 320.988 1138.38 324.852 c
1140.79 328.719 1145.88 329.891 1149.75 327.48 c
f*
1200.27 328.734 m
1203.36 326.805 1204.3 322.723 1202.38 319.633 c
1200.45 316.543 1196.36 315.605 1193.27 317.535 c
1190.18 319.465 1189.23 323.543 1191.18 326.633 c
1193.11 329.734 1197.18 330.664 1200.27 328.734 c
f*
1148.65 269.113 m
1151.74 267.184 1152.68 263.105 1150.75 260.016 c
1148.82 256.926 1144.74 255.984 1141.65 257.914 c
1138.56 259.844 1137.61 263.926 1139.55 267.016 c
1141.48 270.113 1145.55 271.047 1148.65 269.113 c
f*
1166.96 244.273 m
1172.39 240.891 1174.02 233.762 1170.64 228.344 c
1167.25 222.934 1160.13 221.281 1154.71 224.672 c
1149.3 228.051 1147.66 235.184 1151.04 240.594 c
1154.43 246.004 1161.55 247.652 1166.96 244.273 c
f*
1220.52 298.828 m
1223.61 296.898 1224.55 292.816 1222.63 289.727 c
1220.7 286.637 1216.61 285.695 1213.52 287.629 c
1210.43 289.559 1209.48 293.637 1211.43 296.727 c
1213.36 299.828 1217.43 300.758 1220.52 298.828 c
f*
1225.46 230.254 m
1228.57 228.324 1229.5 224.242 1227.57 221.152 c
1225.64 218.063 1221.55 217.121 1218.46 219.055 c
1215.38 220.984 1214.44 225.055 1216.37 228.152 c
1218.3 231.242 1222.38 232.184 1225.46 230.254 c
f*
1194.52 205.641 m
1191.43 207.57 1190.48 211.648 1192.41 214.738 c
1194.34 217.84 1198.43 218.77 1201.52 216.84 c
1204.61 214.91 1205.55 210.84 1203.61 207.738 c
1201.68 204.648 1197.61 203.711 1194.52 205.641 c
f*
1232.52 263.516 m
1235.61 261.586 1236.55 257.504 1234.62 254.414 c
1232.69 251.324 1228.61 250.387 1225.52 252.316 c
1222.43 254.246 1221.48 258.316 1223.42 261.414 c
1225.35 264.504 1229.42 265.445 1232.52 263.516 c
f*
1231.79 338.832 m
1236.43 335.934 1237.84 329.82 1234.93 325.184 c
1232.04 320.543 1225.93 319.133 1221.29 322.031 c
1216.64 324.934 1215.23 331.043 1218.13 335.684 c
1221.04 340.32 1227.14 341.73 1231.79 338.832 c
f*
1165.43 304.977 m
1170.07 302.074 1171.48 295.965 1168.58 291.324 c
1165.68 286.684 1159.57 285.273 1154.93 288.176 c
1150.29 291.074 1148.88 297.184 1151.78 301.824 c
1154.68 306.465 1160.79 307.875 1165.43 304.977 c
f*
1192.06 807.43 m
1199.79 802.602 1202.14 792.41 1197.31 784.68 c
1192.48 776.949 1182.29 774.59 1174.56 779.43 c
1166.83 784.262 1164.48 794.449 1169.31 802.18 c
1174.14 809.91 1184.33 812.262 1192.06 807.43 c
f*
1214.23 779.738 m
1218.87 776.84 1220.28 770.73 1217.38 766.09 c
1214.48 761.449 1208.37 760.039 1203.73 762.93 c
1199.09 765.828 1197.68 771.949 1200.58 776.59 c
1203.48 781.219 1209.59 782.641 1214.23 779.738 c
f*
1149.75 850.473 m
1153.62 848.055 1154.79 842.965 1152.38 839.094 c
1149.96 835.234 1144.87 834.055 1141 836.473 c
1137.14 838.883 1135.96 843.984 1138.38 847.844 c
1140.79 851.715 1145.88 852.895 1149.75 850.473 c
f*
1173.58 624.578 m
1176.68 622.648 1177.61 618.57 1175.68 615.48 c
1173.75 612.391 1169.67 611.449 1166.58 613.379 c
1163.49 615.309 1162.55 619.379 1164.48 622.48 c
1166.41 625.57 1170.49 626.508 1173.58 624.578 c
f*
1148.65 792.113 m
1151.74 790.184 1152.68 786.102 1150.75 783.012 c
1148.82 779.914 1144.74 778.984 1141.65 780.914 c
1138.56 782.844 1137.61 786.914 1139.55 790.012 c
1141.48 793.102 1145.55 794.043 1148.65 792.113 c
f*
1166.96 767.266 m
1172.39 763.887 1174.02 756.754 1170.64 751.336 c
1167.25 745.926 1160.13 744.285 1154.71 747.664 c
1149.3 751.047 1147.66 758.176 1151.04 763.586 c
1154.43 768.996 1161.55 770.645 1166.96 767.266 c
f*
1220.52 821.824 m
1223.61 819.895 1224.55 815.816 1222.63 812.727 c
1220.7 809.625 1216.61 808.695 1213.52 810.625 c
1210.43 812.555 1209.48 816.625 1211.43 819.727 c
1213.36 822.816 1217.43 823.754 1220.52 821.824 c
f*
1199.58 606.523 m
1202.67 604.594 1203.61 600.512 1201.68 597.422 c
1199.75 594.332 1195.67 593.395 1192.58 595.324 c
1189.49 597.254 1188.54 601.332 1190.48 604.422 c
1192.41 607.512 1196.48 608.453 1199.58 606.523 c
f*
1232.52 786.508 m
1235.61 784.578 1236.55 780.5 1234.62 777.406 c
1232.69 774.316 1228.61 773.379 1225.52 775.309 c
1222.43 777.238 1221.48 781.309 1223.42 784.406 c
1225.35 787.5 1229.42 788.438 1232.52 786.508 c
f*
1231.79 861.824 m
1236.43 858.926 1237.84 852.816 1234.93 848.176 c
1232.04 843.535 1225.93 842.125 1221.29 845.023 c
1216.64 847.926 1215.23 854.035 1218.13 858.676 c
1221.04 863.316 1227.14 864.727 1231.79 861.824 c
f*
1165.43 827.969 m
1170.07 825.066 1171.48 818.957 1168.58 814.316 c
1165.68 809.68 1159.57 808.27 1154.93 811.168 c
1150.29 814.066 1148.88 820.18 1151.78 824.816 c
1154.68 829.457 1160.79 830.867 1165.43 827.969 c
f*
1714.98 284.438 m
1722.71 279.609 1725.06 269.418 1720.23 261.688 c
1715.4 253.957 1705.21 251.598 1697.48 256.438 c
1689.75 261.27 1687.4 271.449 1692.23 279.188 c
1697.06 286.918 1707.25 289.27 1714.98 284.438 c
f*
1737.14 256.742 m
1741.79 253.844 1743.2 247.73 1740.3 243.094 c
1737.39 238.453 1731.29 237.043 1726.64 239.941 c
1722 242.844 1720.59 248.953 1723.5 253.594 c
1726.39 258.23 1732.5 259.641 1737.14 256.742 c
f*
1672.66 327.48 m
1676.53 325.059 1677.7 319.969 1675.29 316.102 c
1672.87 312.238 1667.78 311.059 1663.91 313.48 c
1660.05 315.891 1658.87 320.988 1661.29 324.852 c
1663.7 328.719 1668.79 329.891 1672.66 327.48 c
f*
1720.76 315.246 m
1723.85 313.316 1724.79 309.238 1722.86 306.148 c
1720.93 303.059 1716.85 302.117 1713.76 304.047 c
1710.67 305.977 1709.72 310.059 1711.66 313.148 c
1713.59 316.238 1717.66 317.18 1720.76 315.246 c
f*
1671.56 269.113 m
1674.65 267.184 1675.59 263.105 1673.66 260.016 c
1671.73 256.926 1667.65 255.984 1664.56 257.914 c
1661.47 259.844 1660.52 263.926 1662.46 267.016 c
1664.39 270.113 1668.46 271.047 1671.56 269.113 c
f*
1678.32 221.043 m
1683.73 217.664 1685.38 210.535 1682 205.113 c
1678.61 199.703 1671.48 198.055 1666.07 201.445 c
1660.66 204.824 1659.01 211.953 1662.39 217.363 c
1665.78 222.773 1672.9 224.426 1678.32 221.043 c
f*
1748.38 230.254 m
1751.48 228.324 1752.41 224.242 1750.48 221.152 c
1748.55 218.063 1744.47 217.121 1741.38 219.055 c
1738.29 220.984 1737.35 225.055 1739.28 228.152 c
1741.21 231.242 1745.29 232.184 1748.38 230.254 c
f*
1717.43 205.641 m
1714.34 207.57 1713.4 211.648 1715.33 214.738 c
1717.26 217.84 1721.34 218.77 1724.43 216.84 c
1727.52 214.91 1728.47 210.84 1726.53 207.738 c
1724.6 204.648 1720.52 203.711 1717.43 205.641 c
f*
1755.43 263.516 m
1758.52 261.586 1759.46 257.504 1757.53 254.414 c
1755.6 251.324 1751.52 250.387 1748.43 252.316 c
1745.34 254.246 1744.39 258.316 1746.33 261.414 c
1748.26 264.504 1752.33 265.445 1755.43 263.516 c
f*
1737.14 429.605 m
1741.79 426.703 1743.2 420.594 1740.3 415.953 c
1737.39 411.313 1731.29 409.902 1726.64 412.805 c
1722 415.703 1720.59 421.813 1723.5 426.453 c
1726.39 431.094 1732.5 432.504 1737.14 429.605 c
f*
1712.6 242.871 m
1717.24 239.969 1718.65 233.859 1715.75 229.219 c
1712.85 224.578 1706.74 223.172 1702.1 226.07 c
1697.46 228.969 1696.05 235.078 1698.95 239.719 c
1701.85 244.359 1707.96 245.77 1712.6 242.871 c
f*
1741.01 891.891 m
1745.65 888.988 1747.06 882.879 1744.16 878.238 c
1741.26 873.598 1735.15 872.188 1730.51 875.09 c
1725.87 877.988 1724.46 884.098 1727.36 888.738 c
1730.26 893.379 1736.37 894.789 1741.01 891.891 c
f*
1676.52 962.621 m
1680.39 960.199 1681.57 955.109 1679.16 951.242 c
1676.73 947.383 1671.64 946.199 1667.77 948.621 c
1663.91 951.031 1662.73 956.133 1665.16 959.992 c
1667.57 963.859 1672.66 965.039 1676.52 962.621 c
f*
1675.43 904.262 m
1678.53 902.332 1679.46 898.254 1677.53 895.16 c
1675.6 892.07 1671.52 891.133 1668.43 893.063 c
1665.34 894.992 1664.39 899.063 1666.32 902.16 c
1668.26 905.254 1672.34 906.191 1675.43 904.262 c
f*
1693.74 879.414 m
1699.16 876.031 1700.8 868.902 1697.42 863.492 c
1694.03 858.074 1686.9 856.434 1681.49 859.813 c
1676.08 863.191 1674.43 870.324 1677.82 875.734 c
1681.2 881.152 1688.33 882.793 1693.74 879.414 c
f*
1747.3 933.973 m
1750.4 932.043 1751.33 927.965 1749.4 924.875 c
1747.47 921.785 1743.39 920.844 1740.3 922.773 c
1737.21 924.703 1736.27 928.773 1738.2 931.875 c
1740.13 934.965 1744.21 935.902 1747.3 933.973 c
f*
1752.25 865.398 m
1755.34 863.469 1756.28 859.391 1754.35 856.301 c
1752.42 853.199 1748.34 852.27 1745.25 854.199 c
1742.16 856.129 1741.21 860.199 1743.15 863.301 c
1745.08 866.391 1749.15 867.328 1752.25 865.398 c
f*
1727.9 840.785 m
1724.8 842.715 1723.87 846.797 1725.8 849.887 c
1727.73 852.977 1731.81 853.914 1734.9 851.984 c
1737.99 850.055 1738.93 845.984 1737 842.887 c
1735.07 839.797 1730.99 838.855 1727.9 840.785 c
f*
1749.17 828.328 m
1752.26 826.398 1753.2 822.32 1751.27 819.23 c
1749.34 816.141 1745.26 815.199 1742.17 817.129 c
1739.08 819.059 1738.13 823.141 1740.07 826.23 c
1742 829.328 1746.07 830.258 1749.17 828.328 c
f*
1692.2 940.117 m
1696.84 937.215 1698.25 931.105 1695.36 926.465 c
1692.45 921.824 1686.34 920.414 1681.7 923.316 c
1677.06 926.215 1675.65 932.324 1678.55 936.965 c
1681.45 941.605 1687.56 943.016 1692.2 940.117 c
f*
1159.84 409.105 m
1164.48 406.207 1165.89 400.098 1162.98 395.457 c
1160.09 390.816 1153.98 389.406 1149.34 392.305 c
1144.7 395.207 1143.29 401.316 1146.19 405.957 c
1149.09 410.598 1155.2 412.008 1159.84 409.105 c
f*
q
3301.79 620.609 m
3301.79 730.609 l
h
W n
0 0 0 1 K
0 0 0 1 k
Q
q
3338.17 438.109 350 90 re W n
0 0 0 1 K
0 0 0 1 k
3362.41 499.887 m
3376.52 499.887 l
3376.52 502.809 l
3362.41 502.809 l
3362.41 521.188 l
3360.01 521.188 l
3359.74 512.938 3356.81 502.547 3346.96 502.016 c
3346.96 499.887 l
3355.49 499.887 l
3355.49 472.457 l
3355.49 460.207 3364.8 459.148 3368.26 459.148 c
3375.46 459.148 3378.11 466.066 3378.11 472.457 c
3378.11 478.047 l
3375.72 478.047 l
3375.72 472.727 l
3375.72 465.266 3372.79 461.547 3369.06 461.547 c
3362.41 461.547 3362.41 470.598 3362.41 472.188 c
3362.41 499.887 l
f
3430.04 481.242 m
3430.04 494.023 3419.92 504.676 3407.94 504.676 c
3395.69 504.676 3385.84 493.754 3385.84 481.242 c
3385.84 468.465 3396.21 459.145 3407.94 459.145 c
3419.92 459.145 3430.04 468.734 3430.04 481.242 c
3407.94 461.543 m
3403.68 461.543 3399.42 463.676 3396.76 468.195 c
3394.09 472.465 3394.09 478.586 3394.09 482.043 c
3394.09 486.035 3394.09 491.363 3396.5 495.895 c
3399.14 500.414 3403.95 502.543 3407.94 502.543 c
3412.2 502.543 3416.46 500.152 3419.12 495.895 c
3421.79 491.633 3421.79 486.035 3421.79 482.043 c
3421.79 478.586 3421.79 473.254 3419.66 468.734 c
3417.27 464.473 3413 461.543 3407.94 461.543 c
f
3450.28 497.488 m
3450.28 504.148 l
3435.9 502.809 l
3435.9 499.891 l
3443.08 499.891 3443.62 499.348 3443.62 494.82 c
3443.62 448.5 l
3443.62 443.969 3442.56 443.969 3435.9 443.969 c
3435.9 440.77 l
3439.36 441.039 3444.42 441.039 3447.08 441.039 c
3449.74 441.039 3454.8 441.039 3458.27 440.77 c
3458.27 443.969 l
3451.61 443.969 3450.54 443.969 3450.54 448.5 c
3450.54 466.07 l
3451.07 464.469 3455.34 459.148 3462.79 459.148 c
3474.51 459.148 3484.89 468.73 3484.89 481.508 c
3484.89 494.289 3475.31 504.148 3464.12 504.148 c
3456.4 504.148 3452.14 499.617 3450.28 497.488 c
3450.54 471.398 m
3450.54 493.5 l
3453.47 498.551 3458.27 501.48 3463.33 501.48 c
3470.51 501.48 3476.64 492.699 3476.64 481.508 c
3476.64 469.527 3469.71 461.27 3462.26 461.27 c
3458.53 461.27 3454.54 463.141 3451.87 467.129 c
3450.54 469.258 3450.54 469.527 3450.54 471.398 c
f
3527.5 493.227 m
3528.3 495.355 3530.17 499.617 3536.55 499.887 c
3536.55 502.809 l
3534.42 502.809 3531.49 502.547 3529.09 502.547 c
3526.7 502.547 3522.18 502.809 3520.58 502.809 c
3520.58 499.887 l
3524.31 499.617 3525.37 497.488 3525.37 495.629 c
3525.37 494.559 3525.1 494.285 3524.83 493.227 c
3514.45 467.938 l
3503.54 495.629 l
3502.73 496.957 3502.73 496.957 3502.73 497.219 c
3502.73 499.887 3506.73 499.887 3508.59 499.887 c
3508.59 502.809 l
3505.66 502.809 3500.07 502.547 3497.68 502.547 c
3495.01 502.547 3491.02 502.809 3488.09 502.809 c
3488.09 499.887 l
3494.22 499.887 3494.75 499.348 3496.07 496.156 c
3510.2 461.008 l
3510.99 459.418 3510.99 459.148 3512.32 459.148 c
3513.65 459.148 3514.19 459.945 3514.45 461.008 c
3527.5 493.227 l
f
3555.72 504.145 m
3541.87 502.816 l
3541.87 499.887 l
3548.27 499.887 3549.33 499.355 3549.33 494.297 c
3549.33 467.664 l
3549.33 463.137 3548 463.137 3541.35 463.137 c
3541.35 460.203 l
3544.54 460.203 3550.13 460.477 3552.26 460.477 c
3555.98 460.477 3559.45 460.203 3562.64 460.203 c
3562.64 463.137 l
3556.26 463.137 3555.72 463.676 3555.72 467.664 c
h
3556.26 521.184 m
3556.26 524.387 3553.59 526.516 3550.93 526.516 c
3547.73 526.516 3545.6 523.844 3545.6 521.184 c
3545.6 518.523 3547.73 516.125 3550.93 516.125 c
3553.59 516.125 3556.26 518.254 3556.26 521.184 c
f
3577.29 485.238 m
3577.82 499.887 3586.34 502.547 3589.54 502.547 c
3599.92 502.547 3600.72 488.969 3600.72 485.238 c
h
3577.29 483.109 m
3604.98 483.109 l
3607.11 483.109 3607.38 483.109 3607.38 485.238 c
3607.38 495.09 3602.05 504.68 3589.54 504.68 c
3578.08 504.68 3569.03 494.289 3569.03 482.047 c
3569.03 468.727 3579.42 459.148 3590.86 459.148 c
3602.85 459.148 3607.38 470.059 3607.38 471.93 c
3607.38 472.988 3606.58 473.258 3606.05 473.258 c
3605.25 473.258 3604.98 472.457 3604.71 471.656 c
3601.25 461.539 3592.47 461.539 3591.4 461.539 c
3586.34 461.539 3582.35 464.469 3580.22 468.199 c
3577.29 472.988 3577.29 479.387 3577.29 483.109 c
f
3671.55 493.496 m
3673.42 498.555 3676.61 499.613 3680.08 499.887 c
3680.08 502.816 l
3677.94 502.816 3675.02 502.547 3672.88 502.547 c
3669.95 502.547 3665.43 502.816 3663.56 502.816 c
3663.56 499.887 l
3667.03 499.613 3669.16 498.023 3669.16 495.094 c
3669.16 494.555 3669.16 494.297 3668.88 492.965 c
3659.83 467.664 l
3649.98 495.355 l
3649.45 496.426 3649.45 496.684 3649.45 497.227 c
3649.45 499.887 3653.18 499.887 3655.31 499.887 c
3655.31 502.816 l
3652.38 502.816 3647.32 502.547 3644.92 502.547 c
3641.99 502.547 3639.07 502.816 3636.14 502.816 c
3636.14 499.887 l
3639.86 499.887 3641.46 499.613 3642.26 498.285 c
3642.79 497.754 3643.85 494.824 3644.66 492.965 c
3636.14 468.727 l
3626.55 495.355 l
3626.29 496.684 3626.29 496.684 3626.29 497.227 c
3626.29 499.887 3630.01 499.887 3632.15 499.887 c
3632.15 502.816 l
3628.94 502.816 3623.36 502.547 3621.23 502.547 c
3620.69 502.547 3615.63 502.816 3611.9 502.816 c
3611.9 499.887 l
3616.96 499.887 3618.02 499.613 3619.36 496.426 c
3631.87 461.273 l
3632.41 459.945 3632.67 459.145 3634 459.145 c
3635.34 459.145 3635.34 459.676 3635.87 461.004 c
3645.98 489.234 l
3656.11 461.004 l
3656.37 459.945 3656.64 459.145 3657.97 459.145 c
3659.3 459.145 3659.57 459.945 3660.1 461.004 c
3671.55 493.496 l
f
Q
q
912.859 921.781 130.012 80 re W n
0 0 0 1 K
0 0 0 1 k
957.332 948.145 m
957.332 963.855 948.012 968.645 940.551 968.645 c
926.973 968.645 913.93 954.535 913.93 940.426 c
913.93 931.375 919.781 923.645 929.902 923.645 c
936.293 923.645 943.48 926.043 950.941 931.902 c
952.27 926.844 955.461 923.645 959.992 923.645 c
965.32 923.645 968.242 929.234 968.242 930.844 c
968.242 931.375 967.711 931.633 967.18 931.633 c
966.383 931.633 966.109 931.375 965.852 930.844 c
963.992 925.773 960.52 925.773 960.25 925.773 c
957.332 925.773 957.332 933.504 957.332 935.895 c
957.332 938.023 957.332 938.293 958.133 939.363 c
967.449 951.074 969.582 962.793 y
969.582 963.055 969.582 963.855 968.512 963.855 c
967.449 963.855 967.449 963.586 966.91 961.723 c
965.32 955.605 961.859 947.883 957.332 942.023 c
h
950.672 934.563 m
941.891 926.844 934.16 925.773 930.172 925.773 c
924.313 925.773 921.383 930.305 921.383 936.695 c
921.383 941.484 923.781 952.402 926.973 957.465 c
931.762 964.652 937.09 966.516 940.551 966.516 c
950.41 966.516 950.41 953.473 950.41 945.742 c
950.41 942.023 950.41 936.434 950.672 934.563 c
f
1011.11 984.891 m
1011.91 988.352 1012.18 989.422 1021.5 989.422 c
1024.43 989.422 1025.23 989.422 1025.23 991.551 c
1025.23 992.613 1024.16 992.613 1023.63 992.613 c
1020.43 992.613 1012.18 992.352 1008.98 992.352 c
1006.05 992.352 998.863 992.613 995.934 992.613 c
995.137 992.613 993.816 992.613 993.816 990.754 c
993.816 989.422 994.875 989.422 996.746 989.422 c
1000.46 989.422 l
1002.34 989.152 1003.13 989.152 1003.13 987.82 c
1003.13 987.293 1003.13 987.023 1002.86 985.953 c
989.547 932.434 l
988.484 928.703 988.215 927.91 980.496 927.91 c
978.625 927.91 977.836 927.91 977.836 925.773 c
977.836 924.711 978.625 924.711 980.496 924.711 c
1026.3 924.711 l
1028.68 924.711 1028.96 924.711 1029.48 926.57 c
1037.21 947.883 l
1037.75 948.941 1037.75 949.211 y
1037.75 949.742 1037.48 950.543 1036.68 950.543 c
1035.61 950.543 1035.61 950.012 1034.82 948.41 c
1031.36 939.094 1027.09 927.91 1010.05 927.91 c
1000.46 927.91 l
998.336 927.91 l
997.535 928.172 997.004 928.172 997.004 928.973 c
997.004 929.242 997.004 929.504 997.535 931.371 c
1011.11 984.891 l
f
Q
q
12.9609 618.98 69.9883 80 re W n
0 0 0 1 K
0 0 0 1 k
47.0391 682.086 m
48.0977 685.543 48.3672 686.613 57.6875 686.613 c
60.6172 686.613 61.418 686.613 61.418 688.742 c
61.418 689.805 60.3594 689.805 59.8164 689.805 c
56.6172 689.805 48.3672 689.543 45.168 689.543 c
42.2461 689.543 34.7891 689.805 31.8594 689.805 c
31.3281 689.805 29.9961 689.805 29.9961 687.945 c
29.9961 686.613 30.7891 686.613 32.9297 686.613 c
36.6484 686.613 l
38.2461 686.344 39.3164 686.344 39.3164 685.016 c
39.3164 684.484 39.0469 684.215 38.7773 683.152 c
25.4688 629.625 l
24.668 625.902 24.4063 625.105 16.418 625.105 c
14.8164 625.105 13.7461 625.105 13.7461 622.973 c
13.7461 621.902 14.8164 621.902 16.418 621.902 c
62.4766 621.902 l
64.8789 621.902 64.8789 621.902 65.6797 623.773 c
73.3984 645.074 l
73.9297 646.133 73.9297 646.402 y
73.9297 646.934 73.668 647.734 72.5977 647.734 c
71.8086 647.734 71.5391 647.203 70.9961 645.605 c
67.5391 636.285 63.2891 625.105 45.9766 625.105 c
36.6484 625.105 l
34.5273 625.105 l
33.457 625.375 33.1875 625.375 33.1875 626.164 c
33.1875 626.434 33.1875 626.703 33.7188 628.563 c
47.0391 682.086 l
f
Q
0 0 0 1 K
0 0 0 1 k
3139 247.148 m
3137.66 247.148 3136.87 245.816 3136.33 245.02 c
3131.28 237.566 3127.54 225.848 3127.54 216.789 c
3127.54 209.867 3129.67 202.406 3137.94 202.406 c
3144.86 202.406 3149.64 207.477 3153.11 212.797 c
3154.18 207.207 3157.91 202.406 3164.03 202.406 c
3172.02 202.406 3176.54 208.539 3180.27 215.988 c
3182.66 220.789 3186.39 234.367 3186.39 240.488 c
3186.39 245.02 3184.53 247.406 3182.4 247.406 c
3179.73 247.406 3177.08 245.02 3177.08 242.887 c
3177.08 241.816 3177.6 240.758 3178.67 239.957 c
3180.27 238.359 3182.13 235.699 3182.13 231.438 c
3182.13 227.449 3180.27 221.848 3177.08 217.328 c
3174.15 213.066 3170.42 209.609 3165.89 209.609 c
3160.3 209.609 3157.11 213.328 3156.3 218.656 c
3157.37 221.059 3159.5 227.449 3159.5 230.367 c
3159.5 231.438 3158.97 232.508 3157.91 232.508 c
3157.11 232.508 3155.78 232.238 3154.98 230.898 c
3153.91 228.777 3152.85 222.379 3152.85 218.656 c
3149.64 214.129 3145.65 209.609 3139.26 209.609 c
3132.88 209.609 3130.74 215.469 3130.74 221.059 c
3130.74 233.566 3140.87 243.949 3140.87 245.277 c
3140.87 246.348 3140.06 247.148 3139 247.148 c
f
3211.69 199.484 m
3210.89 199.484 3210.63 199.215 3210.36 198.414 c
3208.77 192.824 3205.84 189.895 3202.91 189.895 c
3201.57 189.895 3201.3 190.695 3201.3 192.297 c
3201.3 193.887 3201.85 195.227 3202.37 196.816 c
3203.17 198.688 3203.7 200.547 3204.5 202.406 c
3205.3 204.008 3207.71 210.395 3207.96 211.465 c
3208.23 211.996 3208.5 212.797 3208.5 213.598 c
3208.5 216.785 3205.57 219.457 3201.85 219.457 c
3194.92 219.457 3191.71 210.137 3191.71 208.805 c
3191.71 208.008 3192.52 208.008 3192.79 208.008 c
3193.86 208.008 3193.86 208.266 3194.12 209.066 c
3195.98 215.195 3198.92 217.598 3201.57 217.598 c
3202.64 217.598 3203.44 217.055 3203.44 215.195 c
3203.44 213.598 3202.91 212.535 3201.05 208.008 c
3196.79 196.816 l
3196.51 196.016 3195.98 194.957 3195.98 193.887 c
3195.98 190.426 3198.92 187.766 3202.91 187.766 c
3209.82 187.766 3213.03 197.617 3213.03 198.688 c
3213.03 199.484 3211.96 199.484 3211.69 199.484 c
f
3211.16 232.504 m
3211.16 233.563 3210.36 235.164 3208.23 235.164 c
3206.37 235.164 3204.24 233.305 3204.24 231.445 c
3204.24 230.105 3205.3 228.773 3207.17 228.773 c
3209.29 228.773 3211.16 230.633 3211.16 232.504 c
f
q
560.25 607.262 79.9883 70 re W n
575.953 636.012 m
575.695 634.68 575.152 632.281 575.152 631.75 c
575.152 630.16 576.492 629.09 578.086 629.09 c
579.152 629.09 581.016 629.891 581.555 632.02 c
581.813 632.281 585.273 645.859 585.543 647.73 c
586.344 650.922 588.203 657.852 588.734 660.512 c
589.273 661.84 591.934 666.641 594.324 668.762 c
595.125 669.301 598.055 671.961 602.313 671.961 c
604.984 671.961 606.313 670.891 606.586 670.891 c
603.383 670.359 601.254 667.961 601.254 665.301 c
601.254 663.711 602.313 661.84 604.984 661.84 c
607.902 661.84 610.574 664.238 610.574 667.699 c
610.574 671.16 607.375 674.09 602.313 674.09 c
595.926 674.09 591.395 669.301 589.535 666.641 c
588.734 670.891 585.273 674.09 580.484 674.09 c
575.953 674.09 574.094 670.359 573.293 668.5 c
571.426 665.031 570.105 659.18 570.105 658.91 c
570.105 657.852 571.164 657.852 571.426 657.852 c
572.223 657.852 572.492 657.852 573.035 660.238 c
574.625 667.172 576.754 671.961 580.215 671.961 c
582.086 671.961 583.414 671.16 583.414 667.43 c
583.414 665.301 583.145 664.238 581.813 659.18 c
575.953 636.012 l
f
635.07 659.18 m
635.07 660.238 634.27 661.84 632.141 661.84 c
630.281 661.84 628.148 659.98 628.148 658.117 c
628.148 656.777 629.211 655.449 631.078 655.449 c
633.199 655.449 635.07 657.309 635.07 659.18 c
620.691 623.5 m
620.422 622.699 620.16 621.641 620.16 620.57 c
620.16 617.098 622.82 614.438 626.809 614.438 c
633.738 614.438 636.941 624.301 636.941 625.359 c
636.941 626.16 635.871 626.16 635.602 626.16 c
634.801 626.16 634.539 625.891 634.27 625.09 c
632.672 619.5 629.738 616.57 626.809 616.57 c
625.488 616.57 625.219 617.367 625.219 618.969 c
625.219 620.57 625.75 621.898 626.281 623.5 c
627.078 625.359 627.879 627.23 628.68 629.09 c
629.211 630.688 631.609 637.078 631.871 638.141 c
632.141 638.68 632.398 639.469 632.398 640.27 c
632.398 643.469 629.48 646.129 625.75 646.129 c
618.82 646.129 615.629 636.809 615.629 635.48 c
615.629 634.68 616.43 634.68 616.699 634.68 c
617.762 634.68 617.762 634.949 618.031 635.75 c
619.891 641.867 622.82 644.27 625.488 644.27 c
626.551 644.27 627.352 643.738 627.352 641.867 c
627.352 640.27 626.809 639.211 625.219 634.68 c
620.691 623.5 l
f
Q
10 w
661.309 592.617 m
539.18 592.617 l
S
704.395 592.68 m
646.445 569 l
660.195 592.68 l
646.445 616.359 l
f
515.5 592.578 m
573.449 568.898 l
559.691 592.578 l
573.449 616.258 l
f
769.383 705.641 m
544.473 705.641 l
S
812.645 705.703 m
754.453 681.934 l
768.262 705.703 l
754.453 729.473 l
f
q
595.238 715.121 90 70 re W n
610.953 743.883 m
610.695 742.551 610.152 740.152 610.152 739.621 c
610.152 738.02 611.492 736.961 613.086 736.961 c
614.152 736.961 616.016 737.75 616.555 739.891 c
616.813 740.152 620.273 753.73 620.543 755.59 c
621.344 758.789 623.203 765.711 623.734 768.383 c
624.273 769.711 626.934 774.5 629.324 776.633 c
630.125 777.16 633.055 779.832 637.313 779.832 c
639.984 779.832 641.313 778.762 641.586 778.762 c
638.383 778.23 636.254 775.832 636.254 773.172 c
636.254 771.57 637.313 769.711 639.984 769.711 c
642.902 769.711 645.574 772.102 645.574 775.563 c
645.574 779.031 642.375 781.961 637.313 781.961 c
630.926 781.961 626.395 777.16 624.535 774.5 c
623.734 778.762 620.273 781.961 615.484 781.961 c
610.953 781.961 609.094 778.23 608.293 776.371 c
606.426 772.902 605.105 767.039 605.105 766.781 c
605.105 765.711 606.164 765.711 606.426 765.711 c
607.223 765.711 607.492 765.711 608.035 768.109 c
609.625 775.031 611.754 779.832 615.215 779.832 c
617.086 779.832 618.414 779.031 618.414 775.301 c
618.414 773.172 618.145 772.102 616.813 767.039 c
610.953 743.883 l
f
684.449 741.746 m
684.449 749.738 678.852 753.996 671.941 753.996 c
661.551 753.996 651.699 744.418 651.699 734.828 c
651.699 727.637 656.75 722.316 664.48 722.316 c
674.328 722.316 684.449 731.629 684.449 741.746 c
664.48 724.445 m
661.02 724.445 657.559 726.566 657.559 732.168 c
657.559 735.086 658.879 742.016 661.551 746.008 c
664.48 750.277 668.738 752.137 671.672 752.137 c
675.66 752.137 678.852 749.469 678.852 744.418 c
678.852 742.547 678.059 735.629 674.859 730.836 c
672.199 726.566 667.941 724.445 664.48 724.445 c
f
Q
516.148 705.703 m
574.098 682.023 l
560.34 705.703 l
574.098 729.383 l
f
q
371.199 1127.23 239.992 50 re W n
379.836 1152 m
379.836 1167.98 388.086 1172.23 393.145 1172.23 c
394.207 1172.23 400.336 1172.23 403.797 1168.51 c
399.805 1168.24 399.266 1165.32 399.266 1163.98 c
399.266 1161.32 400.875 1159.46 403.797 1159.46 c
406.465 1159.46 408.324 1161.05 408.324 1163.98 c
408.324 1170.91 400.875 1174.63 393.145 1174.63 c
380.637 1174.63 371.574 1163.98 371.574 1151.73 c
371.574 1138.95 381.438 1129.1 392.887 1129.1 c
406.195 1129.1 409.395 1141.08 409.395 1142.15 c
409.395 1142.95 408.324 1142.95 408.055 1142.95 c
407.258 1142.95 406.996 1142.68 406.727 1142.15 c
404.066 1132.83 397.406 1131.5 393.945 1131.5 c
388.617 1131.5 379.836 1136.02 379.836 1152 c
f
428.828 1163.18 m
428.828 1174.1 l
414.98 1173.03 l
414.98 1169.84 l
421.91 1169.84 422.699 1169.31 422.699 1164.51 c
422.699 1137.89 l
422.699 1133.36 421.641 1133.36 414.98 1133.36 c
414.98 1130.16 l
418.98 1130.43 423.5 1130.43 426.43 1130.43 c
430.16 1130.43 434.949 1130.43 438.949 1130.16 c
438.949 1133.36 l
436.82 1133.36 l
429.359 1133.36 429.359 1134.43 429.359 1137.89 c
429.359 1153.33 l
429.359 1163.18 433.359 1171.97 441.078 1171.97 c
442.141 1171.97 l
441.879 1171.7 439.738 1170.64 439.738 1167.97 c
439.738 1165.31 441.879 1163.71 444.012 1163.71 c
445.871 1163.71 448.262 1164.78 448.262 1167.97 c
448.262 1171.17 445.34 1174.1 441.078 1174.1 c
433.891 1174.1 430.16 1167.44 428.828 1163.18 c
f
498.059 1151.47 m
498.059 1164.25 487.938 1174.63 475.957 1174.63 c
463.707 1174.63 453.859 1163.98 453.859 1151.47 c
453.859 1138.69 464.246 1129.1 475.957 1129.1 c
487.938 1129.1 498.059 1138.96 498.059 1151.47 c
475.957 1131.5 m
471.699 1131.5 467.438 1133.63 464.777 1138.15 c
462.109 1142.68 462.109 1148.8 462.109 1152.27 c
462.109 1156.26 462.109 1161.59 464.508 1165.85 c
467.168 1170.38 471.969 1172.51 475.957 1172.51 c
480.219 1172.51 484.477 1170.38 487.137 1166.11 c
489.809 1161.86 489.809 1156 489.809 1152.27 c
489.809 1148.8 489.809 1143.21 487.668 1138.96 c
485.277 1134.43 481.02 1131.5 475.957 1131.5 c
f
521.762 1149.61 m
524.16 1149.07 532.141 1147.47 532.141 1140.29 c
532.141 1135.22 528.68 1131.23 520.961 1131.23 c
512.711 1131.23 508.98 1137.09 507.109 1145.34 c
506.852 1146.68 506.852 1147.2 505.781 1147.2 c
504.449 1147.2 504.449 1146.41 504.449 1144.54 c
504.449 1131.49 l
504.449 1129.9 504.449 1129.11 505.512 1129.11 c
506.051 1129.11 506.051 1129.38 508.18 1131.23 c
508.18 1131.49 510.039 1133.36 v
514.301 1129.38 518.828 1129.11 520.961 1129.11 c
532.41 1129.11 536.941 1135.75 536.941 1142.95 c
536.941 1148.27 534.012 1151.2 532.68 1152.27 c
529.48 1155.46 525.75 1156.27 521.488 1157.06 c
515.898 1158.13 509.25 1159.45 509.25 1165.31 c
509.25 1168.77 511.91 1172.77 520.43 1172.77 c
531.34 1172.77 531.879 1163.98 531.879 1160.79 c
532.141 1159.99 532.941 1159.99 533.211 1159.99 c
534.539 1159.99 534.539 1160.52 534.539 1162.38 c
534.539 1172.23 l
534.539 1174.11 534.539 1174.63 533.469 1174.63 c
532.941 1174.63 532.68 1174.63 531.34 1173.56 c
531.078 1173.04 530.012 1172.23 529.75 1171.97 c
526.02 1174.63 521.762 1174.63 520.43 1174.63 c
508.18 1174.63 504.449 1167.97 504.449 1162.38 c
504.449 1158.93 506.051 1156.27 508.711 1154.13 c
511.91 1151.47 514.84 1150.93 521.762 1149.61 c
f
560.898 1149.61 m
563.031 1149.07 571.289 1147.47 571.289 1140.29 c
571.289 1135.22 567.82 1131.23 559.84 1131.23 c
551.578 1131.23 548.121 1137.09 546.262 1145.34 c
545.719 1146.68 545.719 1147.2 544.66 1147.2 c
543.59 1147.2 543.59 1146.41 543.59 1144.54 c
543.59 1131.49 l
543.59 1129.9 543.59 1129.11 544.66 1129.11 c
545.191 1129.11 545.191 1129.38 547.051 1131.23 c
547.32 1131.23 547.32 1131.49 548.922 1133.36 c
553.441 1129.38 557.969 1129.11 559.84 1129.11 c
571.289 1129.11 576.078 1135.75 576.078 1142.95 c
576.078 1148.27 572.879 1151.2 571.82 1152.27 c
568.621 1155.46 564.629 1156.27 560.371 1157.06 c
554.781 1158.13 548.121 1159.45 548.121 1165.31 c
548.121 1168.77 550.781 1172.77 559.301 1172.77 c
570.219 1172.77 570.75 1163.98 571.02 1160.79 c
571.02 1159.99 572.078 1159.99 y
573.41 1159.99 573.41 1160.52 573.41 1162.38 c
573.41 1172.23 l
573.41 1174.11 573.41 1174.63 572.352 1174.63 c
571.82 1174.63 571.551 1174.63 570.48 1173.56 c
570.219 1173.04 569.16 1172.23 568.621 1171.97 c
564.891 1174.63 560.898 1174.63 559.301 1174.63 c
547.32 1174.63 543.59 1167.97 543.59 1162.38 c
543.59 1158.93 545.191 1156.27 547.852 1154.13 c
551.051 1151.47 553.711 1150.93 560.898 1149.61 c
f
580.34 1148.8 26.3594 5.85938 re
f
Q
q
191.199 1037.23 609.992 80 re W n
208.891 1059.61 m
211.02 1059.07 219.27 1057.47 219.27 1050.29 c
219.27 1045.22 215.809 1041.23 208.09 1041.23 c
199.57 1041.23 196.109 1047.09 194.238 1055.34 c
193.98 1056.68 193.711 1057.2 192.641 1057.2 c
191.578 1057.2 191.578 1056.41 191.578 1054.54 c
191.578 1041.49 l
191.578 1039.9 191.578 1039.11 192.641 1039.11 c
193.18 1039.11 193.18 1039.38 195.039 1041.23 c
195.309 1041.23 195.309 1041.49 197.168 1043.36 c
201.43 1039.38 205.961 1039.11 208.09 1039.11 c
219.27 1039.11 224.07 1045.75 224.07 1052.95 c
224.07 1058.27 220.867 1061.2 219.809 1062.27 c
216.609 1065.46 212.617 1066.27 208.359 1067.06 c
203.027 1068.13 196.379 1069.45 196.379 1075.31 c
196.379 1078.77 198.77 1082.77 207.289 1082.77 c
218.211 1082.77 218.738 1073.98 219.008 1070.79 c
219.008 1069.99 220.07 1069.99 y
221.398 1069.99 221.398 1070.52 221.398 1072.38 c
221.398 1082.23 l
221.398 1084.11 221.398 1084.63 220.34 1084.63 c
219.809 1084.63 219.809 1084.63 218.469 1083.56 c
218.211 1083.04 217.141 1082.23 216.609 1081.97 c
212.879 1084.63 208.891 1084.63 207.289 1084.63 c
195.309 1084.63 191.578 1077.97 191.578 1072.38 c
191.578 1068.93 193.18 1066.27 195.84 1064.13 c
199.039 1061.47 201.699 1060.93 208.891 1059.61 c
f
238.445 1065.2 m
238.973 1080.11 247.223 1082.5 250.695 1082.5 c
260.813 1082.5 261.875 1069.18 261.875 1065.2 c
h
238.176 1063.06 m
265.875 1063.06 l
268.004 1063.06 268.535 1063.06 268.535 1065.2 c
268.535 1075.04 262.945 1084.63 250.695 1084.63 c
239.242 1084.63 229.926 1074.52 229.926 1062 c
229.926 1048.68 240.313 1039.11 251.766 1039.11 c
264.004 1039.11 268.535 1050.29 268.535 1052.14 c
268.535 1052.95 267.734 1053.21 267.195 1053.21 c
266.133 1053.21 266.133 1052.68 265.875 1051.88 c
262.402 1041.49 253.355 1041.49 252.555 1041.49 c
247.492 1041.49 243.504 1044.7 241.105 1048.15 c
238.176 1052.95 238.176 1059.61 238.176 1063.06 c
f
282.91 1062 m
282.91 1077.98 290.902 1082.23 296.223 1082.23 c
297.023 1082.23 303.41 1082.23 306.871 1078.51 c
302.883 1078.24 302.082 1075.32 302.082 1073.98 c
302.082 1071.32 303.953 1069.46 306.871 1069.46 c
309.273 1069.46 311.402 1071.05 311.402 1073.98 c
311.402 1080.91 303.684 1084.63 296.223 1084.63 c
283.711 1084.63 274.652 1073.98 274.652 1061.73 c
274.652 1048.95 284.512 1039.1 295.961 1039.1 c
309.273 1039.1 312.473 1051.08 312.473 1052.15 c
312.473 1052.95 311.402 1052.95 311.133 1052.95 c
310.344 1052.95 310.07 1052.68 309.801 1052.15 c
306.871 1042.83 300.48 1041.5 296.762 1041.5 c
291.434 1041.5 282.91 1046.02 282.91 1062 c
f
332.438 1079.84 m
346.547 1079.84 l
346.547 1083.03 l
332.438 1083.03 l
332.438 1101.41 l
329.777 1101.41 l
329.777 1093.15 326.848 1082.5 316.996 1082.23 c
316.996 1079.84 l
325.52 1079.84 l
325.52 1052.68 l
325.52 1040.43 334.84 1039.1 338.297 1039.1 c
345.488 1039.1 348.148 1046.29 348.148 1052.68 c
348.148 1058.27 l
345.758 1058.27 l
345.758 1052.68 l
345.758 1045.49 342.828 1041.5 339.098 1041.5 c
332.438 1041.5 332.438 1050.55 332.438 1052.41 c
332.438 1079.84 l
f
371.848 1084.1 m
357.738 1083.04 l
357.738 1079.84 l
364.387 1079.84 365.188 1079.31 365.188 1074.52 c
365.188 1047.89 l
365.188 1043.36 364.129 1043.36 357.469 1043.36 c
357.469 1040.16 l
360.656 1040.43 365.988 1040.43 368.387 1040.43 c
371.848 1040.43 375.309 1040.43 378.77 1040.16 c
378.77 1043.36 l
372.109 1043.36 371.848 1043.89 371.848 1047.62 c
h
372.109 1101.41 m
372.109 1104.6 369.719 1106.73 366.789 1106.73 c
363.859 1106.73 361.727 1104.07 361.727 1101.41 c
361.727 1098.74 363.859 1096.08 366.789 1096.08 c
369.719 1096.08 372.109 1098.21 372.109 1101.41 c
f
429.094 1061.47 m
429.094 1074.25 418.973 1084.63 406.992 1084.63 c
394.742 1084.63 384.895 1073.98 384.895 1061.47 c
384.895 1048.69 395.285 1039.1 406.992 1039.1 c
418.973 1039.1 429.094 1048.96 429.094 1061.47 c
406.992 1041.5 m
402.734 1041.5 398.473 1043.63 395.813 1048.15 c
393.152 1052.68 393.152 1058.8 393.152 1062.27 c
393.152 1066.26 393.152 1071.59 395.543 1075.85 c
398.215 1080.38 403.004 1082.51 406.992 1082.51 c
411.254 1082.51 415.516 1080.38 418.184 1076.11 c
420.844 1071.86 420.844 1066 420.844 1062.27 c
420.844 1058.8 420.844 1053.21 418.445 1048.96 c
416.313 1044.43 412.055 1041.5 406.992 1041.5 c
f
443.211 1074.52 m
443.211 1047.89 l
443.211 1043.37 442.148 1043.37 435.488 1043.37 c
435.488 1040.17 l
438.949 1040.44 444.012 1040.44 446.672 1040.44 c
449.059 1040.44 454.391 1040.44 457.852 1040.17 c
457.852 1043.37 l
451.199 1043.37 449.871 1043.37 449.871 1047.89 c
449.871 1066 l
449.871 1076.39 457.059 1081.98 463.441 1081.98 c
469.57 1081.98 470.641 1076.64 470.641 1071.05 c
470.641 1047.89 l
470.641 1043.37 469.57 1043.37 462.91 1043.37 c
462.91 1040.17 l
466.371 1040.44 471.43 1040.44 474.102 1040.44 c
476.762 1040.44 482.09 1040.44 485.281 1040.17 c
485.281 1043.37 l
480.219 1043.37 477.82 1043.37 477.559 1046.29 c
477.559 1065.2 l
477.559 1073.71 477.559 1076.92 474.629 1080.38 c
473.031 1082.23 469.84 1084.1 463.98 1084.1 c
456.789 1084.1 452.262 1079.85 449.328 1073.71 c
449.328 1084.1 l
435.488 1083.04 l
435.488 1079.85 l
442.41 1079.85 443.211 1079.3 443.211 1074.52 c
f
520.164 1047.89 m
520.691 1043.9 523.352 1039.63 528.152 1039.63 c
530.012 1039.63 536.145 1040.97 536.145 1048.95 c
536.145 1054.55 l
533.742 1054.55 l
533.742 1048.95 l
533.742 1043.36 531.082 1042.83 530.012 1042.83 c
526.824 1042.83 526.555 1047.09 526.555 1047.62 c
526.555 1067.59 l
526.555 1071.85 526.555 1075.58 522.824 1079.31 c
519.102 1083.04 514.031 1084.63 509.242 1084.63 c
500.992 1084.63 494.332 1080.11 494.332 1073.45 c
494.332 1070.52 496.203 1068.93 498.863 1068.93 c
501.523 1068.93 503.383 1070.79 503.383 1073.45 c
503.383 1074.52 502.852 1077.98 498.324 1077.98 c
500.992 1081.44 505.781 1082.5 508.973 1082.5 c
514.031 1082.5 519.633 1078.77 519.633 1069.72 c
519.633 1066.26 l
514.574 1066 507.652 1065.46 501.254 1062.53 c
493.805 1059.34 491.402 1054.01 491.402 1049.75 c
491.402 1041.5 500.992 1039.1 507.383 1039.1 c
513.773 1039.1 518.293 1043.1 520.164 1047.89 c
519.633 1064.13 m
519.633 1054.01 l
519.633 1044.69 512.441 1041.23 507.914 1041.23 c
503.121 1041.23 499.121 1044.69 499.121 1049.75 c
499.121 1055.35 503.121 1063.6 519.633 1064.13 c
f
554.777 1109.13 m
540.398 1108.07 l
540.398 1104.87 l
547.316 1104.87 548.117 1104.34 548.117 1099.55 c
548.117 1047.89 l
548.117 1043.36 547.059 1043.36 540.398 1043.36 c
540.398 1040.17 l
543.855 1040.43 548.918 1040.43 551.586 1040.43 c
553.977 1040.43 558.766 1040.43 562.496 1040.17 c
562.496 1043.36 l
555.836 1043.36 554.777 1043.36 554.777 1047.89 c
554.777 1109.13 l
f
639.453 1073.18 m
640.516 1075.58 642.113 1079.84 648.773 1079.84 c
648.773 1083.03 l
646.375 1082.76 643.445 1082.76 641.316 1082.76 c
638.914 1082.76 634.125 1083.03 632.535 1083.03 c
632.535 1079.84 l
636.254 1079.84 637.324 1077.71 637.324 1075.58 c
637.324 1074.78 637.055 1074.51 636.785 1073.18 c
626.676 1047.89 l
615.496 1075.58 l
614.953 1076.91 614.953 1077.17 614.953 1077.44 c
614.953 1079.84 618.684 1079.84 620.547 1079.84 c
620.547 1083.03 l
617.613 1083.03 612.023 1082.76 609.637 1082.76 c
606.965 1082.76 602.977 1082.76 600.047 1083.03 c
600.047 1079.84 l
606.434 1079.84 606.703 1079.31 608.035 1076.38 c
622.414 1040.96 l
622.945 1039.63 623.203 1039.1 624.547 1039.1 c
625.605 1039.1 626.137 1040.16 626.406 1040.96 c
639.453 1073.18 l
f
667.68 1084.1 m
653.828 1083.04 l
653.828 1079.84 l
660.219 1079.84 661.289 1079.31 661.289 1074.52 c
661.289 1047.89 l
661.289 1043.36 660.219 1043.36 653.566 1043.36 c
653.566 1040.16 l
656.758 1040.43 662.09 1040.43 664.488 1040.43 c
667.949 1040.43 671.406 1040.43 674.598 1040.16 c
674.598 1043.36 l
668.207 1043.36 667.68 1043.89 667.68 1047.62 c
h
668.207 1101.41 m
668.207 1104.6 665.809 1106.73 662.887 1106.73 c
659.957 1106.73 657.559 1104.07 657.559 1101.41 c
657.559 1098.74 659.957 1096.08 662.887 1096.08 c
665.809 1096.08 668.207 1098.21 668.207 1101.41 c
f
689.246 1065.2 m
690.047 1080.11 698.297 1082.5 701.754 1082.5 c
711.887 1082.5 712.945 1069.18 712.945 1065.2 c
h
689.246 1063.06 m
716.945 1063.06 l
719.066 1063.06 719.336 1063.06 719.336 1065.2 c
719.336 1075.04 714.016 1084.63 701.754 1084.63 c
690.047 1084.63 680.996 1074.52 680.996 1062 c
680.996 1048.68 691.375 1039.11 702.824 1039.11 c
715.074 1039.11 719.336 1050.29 719.336 1052.14 c
719.336 1052.95 718.535 1053.21 718.004 1053.21 c
717.203 1053.21 716.945 1052.68 716.945 1051.88 c
713.477 1041.49 704.426 1041.49 703.363 1041.49 c
698.566 1041.49 694.574 1044.7 692.176 1048.15 c
689.246 1052.95 689.246 1059.61 689.246 1063.06 c
f
783.77 1073.71 m
785.371 1078.5 788.563 1079.84 792.031 1079.84 c
792.031 1083.04 l
789.902 1082.77 786.973 1082.77 784.84 1082.77 c
781.91 1082.77 777.383 1083.04 775.52 1083.04 c
775.52 1079.84 l
779.242 1079.84 781.383 1077.98 781.383 1075.32 c
781.383 1074.52 781.383 1074.52 780.852 1073.18 c
771.793 1047.63 l
761.941 1075.32 l
761.41 1076.64 761.41 1076.91 761.41 1077.18 c
761.41 1079.84 765.402 1079.84 767.27 1079.84 c
767.27 1083.04 l
764.34 1083.04 759.27 1082.77 756.883 1082.77 c
753.949 1082.77 751.02 1082.77 748.09 1083.04 c
748.09 1079.84 l
751.82 1079.84 753.422 1079.84 754.48 1078.5 c
754.75 1077.98 756.082 1074.77 756.609 1072.91 c
748.09 1048.95 l
738.77 1075.59 l
738.242 1076.64 738.242 1076.91 738.242 1077.18 c
738.242 1079.84 741.973 1079.84 744.102 1079.84 c
744.102 1083.04 l
741.172 1083.04 735.582 1082.77 733.18 1082.77 c
732.922 1082.77 727.59 1082.77 723.859 1083.04 c
723.859 1079.84 l
728.922 1079.84 730.25 1079.57 731.313 1076.39 c
743.832 1041.23 l
744.371 1039.91 744.633 1039.11 745.961 1039.11 c
747.301 1039.11 747.563 1039.64 747.832 1041.23 c
757.941 1069.18 l
768.063 1040.96 l
768.59 1039.91 768.859 1039.11 770.191 1039.11 c
771.262 1039.11 771.793 1040.16 772.063 1040.96 c
783.77 1073.71 l
f
Q
0 0 0 0.75 K
0 0 0 0.75 k
414.129 463.629 170.07 28.3398 re
f
555.852 350.238 85.0391 28.3516 re
f
0 1 1 0.25 K
0 1 1 0.25 k
555.859 378.59 28.3398 85.0391 re
f
7.5 w
10 M
0 0 0 1 k
0 0 0 1 K
555.859 378.59 28.3398 85.0391 re
S
0 0 0 0.75 K
0 0 0 0.75 k
357.43 350.238 85.0391 28.3516 re
f
0 1 1 0.25 K
0 1 1 0.25 k
414.121 378.59 28.3477 85.0391 re
f
0 0 0 1 k
0 0 0 1 K
414.121 378.59 28.3477 85.0391 re
S
357.43 350.238 85.0391 28.3516 re
S
555.852 350.238 85.0391 28.3516 re
S
414.16 463.629 170.039 28.3398 re
S
0 0 0 0.199951 K
0 0 0 0.199951 k
1244.06 209.891 410.191 141.73 re
f*
2.16 w
22.926 M
0 0 0 1 k
0 0 0 1 K
1244.06 209.891 410.191 141.73 re
S
0 0 0 0.199951 K
0 0 0 0.199951 k
1241.56 347.211 411.781 475.508 re
f*
0 0 0 1 k
0 0 0 1 K
1241.56 347.211 411.781 475.508 re
S
0 0 0 0.199951 K
0 0 0 0.199951 k
1243.15 823 410.191 141.73 re
f*
0 0 0 1 k
0 0 0 1 K
1243.15 823 410.191 141.73 re
S
1431.8 161.82 32.2188 850.961 re
f*
5.67 w
1431.8 161.82 32.2188 850.961 re
S
0 0 0 0.75 K
0 0 0 0.75 k
1362.42 463.719 170.066 28.3516 re
f
1504.15 350.34 85.043 28.3516 re
f
0 1 1 0.25 K
0 1 1 0.25 k
1504.15 378.691 28.3398 85.0273 re
f
7.5 w
10 M
0 0 0 1 k
0 0 0 1 K
1504.15 378.691 28.3398 85.0273 re
S
0 0 0 0.75 K
0 0 0 0.75 k
1305.72 350.34 85.043 28.3516 re
f
0 1 1 0.25 K
0 1 1 0.25 k
1362.41 378.691 28.3516 85.0273 re
f
0 0 0 1 k
0 0 0 1 K
1362.41 378.691 28.3516 85.0273 re
S
1305.73 350.34 85.0313 28.3516 re
S
1504.14 350.34 85.0391 28.3516 re
S
1362.45 463.719 170.039 28.3516 re
S
0 0 0 0.199951 K
0 0 0 0.199951 k
2179.91 210.602 410.191 141.727 re
f*
2.16 w
22.926 M
0 0 0 1 k
0 0 0 1 K
2179.91 210.602 410.191 141.727 re
S
0 0 0 0.199951 K
0 0 0 0.199951 k
2177.41 347.93 411.781 475.512 re
f*
0 0 0 1 k
0 0 0 1 K
2177.41 347.93 411.781 475.512 re
S
0 0 0 0.199951 K
0 0 0 0.199951 k
2179 823.711 410.191 141.73 re
f*
0 0 0 1 k
0 0 0 1 K
2179 823.711 410.191 141.73 re
S
5.67 w
2179.12 210.031 411.77 758.719 re
S
2368.9 163.898 32.2227 850.973 re
f*
2368.9 163.898 32.2227 850.973 re
S
0 0 0 0.75 K
0 0 0 0.75 k
2301.23 465.719 170.07 28.3398 re
f
2442.95 352.328 85.0391 28.3438 re
f
0 1 1 0.25 K
0 1 1 0.25 k
2442.96 380.68 28.3398 85.0391 re
f
7.5 w
10 M
0 0 0 1 k
0 0 0 1 K
2442.96 380.68 28.3398 85.0391 re
S
0 0 0 0.75 K
0 0 0 0.75 k
2244.54 352.328 85.0391 28.3438 re
f
0 1 1 0.25 K
0 1 1 0.25 k
2301.23 380.68 28.3477 85.0391 re
f
0 0 0 1 k
0 0 0 1 K
2301.23 380.68 28.3477 85.0391 re
S
2244.53 352.328 85.0391 28.3438 re
S
2442.95 352.328 85.0391 28.3438 re
S
2301.26 465.719 170.039 28.3398 re
S
Q

endstream
endobj
pagesave restore
%%PageTrailer
%%Trailer
end
%%EOF
